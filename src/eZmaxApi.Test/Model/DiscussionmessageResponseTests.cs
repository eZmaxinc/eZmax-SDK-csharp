/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using eZmaxApi.Model;
using eZmaxApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace eZmaxApi.Test.Model
{
    /// <summary>
    ///  Class for testing DiscussionmessageResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DiscussionmessageResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DiscussionmessageResponse
        //private DiscussionmessageResponse instance;

        public DiscussionmessageResponseTests()
        {
            // TODO uncomment below to create an instance of DiscussionmessageResponse
            //instance = new DiscussionmessageResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DiscussionmessageResponse
        /// </summary>
        [Fact]
        public void DiscussionmessageResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" DiscussionmessageResponse
            //Assert.IsType<DiscussionmessageResponse>(instance);
        }

        /// <summary>
        /// Test the property 'PkiDiscussionmessageID'
        /// </summary>
        [Fact]
        public void PkiDiscussionmessageIDTest()
        {
            // TODO unit test for the property 'PkiDiscussionmessageID'
        }

        /// <summary>
        /// Test the property 'FkiDiscussionID'
        /// </summary>
        [Fact]
        public void FkiDiscussionIDTest()
        {
            // TODO unit test for the property 'FkiDiscussionID'
        }

        /// <summary>
        /// Test the property 'FkiDiscussionmembershipID'
        /// </summary>
        [Fact]
        public void FkiDiscussionmembershipIDTest()
        {
            // TODO unit test for the property 'FkiDiscussionmembershipID'
        }

        /// <summary>
        /// Test the property 'FkiDiscussionmembershipIDActionrequired'
        /// </summary>
        [Fact]
        public void FkiDiscussionmembershipIDActionrequiredTest()
        {
            // TODO unit test for the property 'FkiDiscussionmembershipIDActionrequired'
        }

        /// <summary>
        /// Test the property 'EDiscussionmessageStatus'
        /// </summary>
        [Fact]
        public void EDiscussionmessageStatusTest()
        {
            // TODO unit test for the property 'EDiscussionmessageStatus'
        }

        /// <summary>
        /// Test the property 'TDiscussionmessageContent'
        /// </summary>
        [Fact]
        public void TDiscussionmessageContentTest()
        {
            // TODO unit test for the property 'TDiscussionmessageContent'
        }

        /// <summary>
        /// Test the property 'SDiscussionmessageCreatorname'
        /// </summary>
        [Fact]
        public void SDiscussionmessageCreatornameTest()
        {
            // TODO unit test for the property 'SDiscussionmessageCreatorname'
        }

        /// <summary>
        /// Test the property 'SDiscussionmessageActionrequiredname'
        /// </summary>
        [Fact]
        public void SDiscussionmessageActionrequirednameTest()
        {
            // TODO unit test for the property 'SDiscussionmessageActionrequiredname'
        }

        /// <summary>
        /// Test the property 'ObjAudit'
        /// </summary>
        [Fact]
        public void ObjAuditTest()
        {
            // TODO unit test for the property 'ObjAudit'
        }
    }
}
