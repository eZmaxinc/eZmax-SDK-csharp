/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using eZmaxApi.Model;
using eZmaxApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace eZmaxApi.Test.Model
{
    /// <summary>
    ///  Class for testing CommunicationRequestCompound
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CommunicationRequestCompoundTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CommunicationRequestCompound
        //private CommunicationRequestCompound instance;

        public CommunicationRequestCompoundTests()
        {
            // TODO uncomment below to create an instance of CommunicationRequestCompound
            //instance = new CommunicationRequestCompound();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CommunicationRequestCompound
        /// </summary>
        [Fact]
        public void CommunicationRequestCompoundInstanceTest()
        {
            // TODO uncomment below to test "IsType" CommunicationRequestCompound
            //Assert.IsType<CommunicationRequestCompound>(instance);
        }

        /// <summary>
        /// Test the property 'PkiCommunicationID'
        /// </summary>
        [Fact]
        public void PkiCommunicationIDTest()
        {
            // TODO unit test for the property 'PkiCommunicationID'
        }

        /// <summary>
        /// Test the property 'ECommunicationImportance'
        /// </summary>
        [Fact]
        public void ECommunicationImportanceTest()
        {
            // TODO unit test for the property 'ECommunicationImportance'
        }

        /// <summary>
        /// Test the property 'ECommunicationType'
        /// </summary>
        [Fact]
        public void ECommunicationTypeTest()
        {
            // TODO unit test for the property 'ECommunicationType'
        }

        /// <summary>
        /// Test the property 'ObjCommunicationsender'
        /// </summary>
        [Fact]
        public void ObjCommunicationsenderTest()
        {
            // TODO unit test for the property 'ObjCommunicationsender'
        }

        /// <summary>
        /// Test the property 'SCommunicationSubject'
        /// </summary>
        [Fact]
        public void SCommunicationSubjectTest()
        {
            // TODO unit test for the property 'SCommunicationSubject'
        }

        /// <summary>
        /// Test the property 'TCommunicationBody'
        /// </summary>
        [Fact]
        public void TCommunicationBodyTest()
        {
            // TODO unit test for the property 'TCommunicationBody'
        }

        /// <summary>
        /// Test the property 'BCommunicationPrivate'
        /// </summary>
        [Fact]
        public void BCommunicationPrivateTest()
        {
            // TODO unit test for the property 'BCommunicationPrivate'
        }

        /// <summary>
        /// Test the property 'ECommunicationAttachmenttype'
        /// </summary>
        [Fact]
        public void ECommunicationAttachmenttypeTest()
        {
            // TODO unit test for the property 'ECommunicationAttachmenttype'
        }

        /// <summary>
        /// Test the property 'ICommunicationAttachmentlinkexpiration'
        /// </summary>
        [Fact]
        public void ICommunicationAttachmentlinkexpirationTest()
        {
            // TODO unit test for the property 'ICommunicationAttachmentlinkexpiration'
        }

        /// <summary>
        /// Test the property 'BCommunicationReadreceipt'
        /// </summary>
        [Fact]
        public void BCommunicationReadreceiptTest()
        {
            // TODO unit test for the property 'BCommunicationReadreceipt'
        }

        /// <summary>
        /// Test the property 'AObjCommunicationattachment'
        /// </summary>
        [Fact]
        public void AObjCommunicationattachmentTest()
        {
            // TODO unit test for the property 'AObjCommunicationattachment'
        }

        /// <summary>
        /// Test the property 'AObjCommunicationrecipient'
        /// </summary>
        [Fact]
        public void AObjCommunicationrecipientTest()
        {
            // TODO unit test for the property 'AObjCommunicationrecipient'
        }

        /// <summary>
        /// Test the property 'AObjCommunicationreference'
        /// </summary>
        [Fact]
        public void AObjCommunicationreferenceTest()
        {
            // TODO unit test for the property 'AObjCommunicationreference'
        }

        /// <summary>
        /// Test the property 'AObjCommunicationexternalrecipient'
        /// </summary>
        [Fact]
        public void AObjCommunicationexternalrecipientTest()
        {
            // TODO unit test for the property 'AObjCommunicationexternalrecipient'
        }
    }
}
