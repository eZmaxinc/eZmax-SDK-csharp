/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using eZmaxApi.Api;
using eZmaxApi.Model;
using eZmaxApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing TextstylestaticResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TextstylestaticResponseTests
    {
        // TODO uncomment below to declare an instance variable for TextstylestaticResponse
        //private TextstylestaticResponse instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TextstylestaticResponse
            //instance = new TextstylestaticResponse();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TextstylestaticResponse
        /// </summary>
        [Test]
        public void TextstylestaticResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" TextstylestaticResponse
            //Assert.IsInstanceOf(typeof(TextstylestaticResponse), instance);
        }


        /// <summary>
        /// Test the property 'PkiTextstylestaticID'
        /// </summary>
        [Test]
        public void PkiTextstylestaticIDTest()
        {
            // TODO unit test for the property 'PkiTextstylestaticID'
        }
        /// <summary>
        /// Test the property 'FkiFontID'
        /// </summary>
        [Test]
        public void FkiFontIDTest()
        {
            // TODO unit test for the property 'FkiFontID'
        }
        /// <summary>
        /// Test the property 'BTextstylestaticBold'
        /// </summary>
        [Test]
        public void BTextstylestaticBoldTest()
        {
            // TODO unit test for the property 'BTextstylestaticBold'
        }
        /// <summary>
        /// Test the property 'BTextstylestaticUnderline'
        /// </summary>
        [Test]
        public void BTextstylestaticUnderlineTest()
        {
            // TODO unit test for the property 'BTextstylestaticUnderline'
        }
        /// <summary>
        /// Test the property 'BTextstylestaticItalic'
        /// </summary>
        [Test]
        public void BTextstylestaticItalicTest()
        {
            // TODO unit test for the property 'BTextstylestaticItalic'
        }
        /// <summary>
        /// Test the property 'BTextstylestaticStrikethrough'
        /// </summary>
        [Test]
        public void BTextstylestaticStrikethroughTest()
        {
            // TODO unit test for the property 'BTextstylestaticStrikethrough'
        }
        /// <summary>
        /// Test the property 'ITextstylestaticFontcolor'
        /// </summary>
        [Test]
        public void ITextstylestaticFontcolorTest()
        {
            // TODO unit test for the property 'ITextstylestaticFontcolor'
        }
        /// <summary>
        /// Test the property 'ITextstylestaticSize'
        /// </summary>
        [Test]
        public void ITextstylestaticSizeTest()
        {
            // TODO unit test for the property 'ITextstylestaticSize'
        }

    }

}
