/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzdoctemplatedocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzdoctemplatedocumentApiTests : IDisposable
    {
        private ObjectEzdoctemplatedocumentApi instance;

        public ObjectEzdoctemplatedocumentApiTests()
        {
            instance = new ObjectEzdoctemplatedocumentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzdoctemplatedocumentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzdoctemplatedocumentApi
            //Assert.IsType<ObjectEzdoctemplatedocumentApi>(instance);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentCreateObjectV1
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzdoctemplatedocumentCreateObjectV1Request ezdoctemplatedocumentCreateObjectV1Request = null;
            //var response = instance.EzdoctemplatedocumentCreateObjectV1(ezdoctemplatedocumentCreateObjectV1Request);
            //Assert.IsType<EzdoctemplatedocumentCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentDownloadV1
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentDownloadV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzdoctemplatedocumentID = null;
            //instance.EzdoctemplatedocumentDownloadV1(pkiEzdoctemplatedocumentID);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentEditObjectV1
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzdoctemplatedocumentID = null;
            //EzdoctemplatedocumentEditObjectV1Request ezdoctemplatedocumentEditObjectV1Request = null;
            //var response = instance.EzdoctemplatedocumentEditObjectV1(pkiEzdoctemplatedocumentID, ezdoctemplatedocumentEditObjectV1Request);
            //Assert.IsType<EzdoctemplatedocumentEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentGetAutocompleteV2
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentGetAutocompleteV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sSelector = null;
            //string eType = null;
            //string? fkiEzsignfoldertypeID = null;
            //string? eFilterActive = null;
            //string? sQuery = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //var response = instance.EzdoctemplatedocumentGetAutocompleteV2(sSelector, eType, fkiEzsignfoldertypeID, eFilterActive, sQuery, acceptLanguage);
            //Assert.IsType<EzdoctemplatedocumentGetAutocompleteV2Response>(response);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentGetListV1
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.EzdoctemplatedocumentGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<EzdoctemplatedocumentGetListV1Response>(response);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentGetObjectV2
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzdoctemplatedocumentID = null;
            //var response = instance.EzdoctemplatedocumentGetObjectV2(pkiEzdoctemplatedocumentID);
            //Assert.IsType<EzdoctemplatedocumentGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzdoctemplatedocumentPatchObjectV1
        /// </summary>
        [Fact]
        public void EzdoctemplatedocumentPatchObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzdoctemplatedocumentID = null;
            //EzdoctemplatedocumentPatchObjectV1Request ezdoctemplatedocumentPatchObjectV1Request = null;
            //var response = instance.EzdoctemplatedocumentPatchObjectV1(pkiEzdoctemplatedocumentID, ezdoctemplatedocumentPatchObjectV1Request);
            //Assert.IsType<EzdoctemplatedocumentPatchObjectV1Response>(response);
        }
    }
}
