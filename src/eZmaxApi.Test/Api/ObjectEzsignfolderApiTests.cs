/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using eZmaxApi.Client;
using eZmaxApi.Api;
using eZmaxApi.Model;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing ObjectEzsignfolderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsignfolderApiTests
    {
        private ObjectEzsignfolderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectEzsignfolderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectEzsignfolderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectEzsignfolderApi
            //Assert.IsInstanceOf(typeof(ObjectEzsignfolderApi), instance);
        }

        
        /// <summary>
        /// Test EzsignfolderArchiveV1
        /// </summary>
        [Test]
        public void EzsignfolderArchiveV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderArchiveV1(pkiEzsignfolderID, body);
            //Assert.IsInstanceOf(typeof(EzsignfolderArchiveV1Response), response, "response is EzsignfolderArchiveV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderBatchDownloadV1
        /// </summary>
        [Test]
        public void EzsignfolderBatchDownloadV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderBatchDownloadV1Request ezsignfolderBatchDownloadV1Request = null;
            //var response = instance.EzsignfolderBatchDownloadV1(pkiEzsignfolderID, ezsignfolderBatchDownloadV1Request);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test EzsignfolderCreateObjectV1
        /// </summary>
        [Test]
        public void EzsignfolderCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsignfolderCreateObjectV1Request> ezsignfolderCreateObjectV1Request = null;
            //var response = instance.EzsignfolderCreateObjectV1(ezsignfolderCreateObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderCreateObjectV1Response), response, "response is EzsignfolderCreateObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderCreateObjectV2
        /// </summary>
        [Test]
        public void EzsignfolderCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignfolderCreateObjectV2Request ezsignfolderCreateObjectV2Request = null;
            //var response = instance.EzsignfolderCreateObjectV2(ezsignfolderCreateObjectV2Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderCreateObjectV2Response), response, "response is EzsignfolderCreateObjectV2Response");
        }
        
        /// <summary>
        /// Test EzsignfolderDeleteObjectV1
        /// </summary>
        [Test]
        public void EzsignfolderDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderDeleteObjectV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderDeleteObjectV1Response), response, "response is EzsignfolderDeleteObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderDisposeEzsignfoldersV1
        /// </summary>
        [Test]
        public void EzsignfolderDisposeEzsignfoldersV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignfolderDisposeEzsignfoldersV1Request ezsignfolderDisposeEzsignfoldersV1Request = null;
            //var response = instance.EzsignfolderDisposeEzsignfoldersV1(ezsignfolderDisposeEzsignfoldersV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderDisposeEzsignfoldersV1Response), response, "response is EzsignfolderDisposeEzsignfoldersV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderDisposeV1
        /// </summary>
        [Test]
        public void EzsignfolderDisposeV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderDisposeV1(pkiEzsignfolderID, body);
            //Assert.IsInstanceOf(typeof(EzsignfolderDisposeV1Response), response, "response is EzsignfolderDisposeV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderEditObjectV1
        /// </summary>
        [Test]
        public void EzsignfolderEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderEditObjectV1Request ezsignfolderEditObjectV1Request = null;
            //var response = instance.EzsignfolderEditObjectV1(pkiEzsignfolderID, ezsignfolderEditObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderEditObjectV1Response), response, "response is EzsignfolderEditObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetActionableElementsV1
        /// </summary>
        [Test]
        public void EzsignfolderGetActionableElementsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetActionableElementsV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetActionableElementsV1Response), response, "response is EzsignfolderGetActionableElementsV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetCommunicationCountV1
        /// </summary>
        [Test]
        public void EzsignfolderGetCommunicationCountV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetCommunicationCountV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetCommunicationCountV1Response), response, "response is EzsignfolderGetCommunicationCountV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetCommunicationListV1
        /// </summary>
        [Test]
        public void EzsignfolderGetCommunicationListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetCommunicationListV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetCommunicationListV1Response), response, "response is EzsignfolderGetCommunicationListV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetEzsigndocumentsV1
        /// </summary>
        [Test]
        public void EzsignfolderGetEzsigndocumentsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsigndocumentsV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetEzsigndocumentsV1Response), response, "response is EzsignfolderGetEzsigndocumentsV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetEzsignfoldersignerassociationsV1
        /// </summary>
        [Test]
        public void EzsignfolderGetEzsignfoldersignerassociationsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsignfoldersignerassociationsV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetEzsignfoldersignerassociationsV1Response), response, "response is EzsignfolderGetEzsignfoldersignerassociationsV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetEzsignfoldersignerassociationsmineV1
        /// </summary>
        [Test]
        public void EzsignfolderGetEzsignfoldersignerassociationsmineV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsignfoldersignerassociationsmineV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetEzsignfoldersignerassociationsmineV1Response), response, "response is EzsignfolderGetEzsignfoldersignerassociationsmineV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetEzsignsignaturesAutomaticV1
        /// </summary>
        [Test]
        public void EzsignfolderGetEzsignsignaturesAutomaticV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsignsignaturesAutomaticV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetEzsignsignaturesAutomaticV1Response), response, "response is EzsignfolderGetEzsignsignaturesAutomaticV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetFormsDataV1
        /// </summary>
        [Test]
        public void EzsignfolderGetFormsDataV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetFormsDataV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetFormsDataV1Response), response, "response is EzsignfolderGetFormsDataV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetListV1
        /// </summary>
        [Test]
        public void EzsignfolderGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.EzsignfolderGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetListV1Response), response, "response is EzsignfolderGetListV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetObjectV1
        /// </summary>
        [Test]
        public void EzsignfolderGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetObjectV1(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetObjectV1Response), response, "response is EzsignfolderGetObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderGetObjectV2
        /// </summary>
        [Test]
        public void EzsignfolderGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetObjectV2(pkiEzsignfolderID);
            //Assert.IsInstanceOf(typeof(EzsignfolderGetObjectV2Response), response, "response is EzsignfolderGetObjectV2Response");
        }
        
        /// <summary>
        /// Test EzsignfolderImportEzsignfoldersignerassociationsV1
        /// </summary>
        [Test]
        public void EzsignfolderImportEzsignfoldersignerassociationsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderImportEzsignfoldersignerassociationsV1Request ezsignfolderImportEzsignfoldersignerassociationsV1Request = null;
            //var response = instance.EzsignfolderImportEzsignfoldersignerassociationsV1(pkiEzsignfolderID, ezsignfolderImportEzsignfoldersignerassociationsV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderImportEzsignfoldersignerassociationsV1Response), response, "response is EzsignfolderImportEzsignfoldersignerassociationsV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderImportEzsigntemplatepackageV1
        /// </summary>
        [Test]
        public void EzsignfolderImportEzsigntemplatepackageV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderImportEzsigntemplatepackageV1Request ezsignfolderImportEzsigntemplatepackageV1Request = null;
            //var response = instance.EzsignfolderImportEzsigntemplatepackageV1(pkiEzsignfolderID, ezsignfolderImportEzsigntemplatepackageV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderImportEzsigntemplatepackageV1Response), response, "response is EzsignfolderImportEzsigntemplatepackageV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderReorderV1
        /// </summary>
        [Test]
        public void EzsignfolderReorderV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderReorderV1Request ezsignfolderReorderV1Request = null;
            //var response = instance.EzsignfolderReorderV1(pkiEzsignfolderID, ezsignfolderReorderV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderReorderV1Response), response, "response is EzsignfolderReorderV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderSendV1
        /// </summary>
        [Test]
        public void EzsignfolderSendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV1Request ezsignfolderSendV1Request = null;
            //var response = instance.EzsignfolderSendV1(pkiEzsignfolderID, ezsignfolderSendV1Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderSendV1Response), response, "response is EzsignfolderSendV1Response");
        }
        
        /// <summary>
        /// Test EzsignfolderSendV2
        /// </summary>
        [Test]
        public void EzsignfolderSendV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV2Request ezsignfolderSendV2Request = null;
            //var response = instance.EzsignfolderSendV2(pkiEzsignfolderID, ezsignfolderSendV2Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderSendV2Response), response, "response is EzsignfolderSendV2Response");
        }
        
        /// <summary>
        /// Test EzsignfolderSendV3
        /// </summary>
        [Test]
        public void EzsignfolderSendV3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV3Request ezsignfolderSendV3Request = null;
            //var response = instance.EzsignfolderSendV3(pkiEzsignfolderID, ezsignfolderSendV3Request);
            //Assert.IsInstanceOf(typeof(EzsignfolderSendV3Response), response, "response is EzsignfolderSendV3Response");
        }
        
        /// <summary>
        /// Test EzsignfolderUnsendV1
        /// </summary>
        [Test]
        public void EzsignfolderUnsendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderUnsendV1(pkiEzsignfolderID, body);
            //Assert.IsInstanceOf(typeof(EzsignfolderUnsendV1Response), response, "response is EzsignfolderUnsendV1Response");
        }
        
    }

}
