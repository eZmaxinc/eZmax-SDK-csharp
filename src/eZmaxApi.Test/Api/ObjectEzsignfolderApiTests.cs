/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzsignfolderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsignfolderApiTests : IDisposable
    {
        private ObjectEzsignfolderApi instance;

        public ObjectEzsignfolderApiTests()
        {
            instance = new ObjectEzsignfolderApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzsignfolderApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzsignfolderApi
            //Assert.IsType<ObjectEzsignfolderApi>(instance);
        }

        /// <summary>
        /// Test EzsignfolderArchiveV1
        /// </summary>
        [Fact]
        public void EzsignfolderArchiveV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderArchiveV1(pkiEzsignfolderID, body);
            //Assert.IsType<EzsignfolderArchiveV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderBatchDownloadV1
        /// </summary>
        [Fact]
        public void EzsignfolderBatchDownloadV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderBatchDownloadV1Request ezsignfolderBatchDownloadV1Request = null;
            //var response = instance.EzsignfolderBatchDownloadV1(pkiEzsignfolderID, ezsignfolderBatchDownloadV1Request);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test EzsignfolderCreateObjectV1
        /// </summary>
        [Fact]
        public void EzsignfolderCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsignfolderCreateObjectV1Request> ezsignfolderCreateObjectV1Request = null;
            //var response = instance.EzsignfolderCreateObjectV1(ezsignfolderCreateObjectV1Request);
            //Assert.IsType<EzsignfolderCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderCreateObjectV2
        /// </summary>
        [Fact]
        public void EzsignfolderCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignfolderCreateObjectV2Request ezsignfolderCreateObjectV2Request = null;
            //var response = instance.EzsignfolderCreateObjectV2(ezsignfolderCreateObjectV2Request);
            //Assert.IsType<EzsignfolderCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderDeleteObjectV1
        /// </summary>
        [Fact]
        public void EzsignfolderDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderDeleteObjectV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderDisposeEzsignfoldersV1
        /// </summary>
        [Fact]
        public void EzsignfolderDisposeEzsignfoldersV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignfolderDisposeEzsignfoldersV1Request ezsignfolderDisposeEzsignfoldersV1Request = null;
            //var response = instance.EzsignfolderDisposeEzsignfoldersV1(ezsignfolderDisposeEzsignfoldersV1Request);
            //Assert.IsType<EzsignfolderDisposeEzsignfoldersV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderDisposeV1
        /// </summary>
        [Fact]
        public void EzsignfolderDisposeV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderDisposeV1(pkiEzsignfolderID, body);
            //Assert.IsType<EzsignfolderDisposeV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderEditObjectV1
        /// </summary>
        [Fact]
        public void EzsignfolderEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderEditObjectV1Request ezsignfolderEditObjectV1Request = null;
            //var response = instance.EzsignfolderEditObjectV1(pkiEzsignfolderID, ezsignfolderEditObjectV1Request);
            //Assert.IsType<EzsignfolderEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetActionableElementsV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetActionableElementsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetActionableElementsV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetActionableElementsV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetCommunicationCountV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetCommunicationCountV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetCommunicationCountV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetCommunicationCountV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetCommunicationListV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetCommunicationListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetCommunicationListV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetCommunicationListV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetEzsigndocumentsV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetEzsigndocumentsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsigndocumentsV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetEzsigndocumentsV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetEzsignfoldersignerassociationsV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetEzsignfoldersignerassociationsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsignfoldersignerassociationsV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetEzsignfoldersignerassociationsV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetEzsignsignaturesAutomaticV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetEzsignsignaturesAutomaticV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetEzsignsignaturesAutomaticV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetEzsignsignaturesAutomaticV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetFormsDataV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetFormsDataV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetFormsDataV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetFormsDataV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetListV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.EzsignfolderGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<EzsignfolderGetListV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetObjectV1
        /// </summary>
        [Fact]
        public void EzsignfolderGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetObjectV1(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderGetObjectV2
        /// </summary>
        [Fact]
        public void EzsignfolderGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //var response = instance.EzsignfolderGetObjectV2(pkiEzsignfolderID);
            //Assert.IsType<EzsignfolderGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderImportEzsignfoldersignerassociationsV1
        /// </summary>
        [Fact]
        public void EzsignfolderImportEzsignfoldersignerassociationsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderImportEzsignfoldersignerassociationsV1Request ezsignfolderImportEzsignfoldersignerassociationsV1Request = null;
            //var response = instance.EzsignfolderImportEzsignfoldersignerassociationsV1(pkiEzsignfolderID, ezsignfolderImportEzsignfoldersignerassociationsV1Request);
            //Assert.IsType<EzsignfolderImportEzsignfoldersignerassociationsV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderImportEzsigntemplatepackageV1
        /// </summary>
        [Fact]
        public void EzsignfolderImportEzsigntemplatepackageV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderImportEzsigntemplatepackageV1Request ezsignfolderImportEzsigntemplatepackageV1Request = null;
            //var response = instance.EzsignfolderImportEzsigntemplatepackageV1(pkiEzsignfolderID, ezsignfolderImportEzsigntemplatepackageV1Request);
            //Assert.IsType<EzsignfolderImportEzsigntemplatepackageV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderReorderV1
        /// </summary>
        [Fact]
        public void EzsignfolderReorderV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderReorderV1Request ezsignfolderReorderV1Request = null;
            //var response = instance.EzsignfolderReorderV1(pkiEzsignfolderID, ezsignfolderReorderV1Request);
            //Assert.IsType<EzsignfolderReorderV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderSendV1
        /// </summary>
        [Fact]
        public void EzsignfolderSendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV1Request ezsignfolderSendV1Request = null;
            //var response = instance.EzsignfolderSendV1(pkiEzsignfolderID, ezsignfolderSendV1Request);
            //Assert.IsType<EzsignfolderSendV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderSendV2
        /// </summary>
        [Fact]
        public void EzsignfolderSendV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV2Request ezsignfolderSendV2Request = null;
            //var response = instance.EzsignfolderSendV2(pkiEzsignfolderID, ezsignfolderSendV2Request);
            //Assert.IsType<EzsignfolderSendV2Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderSendV3
        /// </summary>
        [Fact]
        public void EzsignfolderSendV3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //EzsignfolderSendV3Request ezsignfolderSendV3Request = null;
            //var response = instance.EzsignfolderSendV3(pkiEzsignfolderID, ezsignfolderSendV3Request);
            //Assert.IsType<EzsignfolderSendV3Response>(response);
        }

        /// <summary>
        /// Test EzsignfolderUnsendV1
        /// </summary>
        [Fact]
        public void EzsignfolderUnsendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfolderID = null;
            //Object body = null;
            //var response = instance.EzsignfolderUnsendV1(pkiEzsignfolderID, body);
            //Assert.IsType<EzsignfolderUnsendV1Response>(response);
        }
    }
}
