/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzsignfoldersignerassociationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsignfoldersignerassociationApiTests : IDisposable
    {
        private ObjectEzsignfoldersignerassociationApi instance;

        public ObjectEzsignfoldersignerassociationApiTests()
        {
            instance = new ObjectEzsignfoldersignerassociationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzsignfoldersignerassociationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzsignfoldersignerassociationApi
            //Assert.IsType<ObjectEzsignfoldersignerassociationApi>(instance);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationCreateEmbeddedUrlV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationCreateEmbeddedUrlV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //EzsignfoldersignerassociationCreateEmbeddedUrlV1Request ezsignfoldersignerassociationCreateEmbeddedUrlV1Request = null;
            //var response = instance.EzsignfoldersignerassociationCreateEmbeddedUrlV1(pkiEzsignfoldersignerassociationID, ezsignfoldersignerassociationCreateEmbeddedUrlV1Request);
            //Assert.IsType<EzsignfoldersignerassociationCreateEmbeddedUrlV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationCreateObjectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsignfoldersignerassociationCreateObjectV1Request> ezsignfoldersignerassociationCreateObjectV1Request = null;
            //var response = instance.EzsignfoldersignerassociationCreateObjectV1(ezsignfoldersignerassociationCreateObjectV1Request);
            //Assert.IsType<EzsignfoldersignerassociationCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationCreateObjectV2
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignfoldersignerassociationCreateObjectV2Request ezsignfoldersignerassociationCreateObjectV2Request = null;
            //var response = instance.EzsignfoldersignerassociationCreateObjectV2(ezsignfoldersignerassociationCreateObjectV2Request);
            //Assert.IsType<EzsignfoldersignerassociationCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationDeleteObjectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //var response = instance.EzsignfoldersignerassociationDeleteObjectV1(pkiEzsignfoldersignerassociationID);
            //Assert.IsType<EzsignfoldersignerassociationDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationEditObjectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //EzsignfoldersignerassociationEditObjectV1Request ezsignfoldersignerassociationEditObjectV1Request = null;
            //var response = instance.EzsignfoldersignerassociationEditObjectV1(pkiEzsignfoldersignerassociationID, ezsignfoldersignerassociationEditObjectV1Request);
            //Assert.IsType<EzsignfoldersignerassociationEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationForceDisconnectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationForceDisconnectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //Object body = null;
            //var response = instance.EzsignfoldersignerassociationForceDisconnectV1(pkiEzsignfoldersignerassociationID, body);
            //Assert.IsType<EzsignfoldersignerassociationForceDisconnectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationGetInPersonLoginUrlV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationGetInPersonLoginUrlV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //var response = instance.EzsignfoldersignerassociationGetInPersonLoginUrlV1(pkiEzsignfoldersignerassociationID);
            //Assert.IsType<EzsignfoldersignerassociationGetInPersonLoginUrlV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationGetObjectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //var response = instance.EzsignfoldersignerassociationGetObjectV1(pkiEzsignfoldersignerassociationID);
            //Assert.IsType<EzsignfoldersignerassociationGetObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationGetObjectV2
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //var response = instance.EzsignfoldersignerassociationGetObjectV2(pkiEzsignfoldersignerassociationID);
            //Assert.IsType<EzsignfoldersignerassociationGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationPatchObjectV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationPatchObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //EzsignfoldersignerassociationPatchObjectV1Request ezsignfoldersignerassociationPatchObjectV1Request = null;
            //var response = instance.EzsignfoldersignerassociationPatchObjectV1(pkiEzsignfoldersignerassociationID, ezsignfoldersignerassociationPatchObjectV1Request);
            //Assert.IsType<EzsignfoldersignerassociationPatchObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignfoldersignerassociationReassignV1
        /// </summary>
        [Fact]
        public void EzsignfoldersignerassociationReassignV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignfoldersignerassociationID = null;
            //EzsignfoldersignerassociationReassignV1Request ezsignfoldersignerassociationReassignV1Request = null;
            //var response = instance.EzsignfoldersignerassociationReassignV1(pkiEzsignfoldersignerassociationID, ezsignfoldersignerassociationReassignV1Request);
            //Assert.IsType<EzsignfoldersignerassociationReassignV1Response>(response);
        }
    }
}
