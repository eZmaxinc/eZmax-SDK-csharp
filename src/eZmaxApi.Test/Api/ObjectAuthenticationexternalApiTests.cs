/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectAuthenticationexternalApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectAuthenticationexternalApiTests : IDisposable
    {
        private ObjectAuthenticationexternalApi instance;

        public ObjectAuthenticationexternalApiTests()
        {
            instance = new ObjectAuthenticationexternalApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectAuthenticationexternalApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectAuthenticationexternalApi
            //Assert.IsType<ObjectAuthenticationexternalApi>(instance);
        }

        /// <summary>
        /// Test AuthenticationexternalCreateObjectV1
        /// </summary>
        [Fact]
        public void AuthenticationexternalCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AuthenticationexternalCreateObjectV1Request authenticationexternalCreateObjectV1Request = null;
            //var response = instance.AuthenticationexternalCreateObjectV1(authenticationexternalCreateObjectV1Request);
            //Assert.IsType<AuthenticationexternalCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalDeleteObjectV1
        /// </summary>
        [Fact]
        public void AuthenticationexternalDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiAuthenticationexternalID = null;
            //var response = instance.AuthenticationexternalDeleteObjectV1(pkiAuthenticationexternalID);
            //Assert.IsType<AuthenticationexternalDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalEditObjectV1
        /// </summary>
        [Fact]
        public void AuthenticationexternalEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiAuthenticationexternalID = null;
            //AuthenticationexternalEditObjectV1Request authenticationexternalEditObjectV1Request = null;
            //var response = instance.AuthenticationexternalEditObjectV1(pkiAuthenticationexternalID, authenticationexternalEditObjectV1Request);
            //Assert.IsType<AuthenticationexternalEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalGetAutocompleteV2
        /// </summary>
        [Fact]
        public void AuthenticationexternalGetAutocompleteV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sSelector = null;
            //string? eFilterActive = null;
            //string? sQuery = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //var response = instance.AuthenticationexternalGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage);
            //Assert.IsType<AuthenticationexternalGetAutocompleteV2Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalGetListV1
        /// </summary>
        [Fact]
        public void AuthenticationexternalGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.AuthenticationexternalGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<AuthenticationexternalGetListV1Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalGetObjectV2
        /// </summary>
        [Fact]
        public void AuthenticationexternalGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiAuthenticationexternalID = null;
            //var response = instance.AuthenticationexternalGetObjectV2(pkiAuthenticationexternalID);
            //Assert.IsType<AuthenticationexternalGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test AuthenticationexternalResetAuthorizationV1
        /// </summary>
        [Fact]
        public void AuthenticationexternalResetAuthorizationV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiAuthenticationexternalID = null;
            //Object body = null;
            //var response = instance.AuthenticationexternalResetAuthorizationV1(pkiAuthenticationexternalID, body);
            //Assert.IsType<AuthenticationexternalResetAuthorizationV1Response>(response);
        }
    }
}
