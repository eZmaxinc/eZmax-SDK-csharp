/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using eZmaxApi.Client;
using eZmaxApi.Api;
using eZmaxApi.Model;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing ObjectEzsigntemplatedocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsigntemplatedocumentApiTests
    {
        private ObjectEzsigntemplatedocumentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectEzsigntemplatedocumentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectEzsigntemplatedocumentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectEzsigntemplatedocumentApi
            //Assert.IsInstanceOf(typeof(ObjectEzsigntemplatedocumentApi), instance);
        }

        
        /// <summary>
        /// Test EzsigntemplatedocumentCreateObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigntemplatedocumentCreateObjectV1Request ezsigntemplatedocumentCreateObjectV1Request = null;
            //var response = instance.EzsigntemplatedocumentCreateObjectV1(ezsigntemplatedocumentCreateObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentCreateObjectV1Response), response, "response is EzsigntemplatedocumentCreateObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request ezsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request = null;
            //var response = instance.EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1(pkiEzsigntemplatedocumentID, ezsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response), response, "response is EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentEditEzsigntemplatesignaturesV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request ezsigntemplatedocumentEditEzsigntemplatesignaturesV1Request = null;
            //var response = instance.EzsigntemplatedocumentEditEzsigntemplatesignaturesV1(pkiEzsigntemplatedocumentID, ezsigntemplatedocumentEditEzsigntemplatesignaturesV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response), response, "response is EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentEditObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //EzsigntemplatedocumentEditObjectV1Request ezsigntemplatedocumentEditObjectV1Request = null;
            //var response = instance.EzsigntemplatedocumentEditObjectV1(pkiEzsigntemplatedocumentID, ezsigntemplatedocumentEditObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentEditObjectV1Response), response, "response is EzsigntemplatedocumentEditObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //var response = instance.EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1(pkiEzsigntemplatedocumentID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response), response, "response is EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //var response = instance.EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1(pkiEzsigntemplatedocumentID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response), response, "response is EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetEzsigntemplatesignaturesV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //var response = instance.EzsigntemplatedocumentGetEzsigntemplatesignaturesV1(pkiEzsigntemplatedocumentID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response), response, "response is EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //var response = instance.EzsigntemplatedocumentGetObjectV1(pkiEzsigntemplatedocumentID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetObjectV1Response), response, "response is EzsigntemplatedocumentGetObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetObjectV2
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //var response = instance.EzsigntemplatedocumentGetObjectV2(pkiEzsigntemplatedocumentID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetObjectV2Response), response, "response is EzsigntemplatedocumentGetObjectV2Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentGetWordsPositionsV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentGetWordsPositionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //EzsigntemplatedocumentGetWordsPositionsV1Request ezsigntemplatedocumentGetWordsPositionsV1Request = null;
            //var response = instance.EzsigntemplatedocumentGetWordsPositionsV1(pkiEzsigntemplatedocumentID, ezsigntemplatedocumentGetWordsPositionsV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentGetWordsPositionsV1Response), response, "response is EzsigntemplatedocumentGetWordsPositionsV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatedocumentPatchObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatedocumentPatchObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatedocumentID = null;
            //EzsigntemplatedocumentPatchObjectV1Request ezsigntemplatedocumentPatchObjectV1Request = null;
            //var response = instance.EzsigntemplatedocumentPatchObjectV1(pkiEzsigntemplatedocumentID, ezsigntemplatedocumentPatchObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatedocumentPatchObjectV1Response), response, "response is EzsigntemplatedocumentPatchObjectV1Response");
        }
        
    }

}
