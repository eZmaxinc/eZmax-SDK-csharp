/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzsigntemplatepublicApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsigntemplatepublicApiTests : IDisposable
    {
        private ObjectEzsigntemplatepublicApi instance;

        public ObjectEzsigntemplatepublicApiTests()
        {
            instance = new ObjectEzsigntemplatepublicApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzsigntemplatepublicApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzsigntemplatepublicApi
            //Assert.IsType<ObjectEzsigntemplatepublicApi>(instance);
        }

        /// <summary>
        /// Test EzsigntemplatepublicCreateEzsignfolderV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicCreateEzsignfolderV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigntemplatepublicCreateEzsignfolderV1Request ezsigntemplatepublicCreateEzsignfolderV1Request = null;
            //var response = instance.EzsigntemplatepublicCreateEzsignfolderV1(ezsigntemplatepublicCreateEzsignfolderV1Request);
            //Assert.IsType<EzsigntemplatepublicCreateEzsignfolderV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicCreateObjectV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigntemplatepublicCreateObjectV1Request ezsigntemplatepublicCreateObjectV1Request = null;
            //var response = instance.EzsigntemplatepublicCreateObjectV1(ezsigntemplatepublicCreateObjectV1Request);
            //Assert.IsType<EzsigntemplatepublicCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicEditObjectV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatepublicID = null;
            //EzsigntemplatepublicEditObjectV1Request ezsigntemplatepublicEditObjectV1Request = null;
            //var response = instance.EzsigntemplatepublicEditObjectV1(pkiEzsigntemplatepublicID, ezsigntemplatepublicEditObjectV1Request);
            //Assert.IsType<EzsigntemplatepublicEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1Request ezsigntemplatepublicGetEzsigntemplatepublicDetailsV1Request = null;
            //var response = instance.EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1(ezsigntemplatepublicGetEzsigntemplatepublicDetailsV1Request);
            //Assert.IsType<EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicGetFormsDataV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicGetFormsDataV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatepublicID = null;
            //var response = instance.EzsigntemplatepublicGetFormsDataV1(pkiEzsigntemplatepublicID);
            //Assert.IsType<EzsigntemplatepublicGetFormsDataV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicGetListV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.EzsigntemplatepublicGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<EzsigntemplatepublicGetListV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicGetObjectV2
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatepublicID = null;
            //var response = instance.EzsigntemplatepublicGetObjectV2(pkiEzsigntemplatepublicID);
            //Assert.IsType<EzsigntemplatepublicGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicResetLimitExceededCounterV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicResetLimitExceededCounterV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatepublicID = null;
            //Object body = null;
            //var response = instance.EzsigntemplatepublicResetLimitExceededCounterV1(pkiEzsigntemplatepublicID, body);
            //Assert.IsType<EzsigntemplatepublicResetLimitExceededCounterV1Response>(response);
        }

        /// <summary>
        /// Test EzsigntemplatepublicResetUrlV1
        /// </summary>
        [Fact]
        public void EzsigntemplatepublicResetUrlV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatepublicID = null;
            //Object body = null;
            //var response = instance.EzsigntemplatepublicResetUrlV1(pkiEzsigntemplatepublicID, body);
            //Assert.IsType<EzsigntemplatepublicResetUrlV1Response>(response);
        }
    }
}
