/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectApikeyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectApikeyApiTests : IDisposable
    {
        private ObjectApikeyApi instance;

        public ObjectApikeyApiTests()
        {
            instance = new ObjectApikeyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectApikeyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectApikeyApi
            //Assert.IsType<ObjectApikeyApi>(instance);
        }

        /// <summary>
        /// Test ApikeyCreateObjectV2
        /// </summary>
        [Fact]
        public void ApikeyCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApikeyCreateObjectV2Request apikeyCreateObjectV2Request = null;
            //var response = instance.ApikeyCreateObjectV2(apikeyCreateObjectV2Request);
            //Assert.IsType<ApikeyCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test ApikeyEditObjectV1
        /// </summary>
        [Fact]
        public void ApikeyEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //ApikeyEditObjectV1Request apikeyEditObjectV1Request = null;
            //var response = instance.ApikeyEditObjectV1(pkiApikeyID, apikeyEditObjectV1Request);
            //Assert.IsType<CommonResponse>(response);
        }

        /// <summary>
        /// Test ApikeyEditPermissionsV1
        /// </summary>
        [Fact]
        public void ApikeyEditPermissionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //ApikeyEditPermissionsV1Request apikeyEditPermissionsV1Request = null;
            //var response = instance.ApikeyEditPermissionsV1(pkiApikeyID, apikeyEditPermissionsV1Request);
            //Assert.IsType<ApikeyEditPermissionsV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyGenerateDelegatedCredentialsV1
        /// </summary>
        [Fact]
        public void ApikeyGenerateDelegatedCredentialsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApikeyGenerateDelegatedCredentialsV1Request apikeyGenerateDelegatedCredentialsV1Request = null;
            //var response = instance.ApikeyGenerateDelegatedCredentialsV1(apikeyGenerateDelegatedCredentialsV1Request);
            //Assert.IsType<ApikeyGenerateDelegatedCredentialsV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyGetCorsV1
        /// </summary>
        [Fact]
        public void ApikeyGetCorsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //var response = instance.ApikeyGetCorsV1(pkiApikeyID);
            //Assert.IsType<ApikeyGetCorsV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyGetListV1
        /// </summary>
        [Fact]
        public void ApikeyGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.ApikeyGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<ApikeyGetListV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyGetObjectV2
        /// </summary>
        [Fact]
        public void ApikeyGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //var response = instance.ApikeyGetObjectV2(pkiApikeyID);
            //Assert.IsType<ApikeyGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test ApikeyGetPermissionsV1
        /// </summary>
        [Fact]
        public void ApikeyGetPermissionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //var response = instance.ApikeyGetPermissionsV1(pkiApikeyID);
            //Assert.IsType<ApikeyGetPermissionsV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyGetSubnetsV1
        /// </summary>
        [Fact]
        public void ApikeyGetSubnetsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //var response = instance.ApikeyGetSubnetsV1(pkiApikeyID);
            //Assert.IsType<ApikeyGetSubnetsV1Response>(response);
        }

        /// <summary>
        /// Test ApikeyRegenerateV1
        /// </summary>
        [Fact]
        public void ApikeyRegenerateV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiApikeyID = null;
            //ApikeyRegenerateV1Request apikeyRegenerateV1Request = null;
            //var response = instance.ApikeyRegenerateV1(pkiApikeyID, apikeyRegenerateV1Request);
            //Assert.IsType<ApikeyRegenerateV1Response>(response);
        }
    }
}
