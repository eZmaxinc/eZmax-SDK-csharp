/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectSubnetApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectSubnetApiTests : IDisposable
    {
        private ObjectSubnetApi instance;

        public ObjectSubnetApiTests()
        {
            instance = new ObjectSubnetApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectSubnetApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectSubnetApi
            //Assert.IsType<ObjectSubnetApi>(instance);
        }

        /// <summary>
        /// Test SubnetCreateObjectV1
        /// </summary>
        [Fact]
        public void SubnetCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubnetCreateObjectV1Request subnetCreateObjectV1Request = null;
            //var response = instance.SubnetCreateObjectV1(subnetCreateObjectV1Request);
            //Assert.IsType<SubnetCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test SubnetDeleteObjectV1
        /// </summary>
        [Fact]
        public void SubnetDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiSubnetID = null;
            //var response = instance.SubnetDeleteObjectV1(pkiSubnetID);
            //Assert.IsType<SubnetDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test SubnetEditObjectV1
        /// </summary>
        [Fact]
        public void SubnetEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiSubnetID = null;
            //SubnetEditObjectV1Request subnetEditObjectV1Request = null;
            //var response = instance.SubnetEditObjectV1(pkiSubnetID, subnetEditObjectV1Request);
            //Assert.IsType<SubnetEditObjectV1Response>(response);
        }

        /// <summary>
        /// Test SubnetGetObjectV2
        /// </summary>
        [Fact]
        public void SubnetGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiSubnetID = null;
            //var response = instance.SubnetGetObjectV2(pkiSubnetID);
            //Assert.IsType<SubnetGetObjectV2Response>(response);
        }
    }
}
