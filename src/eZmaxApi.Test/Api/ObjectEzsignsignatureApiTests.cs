/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzsignsignatureApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsignsignatureApiTests : IDisposable
    {
        private ObjectEzsignsignatureApi instance;

        public ObjectEzsignsignatureApiTests()
        {
            instance = new ObjectEzsignsignatureApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzsignsignatureApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzsignsignatureApi
            //Assert.IsType<ObjectEzsignsignatureApi>(instance);
        }

        /// <summary>
        /// Test EzsignsignatureCreateObjectV1
        /// </summary>
        [Fact]
        public void EzsignsignatureCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsignsignatureCreateObjectV1Request> ezsignsignatureCreateObjectV1Request = null;
            //var response = instance.EzsignsignatureCreateObjectV1(ezsignsignatureCreateObjectV1Request);
            //Assert.IsType<EzsignsignatureCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureCreateObjectV2
        /// </summary>
        [Fact]
        public void EzsignsignatureCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignsignatureCreateObjectV2Request ezsignsignatureCreateObjectV2Request = null;
            //var response = instance.EzsignsignatureCreateObjectV2(ezsignsignatureCreateObjectV2Request);
            //Assert.IsType<EzsignsignatureCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureCreateObjectV3
        /// </summary>
        [Fact]
        public void EzsignsignatureCreateObjectV3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsignsignatureCreateObjectV3Request ezsignsignatureCreateObjectV3Request = null;
            //var response = instance.EzsignsignatureCreateObjectV3(ezsignsignatureCreateObjectV3Request);
            //Assert.IsType<EzsignsignatureCreateObjectV3Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureDeleteObjectV1
        /// </summary>
        [Fact]
        public void EzsignsignatureDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignsignatureID = null;
            //var response = instance.EzsignsignatureDeleteObjectV1(pkiEzsignsignatureID);
            //Assert.IsType<EzsignsignatureDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureEditObjectV2
        /// </summary>
        [Fact]
        public void EzsignsignatureEditObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignsignatureID = null;
            //EzsignsignatureEditObjectV2Request ezsignsignatureEditObjectV2Request = null;
            //var response = instance.EzsignsignatureEditObjectV2(pkiEzsignsignatureID, ezsignsignatureEditObjectV2Request);
            //Assert.IsType<EzsignsignatureEditObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureGetEzsignsignatureattachmentV1
        /// </summary>
        [Fact]
        public void EzsignsignatureGetEzsignsignatureattachmentV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignsignatureID = null;
            //var response = instance.EzsignsignatureGetEzsignsignatureattachmentV1(pkiEzsignsignatureID);
            //Assert.IsType<EzsignsignatureGetEzsignsignatureattachmentV1Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureGetEzsignsignaturesAutomaticV1
        /// </summary>
        [Fact]
        public void EzsignsignatureGetEzsignsignaturesAutomaticV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EzsignsignatureGetEzsignsignaturesAutomaticV1();
            //Assert.IsType<EzsignsignatureGetEzsignsignaturesAutomaticV1Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureGetObjectV3
        /// </summary>
        [Fact]
        public void EzsignsignatureGetObjectV3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignsignatureID = null;
            //var response = instance.EzsignsignatureGetObjectV3(pkiEzsignsignatureID);
            //Assert.IsType<EzsignsignatureGetObjectV3Response>(response);
        }

        /// <summary>
        /// Test EzsignsignatureSignV1
        /// </summary>
        [Fact]
        public void EzsignsignatureSignV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsignsignatureID = null;
            //EzsignsignatureSignV1Request ezsignsignatureSignV1Request = null;
            //var response = instance.EzsignsignatureSignV1(pkiEzsignsignatureID, ezsignsignatureSignV1Request);
            //Assert.IsType<EzsignsignatureSignV1Response>(response);
        }
    }
}
