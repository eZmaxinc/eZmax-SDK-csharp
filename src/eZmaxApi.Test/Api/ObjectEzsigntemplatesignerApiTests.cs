/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using eZmaxApi.Client;
using eZmaxApi.Api;
using eZmaxApi.Model;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing ObjectEzsigntemplatesignerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsigntemplatesignerApiTests
    {
        private ObjectEzsigntemplatesignerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectEzsigntemplatesignerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectEzsigntemplatesignerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectEzsigntemplatesignerApi
            //Assert.IsInstanceOf(typeof(ObjectEzsigntemplatesignerApi), instance);
        }

        
        /// <summary>
        /// Test EzsigntemplatesignerCreateObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatesignerCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigntemplatesignerCreateObjectV1Request ezsigntemplatesignerCreateObjectV1Request = null;
            //var response = instance.EzsigntemplatesignerCreateObjectV1(ezsigntemplatesignerCreateObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatesignerCreateObjectV1Response), response, "response is EzsigntemplatesignerCreateObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatesignerDeleteObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatesignerDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatesignerID = null;
            //var response = instance.EzsigntemplatesignerDeleteObjectV1(pkiEzsigntemplatesignerID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatesignerDeleteObjectV1Response), response, "response is EzsigntemplatesignerDeleteObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatesignerEditObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatesignerEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatesignerID = null;
            //EzsigntemplatesignerEditObjectV1Request ezsigntemplatesignerEditObjectV1Request = null;
            //var response = instance.EzsigntemplatesignerEditObjectV1(pkiEzsigntemplatesignerID, ezsigntemplatesignerEditObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigntemplatesignerEditObjectV1Response), response, "response is EzsigntemplatesignerEditObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatesignerGetObjectV1
        /// </summary>
        [Test]
        public void EzsigntemplatesignerGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatesignerID = null;
            //var response = instance.EzsigntemplatesignerGetObjectV1(pkiEzsigntemplatesignerID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatesignerGetObjectV1Response), response, "response is EzsigntemplatesignerGetObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigntemplatesignerGetObjectV2
        /// </summary>
        [Test]
        public void EzsigntemplatesignerGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigntemplatesignerID = null;
            //var response = instance.EzsigntemplatesignerGetObjectV2(pkiEzsigntemplatesignerID);
            //Assert.IsInstanceOf(typeof(EzsigntemplatesignerGetObjectV2Response), response, "response is EzsigntemplatesignerGetObjectV2Response");
        }
        
    }

}
