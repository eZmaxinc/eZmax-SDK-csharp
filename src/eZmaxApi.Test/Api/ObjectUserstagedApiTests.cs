/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using eZmaxApi.Client;
using eZmaxApi.Api;
using eZmaxApi.Model;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing ObjectUserstagedApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectUserstagedApiTests
    {
        private ObjectUserstagedApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectUserstagedApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectUserstagedApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectUserstagedApi
            //Assert.IsInstanceOf(typeof(ObjectUserstagedApi), instance);
        }

        
        /// <summary>
        /// Test UserstagedCreateUserV1
        /// </summary>
        [Test]
        public void UserstagedCreateUserV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserstagedID = null;
            //Object body = null;
            //var response = instance.UserstagedCreateUserV1(pkiUserstagedID, body);
            //Assert.IsInstanceOf(typeof(UserstagedCreateUserV1Response), response, "response is UserstagedCreateUserV1Response");
        }
        
        /// <summary>
        /// Test UserstagedDeleteObjectV1
        /// </summary>
        [Test]
        public void UserstagedDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserstagedID = null;
            //var response = instance.UserstagedDeleteObjectV1(pkiUserstagedID);
            //Assert.IsInstanceOf(typeof(UserstagedDeleteObjectV1Response), response, "response is UserstagedDeleteObjectV1Response");
        }
        
        /// <summary>
        /// Test UserstagedGetListV1
        /// </summary>
        [Test]
        public void UserstagedGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string sFilter = null;
            //var response = instance.UserstagedGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsInstanceOf(typeof(UserstagedGetListV1Response), response, "response is UserstagedGetListV1Response");
        }
        
        /// <summary>
        /// Test UserstagedGetObjectV2
        /// </summary>
        [Test]
        public void UserstagedGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserstagedID = null;
            //var response = instance.UserstagedGetObjectV2(pkiUserstagedID);
            //Assert.IsInstanceOf(typeof(UserstagedGetObjectV2Response), response, "response is UserstagedGetObjectV2Response");
        }
        
        /// <summary>
        /// Test UserstagedMapV1
        /// </summary>
        [Test]
        public void UserstagedMapV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserstagedID = null;
            //UserstagedMapV1Request userstagedMapV1Request = null;
            //var response = instance.UserstagedMapV1(pkiUserstagedID, userstagedMapV1Request);
            //Assert.IsInstanceOf(typeof(UserstagedMapV1Response), response, "response is UserstagedMapV1Response");
        }
        
    }

}
