/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectUserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectUserApiTests : IDisposable
    {
        private ObjectUserApi instance;

        public ObjectUserApiTests()
        {
            instance = new ObjectUserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectUserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectUserApi
            //Assert.IsType<ObjectUserApi>(instance);
        }

        /// <summary>
        /// Test UserCreateObjectV1
        /// </summary>
        [Fact]
        public void UserCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserCreateObjectV1Request userCreateObjectV1Request = null;
            //var response = instance.UserCreateObjectV1(userCreateObjectV1Request);
            //Assert.IsType<UserCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test UserCreateObjectV2
        /// </summary>
        [Fact]
        public void UserCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserCreateObjectV2Request userCreateObjectV2Request = null;
            //var response = instance.UserCreateObjectV2(userCreateObjectV2Request);
            //Assert.IsType<UserCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test UserEditColleaguesV2
        /// </summary>
        [Fact]
        public void UserEditColleaguesV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //UserEditColleaguesV2Request userEditColleaguesV2Request = null;
            //var response = instance.UserEditColleaguesV2(pkiUserID, userEditColleaguesV2Request);
            //Assert.IsType<UserEditColleaguesV2Response>(response);
        }

        /// <summary>
        /// Test UserEditObjectV1
        /// </summary>
        [Fact]
        public void UserEditObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //UserEditObjectV1Request userEditObjectV1Request = null;
            //var response = instance.UserEditObjectV1(pkiUserID, userEditObjectV1Request);
            //Assert.IsType<CommonResponse>(response);
        }

        /// <summary>
        /// Test UserEditPermissionsV1
        /// </summary>
        [Fact]
        public void UserEditPermissionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //UserEditPermissionsV1Request userEditPermissionsV1Request = null;
            //var response = instance.UserEditPermissionsV1(pkiUserID, userEditPermissionsV1Request);
            //Assert.IsType<UserEditPermissionsV1Response>(response);
        }

        /// <summary>
        /// Test UserGetApikeysV1
        /// </summary>
        [Fact]
        public void UserGetApikeysV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetApikeysV1(pkiUserID);
            //Assert.IsType<UserGetApikeysV1Response>(response);
        }

        /// <summary>
        /// Test UserGetAutocompleteV2
        /// </summary>
        [Fact]
        public void UserGetAutocompleteV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sSelector = null;
            //string? eFilterActive = null;
            //string? sQuery = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //var response = instance.UserGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage);
            //Assert.IsType<UserGetAutocompleteV2Response>(response);
        }

        /// <summary>
        /// Test UserGetColleaguesV2
        /// </summary>
        [Fact]
        public void UserGetColleaguesV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetColleaguesV2(pkiUserID);
            //Assert.IsType<UserGetColleaguesV2Response>(response);
        }

        /// <summary>
        /// Test UserGetEffectivePermissionsV1
        /// </summary>
        [Fact]
        public void UserGetEffectivePermissionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetEffectivePermissionsV1(pkiUserID);
            //Assert.IsType<UserGetEffectivePermissionsV1Response>(response);
        }

        /// <summary>
        /// Test UserGetListV1
        /// </summary>
        [Fact]
        public void UserGetListV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? eOrderBy = null;
            //int? iRowMax = null;
            //int? iRowOffset = null;
            //HeaderAcceptLanguage? acceptLanguage = null;
            //string? sFilter = null;
            //var response = instance.UserGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
            //Assert.IsType<UserGetListV1Response>(response);
        }

        /// <summary>
        /// Test UserGetObjectV2
        /// </summary>
        [Fact]
        public void UserGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetObjectV2(pkiUserID);
            //Assert.IsType<UserGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test UserGetPermissionsV1
        /// </summary>
        [Fact]
        public void UserGetPermissionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetPermissionsV1(pkiUserID);
            //Assert.IsType<UserGetPermissionsV1Response>(response);
        }

        /// <summary>
        /// Test UserGetSubnetsV1
        /// </summary>
        [Fact]
        public void UserGetSubnetsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetSubnetsV1(pkiUserID);
            //Assert.IsType<UserGetSubnetsV1Response>(response);
        }

        /// <summary>
        /// Test UserGetUsergroupexternalsV1
        /// </summary>
        [Fact]
        public void UserGetUsergroupexternalsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetUsergroupexternalsV1(pkiUserID);
            //Assert.IsType<UserGetUsergroupexternalsV1Response>(response);
        }

        /// <summary>
        /// Test UserGetUsergroupsV1
        /// </summary>
        [Fact]
        public void UserGetUsergroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //var response = instance.UserGetUsergroupsV1(pkiUserID);
            //Assert.IsType<UserGetUsergroupsV1Response>(response);
        }

        /// <summary>
        /// Test UserSendPasswordResetV1
        /// </summary>
        [Fact]
        public void UserSendPasswordResetV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiUserID = null;
            //Object body = null;
            //var response = instance.UserSendPasswordResetV1(pkiUserID, body);
            //Assert.IsType<CommonResponse>(response);
        }
    }
}
