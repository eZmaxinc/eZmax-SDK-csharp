/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using eZmaxApi.Client;
using eZmaxApi.Api;
// uncomment below to import models
//using eZmaxApi.Model;

namespace eZmaxApi.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectEzsigndocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsigndocumentApiTests : IDisposable
    {
        private ObjectEzsigndocumentApi instance;

        public ObjectEzsigndocumentApiTests()
        {
            instance = new ObjectEzsigndocumentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectEzsigndocumentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectEzsigndocumentApi
            //Assert.IsType<ObjectEzsigndocumentApi>(instance);
        }

        /// <summary>
        /// Test EzsigndocumentApplyEzsigntemplateV1
        /// </summary>
        [Fact]
        public void EzsigndocumentApplyEzsigntemplateV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentApplyEzsigntemplateV1Request ezsigndocumentApplyEzsigntemplateV1Request = null;
            //var response = instance.EzsigndocumentApplyEzsigntemplateV1(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV1Request);
            //Assert.IsType<EzsigndocumentApplyEzsigntemplateV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentApplyEzsigntemplateV2
        /// </summary>
        [Fact]
        public void EzsigndocumentApplyEzsigntemplateV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentApplyEzsigntemplateV2Request ezsigndocumentApplyEzsigntemplateV2Request = null;
            //var response = instance.EzsigndocumentApplyEzsigntemplateV2(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV2Request);
            //Assert.IsType<EzsigndocumentApplyEzsigntemplateV2Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentCreateEzsignelementsPositionedByWordV1
        /// </summary>
        [Fact]
        public void EzsigndocumentCreateEzsignelementsPositionedByWordV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentCreateEzsignelementsPositionedByWordV1Request ezsigndocumentCreateEzsignelementsPositionedByWordV1Request = null;
            //var response = instance.EzsigndocumentCreateEzsignelementsPositionedByWordV1(pkiEzsigndocumentID, ezsigndocumentCreateEzsignelementsPositionedByWordV1Request);
            //Assert.IsType<EzsigndocumentCreateEzsignelementsPositionedByWordV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentCreateObjectV1
        /// </summary>
        [Fact]
        public void EzsigndocumentCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsigndocumentCreateObjectV1Request> ezsigndocumentCreateObjectV1Request = null;
            //var response = instance.EzsigndocumentCreateObjectV1(ezsigndocumentCreateObjectV1Request);
            //Assert.IsType<EzsigndocumentCreateObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentCreateObjectV2
        /// </summary>
        [Fact]
        public void EzsigndocumentCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigndocumentCreateObjectV2Request ezsigndocumentCreateObjectV2Request = null;
            //var response = instance.EzsigndocumentCreateObjectV2(ezsigndocumentCreateObjectV2Request);
            //Assert.IsType<EzsigndocumentCreateObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentDeclineToSignV1
        /// </summary>
        [Fact]
        public void EzsigndocumentDeclineToSignV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentDeclineToSignV1Request ezsigndocumentDeclineToSignV1Request = null;
            //var response = instance.EzsigndocumentDeclineToSignV1(pkiEzsigndocumentID, ezsigndocumentDeclineToSignV1Request);
            //Assert.IsType<EzsigndocumentDeclineToSignV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentDeleteObjectV1
        /// </summary>
        [Fact]
        public void EzsigndocumentDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentDeleteObjectV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentDeleteObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentEditEzsignformfieldgroupsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentEditEzsignformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentEditEzsignformfieldgroupsV1Request ezsigndocumentEditEzsignformfieldgroupsV1Request = null;
            //var response = instance.EzsigndocumentEditEzsignformfieldgroupsV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignformfieldgroupsV1Request);
            //Assert.IsType<EzsigndocumentEditEzsignformfieldgroupsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentEditEzsignsignaturesV1
        /// </summary>
        [Fact]
        public void EzsigndocumentEditEzsignsignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentEditEzsignsignaturesV1Request ezsigndocumentEditEzsignsignaturesV1Request = null;
            //var response = instance.EzsigndocumentEditEzsignsignaturesV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignsignaturesV1Request);
            //Assert.IsType<EzsigndocumentEditEzsignsignaturesV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentEndPrematurelyV1
        /// </summary>
        [Fact]
        public void EzsigndocumentEndPrematurelyV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //Object body = null;
            //var response = instance.EzsigndocumentEndPrematurelyV1(pkiEzsigndocumentID, body);
            //Assert.IsType<EzsigndocumentEndPrematurelyV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentFlattenV1
        /// </summary>
        [Fact]
        public void EzsigndocumentFlattenV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //Object body = null;
            //var response = instance.EzsigndocumentFlattenV1(pkiEzsigndocumentID, body);
            //Assert.IsType<EzsigndocumentFlattenV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetActionableElementsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetActionableElementsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetActionableElementsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetActionableElementsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetAttachmentsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetAttachmentsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetAttachmentsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetAttachmentsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetCompletedElementsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetCompletedElementsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetCompletedElementsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetCompletedElementsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetDownloadUrlV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetDownloadUrlV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //string eDocumentType = null;
            //var response = instance.EzsigndocumentGetDownloadUrlV1(pkiEzsigndocumentID, eDocumentType);
            //Assert.IsType<EzsigndocumentGetDownloadUrlV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsignannotationsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsignannotationsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignannotationsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsignannotationsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsigndiscussionsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsigndiscussionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsigndiscussionsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsigndiscussionsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsignformfieldgroupsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsignformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignformfieldgroupsV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsignformfieldgroupsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsignpagesV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsignpagesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignpagesV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsignpagesV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsignsignaturesAutomaticV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsignsignaturesAutomaticV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignsignaturesAutomaticV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsignsignaturesAutomaticV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetEzsignsignaturesV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetEzsignsignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignsignaturesV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetEzsignsignaturesV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetFormDataV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetFormDataV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetFormDataV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetFormDataV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetObjectV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetObjectV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetObjectV2
        /// </summary>
        [Fact]
        public void EzsigndocumentGetObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetObjectV2(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetObjectV2Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetTemporaryProofV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetTemporaryProofV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetTemporaryProofV1(pkiEzsigndocumentID);
            //Assert.IsType<EzsigndocumentGetTemporaryProofV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentGetWordsPositionsV1
        /// </summary>
        [Fact]
        public void EzsigndocumentGetWordsPositionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentGetWordsPositionsV1Request ezsigndocumentGetWordsPositionsV1Request = null;
            //var response = instance.EzsigndocumentGetWordsPositionsV1(pkiEzsigndocumentID, ezsigndocumentGetWordsPositionsV1Request);
            //Assert.IsType<EzsigndocumentGetWordsPositionsV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentPatchObjectV1
        /// </summary>
        [Fact]
        public void EzsigndocumentPatchObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentPatchObjectV1Request ezsigndocumentPatchObjectV1Request = null;
            //var response = instance.EzsigndocumentPatchObjectV1(pkiEzsigndocumentID, ezsigndocumentPatchObjectV1Request);
            //Assert.IsType<EzsigndocumentPatchObjectV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentSubmitEzsignformV1
        /// </summary>
        [Fact]
        public void EzsigndocumentSubmitEzsignformV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentSubmitEzsignformV1Request ezsigndocumentSubmitEzsignformV1Request = null;
            //var response = instance.EzsigndocumentSubmitEzsignformV1(pkiEzsigndocumentID, ezsigndocumentSubmitEzsignformV1Request);
            //Assert.IsType<EzsigndocumentSubmitEzsignformV1Response>(response);
        }

        /// <summary>
        /// Test EzsigndocumentUnsendV1
        /// </summary>
        [Fact]
        public void EzsigndocumentUnsendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //Object body = null;
            //var response = instance.EzsigndocumentUnsendV1(pkiEzsigndocumentID, body);
            //Assert.IsType<EzsigndocumentUnsendV1Response>(response);
        }
    }
}
