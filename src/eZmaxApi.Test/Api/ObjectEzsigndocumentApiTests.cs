/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.11
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using eZmaxApi.Client;
using eZmaxApi.Api;
using eZmaxApi.Model;

namespace eZmaxApi.Test
{
    /// <summary>
    ///  Class for testing ObjectEzsigndocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectEzsigndocumentApiTests
    {
        private ObjectEzsigndocumentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectEzsigndocumentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectEzsigndocumentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectEzsigndocumentApi
            //Assert.IsInstanceOf(typeof(ObjectEzsigndocumentApi), instance);
        }

        
        /// <summary>
        /// Test EzsigndocumentApplyEzsigntemplateV1
        /// </summary>
        [Test]
        public void EzsigndocumentApplyEzsigntemplateV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentApplyEzsigntemplateV1Request ezsigndocumentApplyEzsigntemplateV1Request = null;
            //var response = instance.EzsigndocumentApplyEzsigntemplateV1(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentApplyEzsigntemplateV1Response), response, "response is EzsigndocumentApplyEzsigntemplateV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentApplyEzsigntemplateV2
        /// </summary>
        [Test]
        public void EzsigndocumentApplyEzsigntemplateV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentApplyEzsigntemplateV2Request ezsigndocumentApplyEzsigntemplateV2Request = null;
            //var response = instance.EzsigndocumentApplyEzsigntemplateV2(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV2Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentApplyEzsigntemplateV2Response), response, "response is EzsigndocumentApplyEzsigntemplateV2Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentCreateObjectV1
        /// </summary>
        [Test]
        public void EzsigndocumentCreateObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<EzsigndocumentCreateObjectV1Request> ezsigndocumentCreateObjectV1Request = null;
            //var response = instance.EzsigndocumentCreateObjectV1(ezsigndocumentCreateObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentCreateObjectV1Response), response, "response is EzsigndocumentCreateObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentCreateObjectV2
        /// </summary>
        [Test]
        public void EzsigndocumentCreateObjectV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EzsigndocumentCreateObjectV2Request ezsigndocumentCreateObjectV2Request = null;
            //var response = instance.EzsigndocumentCreateObjectV2(ezsigndocumentCreateObjectV2Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentCreateObjectV2Response), response, "response is EzsigndocumentCreateObjectV2Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentDeleteObjectV1
        /// </summary>
        [Test]
        public void EzsigndocumentDeleteObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentDeleteObjectV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentDeleteObjectV1Response), response, "response is EzsigndocumentDeleteObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentEditEzsignformfieldgroupsV1
        /// </summary>
        [Test]
        public void EzsigndocumentEditEzsignformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentEditEzsignformfieldgroupsV1Request ezsigndocumentEditEzsignformfieldgroupsV1Request = null;
            //var response = instance.EzsigndocumentEditEzsignformfieldgroupsV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignformfieldgroupsV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentEditEzsignformfieldgroupsV1Response), response, "response is EzsigndocumentEditEzsignformfieldgroupsV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentEditEzsignsignaturesV1
        /// </summary>
        [Test]
        public void EzsigndocumentEditEzsignsignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentEditEzsignsignaturesV1Request ezsigndocumentEditEzsignsignaturesV1Request = null;
            //var response = instance.EzsigndocumentEditEzsignsignaturesV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignsignaturesV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentEditEzsignsignaturesV1Response), response, "response is EzsigndocumentEditEzsignsignaturesV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentEndPrematurelyV1
        /// </summary>
        [Test]
        public void EzsigndocumentEndPrematurelyV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //Object body = null;
            //var response = instance.EzsigndocumentEndPrematurelyV1(pkiEzsigndocumentID, body);
            //Assert.IsInstanceOf(typeof(EzsigndocumentEndPrematurelyV1Response), response, "response is EzsigndocumentEndPrematurelyV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetActionableElementsV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetActionableElementsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetActionableElementsV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetActionableElementsV1Response), response, "response is EzsigndocumentGetActionableElementsV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetDownloadUrlV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetDownloadUrlV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //string eDocumentType = null;
            //var response = instance.EzsigndocumentGetDownloadUrlV1(pkiEzsigndocumentID, eDocumentType);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetDownloadUrlV1Response), response, "response is EzsigndocumentGetDownloadUrlV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetEzsignformfieldgroupsV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetEzsignformfieldgroupsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignformfieldgroupsV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetEzsignformfieldgroupsV1Response), response, "response is EzsigndocumentGetEzsignformfieldgroupsV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetEzsignpagesV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetEzsignpagesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignpagesV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetEzsignpagesV1Response), response, "response is EzsigndocumentGetEzsignpagesV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetEzsignsignaturesV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetEzsignsignaturesV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetEzsignsignaturesV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetEzsignsignaturesV1Response), response, "response is EzsigndocumentGetEzsignsignaturesV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetFormDataV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetFormDataV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetFormDataV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetFormDataV1Response), response, "response is EzsigndocumentGetFormDataV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetObjectV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetObjectV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetObjectV1Response), response, "response is EzsigndocumentGetObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetTemporaryProofV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetTemporaryProofV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //var response = instance.EzsigndocumentGetTemporaryProofV1(pkiEzsigndocumentID);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetTemporaryProofV1Response), response, "response is EzsigndocumentGetTemporaryProofV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentGetWordsPositionsV1
        /// </summary>
        [Test]
        public void EzsigndocumentGetWordsPositionsV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentGetWordsPositionsV1Request ezsigndocumentGetWordsPositionsV1Request = null;
            //var response = instance.EzsigndocumentGetWordsPositionsV1(pkiEzsigndocumentID, ezsigndocumentGetWordsPositionsV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentGetWordsPositionsV1Response), response, "response is EzsigndocumentGetWordsPositionsV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentPatchObjectV1
        /// </summary>
        [Test]
        public void EzsigndocumentPatchObjectV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //EzsigndocumentPatchObjectV1Request ezsigndocumentPatchObjectV1Request = null;
            //var response = instance.EzsigndocumentPatchObjectV1(pkiEzsigndocumentID, ezsigndocumentPatchObjectV1Request);
            //Assert.IsInstanceOf(typeof(EzsigndocumentPatchObjectV1Response), response, "response is EzsigndocumentPatchObjectV1Response");
        }
        
        /// <summary>
        /// Test EzsigndocumentUnsendV1
        /// </summary>
        [Test]
        public void EzsigndocumentUnsendV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pkiEzsigndocumentID = null;
            //Object body = null;
            //var response = instance.EzsigndocumentUnsendV1(pkiEzsigndocumentID, body);
            //Assert.IsInstanceOf(typeof(EzsigndocumentUnsendV1Response), response, "response is EzsigndocumentUnsendV1Response");
        }
        
    }

}
