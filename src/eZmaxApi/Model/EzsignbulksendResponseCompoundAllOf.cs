/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.8
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// EzsignbulksendResponseCompoundAllOf
    /// </summary>
    [DataContract]
    public partial class EzsignbulksendResponseCompoundAllOf :  IEquatable<EzsignbulksendResponseCompoundAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendResponseCompoundAllOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignbulksendResponseCompoundAllOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendResponseCompoundAllOf" /> class.
        /// </summary>
        /// <param name="aObjEzsignbulksenddocumentmapping">aObjEzsignbulksenddocumentmapping (required).</param>
        /// <param name="aObjEzsignbulksendsignermapping">aObjEzsignbulksendsignermapping (required).</param>
        public EzsignbulksendResponseCompoundAllOf(List<EzsignbulksenddocumentmappingResponseCompound> aObjEzsignbulksenddocumentmapping = default(List<EzsignbulksenddocumentmappingResponseCompound>), List<EzsignbulksendsignermappingResponse> aObjEzsignbulksendsignermapping = default(List<EzsignbulksendsignermappingResponse>))
        {
            // to ensure "aObjEzsignbulksenddocumentmapping" is required (not null)
            if (aObjEzsignbulksenddocumentmapping == null)
            {
                throw new InvalidDataException("aObjEzsignbulksenddocumentmapping is a required property for EzsignbulksendResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.AObjEzsignbulksenddocumentmapping = aObjEzsignbulksenddocumentmapping;
            }

            // to ensure "aObjEzsignbulksendsignermapping" is required (not null)
            if (aObjEzsignbulksendsignermapping == null)
            {
                throw new InvalidDataException("aObjEzsignbulksendsignermapping is a required property for EzsignbulksendResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.AObjEzsignbulksendsignermapping = aObjEzsignbulksendsignermapping;
            }

        }

        /// <summary>
        /// Gets or Sets AObjEzsignbulksenddocumentmapping
        /// </summary>
        [DataMember(Name="a_objEzsignbulksenddocumentmapping", EmitDefaultValue=true)]
        public List<EzsignbulksenddocumentmappingResponseCompound> AObjEzsignbulksenddocumentmapping { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsignbulksendsignermapping
        /// </summary>
        [DataMember(Name="a_objEzsignbulksendsignermapping", EmitDefaultValue=true)]
        public List<EzsignbulksendsignermappingResponse> AObjEzsignbulksendsignermapping { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzsignbulksendResponseCompoundAllOf {\n");
            sb.Append("  AObjEzsignbulksenddocumentmapping: ").Append(AObjEzsignbulksenddocumentmapping).Append("\n");
            sb.Append("  AObjEzsignbulksendsignermapping: ").Append(AObjEzsignbulksendsignermapping).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsignbulksendResponseCompoundAllOf);
        }

        /// <summary>
        /// Returns true if EzsignbulksendResponseCompoundAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsignbulksendResponseCompoundAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsignbulksendResponseCompoundAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AObjEzsignbulksenddocumentmapping == input.AObjEzsignbulksenddocumentmapping ||
                    this.AObjEzsignbulksenddocumentmapping != null &&
                    input.AObjEzsignbulksenddocumentmapping != null &&
                    this.AObjEzsignbulksenddocumentmapping.SequenceEqual(input.AObjEzsignbulksenddocumentmapping)
                ) && 
                (
                    this.AObjEzsignbulksendsignermapping == input.AObjEzsignbulksendsignermapping ||
                    this.AObjEzsignbulksendsignermapping != null &&
                    input.AObjEzsignbulksendsignermapping != null &&
                    this.AObjEzsignbulksendsignermapping.SequenceEqual(input.AObjEzsignbulksendsignermapping)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AObjEzsignbulksenddocumentmapping != null)
                    hashCode = hashCode * 59 + this.AObjEzsignbulksenddocumentmapping.GetHashCode();
                if (this.AObjEzsignbulksendsignermapping != null)
                    hashCode = hashCode * 59 + this.AObjEzsignbulksendsignermapping.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
