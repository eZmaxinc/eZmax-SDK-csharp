/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// An Ezsignbulksend Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "ezsignbulksend-ResponseCompound")]
    public partial class EzsignbulksendResponseCompound : EzsignbulksendResponse, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignbulksendResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendResponseCompound" /> class.
        /// </summary>
        /// <param name="aObjEzsignbulksenddocumentmapping">aObjEzsignbulksenddocumentmapping (required).</param>
        /// <param name="aObjEzsignbulksendsignermapping">aObjEzsignbulksendsignermapping (required).</param>
        /// <param name="pkiEzsignbulksendID">The unique ID of the Ezsignbulksend (required).</param>
        /// <param name="fkiEzsignfoldertypeID">The unique ID of the Ezsignfoldertype. (required).</param>
        /// <param name="fkiLanguageID">The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| (required).</param>
        /// <param name="sLanguageNameX">The Name of the Language in the language of the requester (required).</param>
        /// <param name="eEzsignfoldertypePrivacylevel">eEzsignfoldertypePrivacylevel (required).</param>
        /// <param name="sEzsignfoldertypeNameX">The name of the Ezsignfoldertype in the language of the requester (required).</param>
        /// <param name="sEzsignbulksendDescription">The description of the Ezsignbulksend (required).</param>
        /// <param name="tEzsignbulksendNote">Note about the Ezsignbulksend (required).</param>
        /// <param name="bEzsignbulksendNeedvalidation">Whether the Ezsigntemplatepackage was automatically modified and needs a manual validation (required).</param>
        /// <param name="bEzsignbulksendIsactive">Whether the Ezsignbulksend is active or not (required).</param>
        /// <param name="objAudit">objAudit (required).</param>
        public EzsignbulksendResponseCompound(List<EzsignbulksenddocumentmappingResponseCompound> aObjEzsignbulksenddocumentmapping = default(List<EzsignbulksenddocumentmappingResponseCompound>), List<EzsignbulksendsignermappingResponse> aObjEzsignbulksendsignermapping = default(List<EzsignbulksendsignermappingResponse>), int pkiEzsignbulksendID = default(int), int fkiEzsignfoldertypeID = default(int), int fkiLanguageID = default(int), string sLanguageNameX = default(string), FieldEEzsignfoldertypePrivacylevel eEzsignfoldertypePrivacylevel = default(FieldEEzsignfoldertypePrivacylevel), string sEzsignfoldertypeNameX = default(string), string sEzsignbulksendDescription = default(string), string tEzsignbulksendNote = default(string), bool bEzsignbulksendNeedvalidation = default(bool), bool bEzsignbulksendIsactive = default(bool), CommonAudit objAudit = default(CommonAudit)) : base()
        {
            // to ensure "aObjEzsignbulksenddocumentmapping" is required (not null)
            if (aObjEzsignbulksenddocumentmapping == null)
            {
                throw new ArgumentNullException("aObjEzsignbulksenddocumentmapping is a required property for EzsignbulksendResponseCompound and cannot be null");
            }
            this.AObjEzsignbulksenddocumentmapping = aObjEzsignbulksenddocumentmapping;
            // to ensure "aObjEzsignbulksendsignermapping" is required (not null)
            if (aObjEzsignbulksendsignermapping == null)
            {
                throw new ArgumentNullException("aObjEzsignbulksendsignermapping is a required property for EzsignbulksendResponseCompound and cannot be null");
            }
            this.AObjEzsignbulksendsignermapping = aObjEzsignbulksendsignermapping;
        }

        /// <summary>
        /// Gets or Sets AObjEzsignbulksenddocumentmapping
        /// </summary>
        [DataMember(Name = "a_objEzsignbulksenddocumentmapping", IsRequired = true, EmitDefaultValue = true)]
        public List<EzsignbulksenddocumentmappingResponseCompound> AObjEzsignbulksenddocumentmapping { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsignbulksendsignermapping
        /// </summary>
        [DataMember(Name = "a_objEzsignbulksendsignermapping", IsRequired = true, EmitDefaultValue = true)]
        public List<EzsignbulksendsignermappingResponse> AObjEzsignbulksendsignermapping { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignbulksendResponseCompound {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  AObjEzsignbulksenddocumentmapping: ").Append(AObjEzsignbulksenddocumentmapping).Append("\n");
            sb.Append("  AObjEzsignbulksendsignermapping: ").Append(AObjEzsignbulksendsignermapping).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
