/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.13
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// EzsigntemplatepackagemembershipResponseCompoundAllOf
    /// </summary>
    [DataContract]
    public partial class EzsigntemplatepackagemembershipResponseCompoundAllOf :  IEquatable<EzsigntemplatepackagemembershipResponseCompoundAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipResponseCompoundAllOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatepackagemembershipResponseCompoundAllOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipResponseCompoundAllOf" /> class.
        /// </summary>
        /// <param name="objEzsigntemplate">objEzsigntemplate (required).</param>
        /// <param name="aObjEzsigntemplatepackagesignermembership">aObjEzsigntemplatepackagesignermembership (required).</param>
        public EzsigntemplatepackagemembershipResponseCompoundAllOf(EzsigntemplateResponseCompound objEzsigntemplate = default(EzsigntemplateResponseCompound), List<EzsigntemplatepackagesignermembershipResponseCompound> aObjEzsigntemplatepackagesignermembership = default(List<EzsigntemplatepackagesignermembershipResponseCompound>))
        {
            // to ensure "objEzsigntemplate" is required (not null)
            if (objEzsigntemplate == null)
            {
                throw new InvalidDataException("objEzsigntemplate is a required property for EzsigntemplatepackagemembershipResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.ObjEzsigntemplate = objEzsigntemplate;
            }

            // to ensure "aObjEzsigntemplatepackagesignermembership" is required (not null)
            if (aObjEzsigntemplatepackagesignermembership == null)
            {
                throw new InvalidDataException("aObjEzsigntemplatepackagesignermembership is a required property for EzsigntemplatepackagemembershipResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.AObjEzsigntemplatepackagesignermembership = aObjEzsigntemplatepackagesignermembership;
            }

        }

        /// <summary>
        /// Gets or Sets ObjEzsigntemplate
        /// </summary>
        [DataMember(Name="objEzsigntemplate", EmitDefaultValue=true)]
        public EzsigntemplateResponseCompound ObjEzsigntemplate { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsigntemplatepackagesignermembership
        /// </summary>
        [DataMember(Name="a_objEzsigntemplatepackagesignermembership", EmitDefaultValue=true)]
        public List<EzsigntemplatepackagesignermembershipResponseCompound> AObjEzsigntemplatepackagesignermembership { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzsigntemplatepackagemembershipResponseCompoundAllOf {\n");
            sb.Append("  ObjEzsigntemplate: ").Append(ObjEzsigntemplate).Append("\n");
            sb.Append("  AObjEzsigntemplatepackagesignermembership: ").Append(AObjEzsigntemplatepackagesignermembership).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsigntemplatepackagemembershipResponseCompoundAllOf);
        }

        /// <summary>
        /// Returns true if EzsigntemplatepackagemembershipResponseCompoundAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsigntemplatepackagemembershipResponseCompoundAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsigntemplatepackagemembershipResponseCompoundAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ObjEzsigntemplate == input.ObjEzsigntemplate ||
                    (this.ObjEzsigntemplate != null &&
                    this.ObjEzsigntemplate.Equals(input.ObjEzsigntemplate))
                ) && 
                (
                    this.AObjEzsigntemplatepackagesignermembership == input.AObjEzsigntemplatepackagesignermembership ||
                    this.AObjEzsigntemplatepackagesignermembership != null &&
                    input.AObjEzsigntemplatepackagesignermembership != null &&
                    this.AObjEzsigntemplatepackagesignermembership.SequenceEqual(input.AObjEzsigntemplatepackagesignermembership)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ObjEzsigntemplate != null)
                    hashCode = hashCode * 59 + this.ObjEzsigntemplate.GetHashCode();
                if (this.AObjEzsigntemplatepackagesignermembership != null)
                    hashCode = hashCode * 59 + this.AObjEzsigntemplatepackagesignermembership.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
