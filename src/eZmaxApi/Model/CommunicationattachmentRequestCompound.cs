/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Communicationattachment Object and children
    /// </summary>
    [DataContract(Name = "communicationattachment-RequestCompound")]
    public partial class CommunicationattachmentRequestCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationattachmentRequestCompound" /> class.
        /// </summary>
        /// <param name="">The unique ID of the Communicationattachment.</param>
        /// <param name="">The unique ID of the Attachment..</param>
        /// <param name="">The unique ID of the Invoice..</param>
        /// <param name="">The unique ID of the Salarypreparation..</param>
        public CommunicationattachmentRequestCompound(int  = default(int), int  = default(int), int  = default(int), int  = default(int))
        {
            this.PkiCommunicationattachmentID = ;
            this.FkiAttachmentID = ;
            this.FkiInvoiceID = ;
            this.FkiSalarypreparationID = ;
        }

        /// <summary>
        /// The unique ID of the Communicationattachment
        /// </summary>
        /// <value>The unique ID of the Communicationattachment</value>
        /* <example>203</example>*/
        [DataMember(Name = "pkiCommunicationattachmentID", EmitDefaultValue = false)]
        public int PkiCommunicationattachmentID { get; set; }

        /// <summary>
        /// The unique ID of the Attachment.
        /// </summary>
        /// <value>The unique ID of the Attachment.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiAttachmentID", EmitDefaultValue = false)]
        public int FkiAttachmentID { get; set; }

        /// <summary>
        /// The unique ID of the Invoice.
        /// </summary>
        /// <value>The unique ID of the Invoice.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiInvoiceID", EmitDefaultValue = false)]
        public int FkiInvoiceID { get; set; }

        /// <summary>
        /// The unique ID of the Salarypreparation.
        /// </summary>
        /// <value>The unique ID of the Salarypreparation.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiSalarypreparationID", EmitDefaultValue = false)]
        public int FkiSalarypreparationID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommunicationattachmentRequestCompound {\n");
            sb.Append("  PkiCommunicationattachmentID: ").Append(PkiCommunicationattachmentID).Append("\n");
            sb.Append("  FkiAttachmentID: ").Append(FkiAttachmentID).Append("\n");
            sb.Append("  FkiInvoiceID: ").Append(FkiInvoiceID).Append("\n");
            sb.Append("  FkiSalarypreparationID: ").Append(FkiSalarypreparationID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiAttachmentID (int) minimum
            if (this.FkiAttachmentID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiAttachmentID, must be a value greater than or equal to 0.", new [] { "FkiAttachmentID" });
            }

            // FkiInvoiceID (int) minimum
            if (this.FkiInvoiceID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInvoiceID, must be a value greater than or equal to 0.", new [] { "FkiInvoiceID" });
            }

            // FkiSalarypreparationID (int) minimum
            if (this.FkiSalarypreparationID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiSalarypreparationID, must be a value greater than or equal to 0.", new [] { "FkiSalarypreparationID" });
            }

            yield break;
        }
    }

}
