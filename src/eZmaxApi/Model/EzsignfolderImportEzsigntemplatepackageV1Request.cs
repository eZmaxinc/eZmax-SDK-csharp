/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Request for POST /1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsigntemplatepackage
    /// </summary>
    [DataContract(Name = "ezsignfolder-importEzsigntemplatepackage-v1-Request")]
    public partial class EzsignfolderImportEzsigntemplatepackageV1Request : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfolderImportEzsigntemplatepackageV1Request" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignfolderImportEzsigntemplatepackageV1Request() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfolderImportEzsigntemplatepackageV1Request" /> class.
        /// </summary>
        /// <param name="">The unique ID of the Ezsigntemplatepackage (required).</param>
        /// <param name="">The maximum date and time at which the Ezsigndocument can be signed. (required).</param>
        /// <param name=""> (required).</param>
        public EzsignfolderImportEzsigntemplatepackageV1Request(int  = default(int), string  = default(string), List<CustomImportEzsigntemplatepackageRelationRequest>  = default(List<CustomImportEzsigntemplatepackageRelationRequest>))
        {
            this.FkiEzsigntemplatepackageID = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzsignfolderImportEzsigntemplatepackageV1Request and cannot be null");
            }
            this.DtEzsigndocumentDuedate = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzsignfolderImportEzsigntemplatepackageV1Request and cannot be null");
            }
            this.AObjImportEzsigntemplatepackageRelation = ;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackage
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackage</value>
        /* <example>99</example>*/
        [DataMember(Name = "fkiEzsigntemplatepackageID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatepackageID { get; set; }

        /// <summary>
        /// The maximum date and time at which the Ezsigndocument can be signed.
        /// </summary>
        /// <value>The maximum date and time at which the Ezsigndocument can be signed.</value>
        /* <example>2020-12-31 23:59:59</example>*/
        [DataMember(Name = "dtEzsigndocumentDuedate", IsRequired = true, EmitDefaultValue = true)]
        public string DtEzsigndocumentDuedate { get; set; }

        /// <summary>
        /// Gets or Sets AObjImportEzsigntemplatepackageRelation
        /// </summary>
        [DataMember(Name = "a_objImportEzsigntemplatepackageRelation", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomImportEzsigntemplatepackageRelationRequest> AObjImportEzsigntemplatepackageRelation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignfolderImportEzsigntemplatepackageV1Request {\n");
            sb.Append("  FkiEzsigntemplatepackageID: ").Append(FkiEzsigntemplatepackageID).Append("\n");
            sb.Append("  DtEzsigndocumentDuedate: ").Append(DtEzsigndocumentDuedate).Append("\n");
            sb.Append("  AObjImportEzsigntemplatepackageRelation: ").Append(AObjImportEzsigntemplatepackageRelation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiEzsigntemplatepackageID (int) minimum
            if (this.FkiEzsigntemplatepackageID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatepackageID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackageID" });
            }

            yield break;
        }
    }

}
