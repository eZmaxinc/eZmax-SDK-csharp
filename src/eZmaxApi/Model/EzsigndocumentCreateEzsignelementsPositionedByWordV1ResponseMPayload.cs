/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for POST /1/object/ezsigndocument/{pkiEzsigndocumentID}/createEzsignelementsPositionedByWord
    /// </summary>
    [DataContract(Name = "ezsigndocument-createEzsignelementsPositionedByWord-v1-Response-mPayload")]
    public partial class EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload" /> class.
        /// </summary>
        /// <param name="aPkiEzsignsignatureID">aPkiEzsignsignatureID (required).</param>
        /// <param name="aPkiEzsignformfieldgroupID">aPkiEzsignformfieldgroupID (required).</param>
        public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload(List<int> aPkiEzsignsignatureID = default(List<int>), List<int> aPkiEzsignformfieldgroupID = default(List<int>))
        {
            // to ensure "aPkiEzsignsignatureID" is required (not null)
            if (aPkiEzsignsignatureID == null)
            {
                throw new ArgumentNullException("aPkiEzsignsignatureID is a required property for EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload and cannot be null");
            }
            this.APkiEzsignsignatureID = aPkiEzsignsignatureID;
            // to ensure "aPkiEzsignformfieldgroupID" is required (not null)
            if (aPkiEzsignformfieldgroupID == null)
            {
                throw new ArgumentNullException("aPkiEzsignformfieldgroupID is a required property for EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload and cannot be null");
            }
            this.APkiEzsignformfieldgroupID = aPkiEzsignformfieldgroupID;
        }

        /// <summary>
        /// Gets or Sets APkiEzsignsignatureID
        /// </summary>
        [DataMember(Name = "a_pkiEzsignsignatureID", IsRequired = true, EmitDefaultValue = true)]
        public List<int> APkiEzsignsignatureID { get; set; }

        /// <summary>
        /// Gets or Sets APkiEzsignformfieldgroupID
        /// </summary>
        [DataMember(Name = "a_pkiEzsignformfieldgroupID", IsRequired = true, EmitDefaultValue = true)]
        public List<int> APkiEzsignformfieldgroupID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload {\n");
            sb.Append("  APkiEzsignsignatureID: ").Append(APkiEzsignsignatureID).Append("\n");
            sb.Append("  APkiEzsignformfieldgroupID: ").Append(APkiEzsignformfieldgroupID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
