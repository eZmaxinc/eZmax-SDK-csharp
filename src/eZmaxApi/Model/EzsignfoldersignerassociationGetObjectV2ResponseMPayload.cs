/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for GET /2/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}
    /// </summary>
    [DataContract(Name = "ezsignfoldersignerassociation-getObject-v2-Response-mPayload")]
    public partial class EzsignfoldersignerassociationGetObjectV2ResponseMPayload : IEquatable<EzsignfoldersignerassociationGetObjectV2ResponseMPayload>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfoldersignerassociationGetObjectV2ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignfoldersignerassociationGetObjectV2ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfoldersignerassociationGetObjectV2ResponseMPayload" /> class.
        /// </summary>
        /// <param name="objEzsignfoldersignerassociation">objEzsignfoldersignerassociation (required).</param>
        public EzsignfoldersignerassociationGetObjectV2ResponseMPayload(EzsignfoldersignerassociationResponseCompound objEzsignfoldersignerassociation = default(EzsignfoldersignerassociationResponseCompound))
        {
            // to ensure "objEzsignfoldersignerassociation" is required (not null)
            if (objEzsignfoldersignerassociation == null)
            {
                throw new ArgumentNullException("objEzsignfoldersignerassociation is a required property for EzsignfoldersignerassociationGetObjectV2ResponseMPayload and cannot be null");
            }
            this.ObjEzsignfoldersignerassociation = objEzsignfoldersignerassociation;
        }

        /// <summary>
        /// Gets or Sets ObjEzsignfoldersignerassociation
        /// </summary>
        [DataMember(Name = "objEzsignfoldersignerassociation", IsRequired = true, EmitDefaultValue = true)]
        public EzsignfoldersignerassociationResponseCompound ObjEzsignfoldersignerassociation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignfoldersignerassociationGetObjectV2ResponseMPayload {\n");
            sb.Append("  ObjEzsignfoldersignerassociation: ").Append(ObjEzsignfoldersignerassociation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsignfoldersignerassociationGetObjectV2ResponseMPayload);
        }

        /// <summary>
        /// Returns true if EzsignfoldersignerassociationGetObjectV2ResponseMPayload instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsignfoldersignerassociationGetObjectV2ResponseMPayload to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsignfoldersignerassociationGetObjectV2ResponseMPayload input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ObjEzsignfoldersignerassociation == input.ObjEzsignfoldersignerassociation ||
                    (this.ObjEzsignfoldersignerassociation != null &&
                    this.ObjEzsignfoldersignerassociation.Equals(input.ObjEzsignfoldersignerassociation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ObjEzsignfoldersignerassociation != null)
                {
                    hashCode = (hashCode * 59) + this.ObjEzsignfoldersignerassociation.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
