/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for POST /1/object/billingentityexternal/{pkiBillingentityexternalID}/generateFederationToken
    /// </summary>
    [DataContract(Name = "billingentityexternal-generateFederationToken-v1-Response-mPayload")]
    public partial class BillingentityexternalGenerateFederationTokenV1ResponseMPayload : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityexternalGenerateFederationTokenV1ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillingentityexternalGenerateFederationTokenV1ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityexternalGenerateFederationTokenV1ResponseMPayload" /> class.
        /// </summary>
        /// <param name=""> (required).</param>
        /// <param name="">The url of the server the Ezmaxcustomer is located (required).</param>
        public BillingentityexternalGenerateFederationTokenV1ResponseMPayload(CustomApikeyfederation  = default(CustomApikeyfederation), string  = default(string))
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for BillingentityexternalGenerateFederationTokenV1ResponseMPayload and cannot be null");
            }
            this.ObjApikeyfederation = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for BillingentityexternalGenerateFederationTokenV1ResponseMPayload and cannot be null");
            }
            this.SEzmaxcustomercodeUrl = ;
        }

        /// <summary>
        /// Gets or Sets ObjApikeyfederation
        /// </summary>
        [DataMember(Name = "objApikeyfederation", IsRequired = true, EmitDefaultValue = true)]
        public CustomApikeyfederation ObjApikeyfederation { get; set; }

        /// <summary>
        /// The url of the server the Ezmaxcustomer is located
        /// </summary>
        /// <value>The url of the server the Ezmaxcustomer is located</value>
        /* <example>http://www.website.com/avatar.jpg</example>*/
        [DataMember(Name = "sEzmaxcustomercodeUrl", IsRequired = true, EmitDefaultValue = true)]
        public string SEzmaxcustomercodeUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BillingentityexternalGenerateFederationTokenV1ResponseMPayload {\n");
            sb.Append("  ObjApikeyfederation: ").Append(ObjApikeyfederation).Append("\n");
            sb.Append("  SEzmaxcustomercodeUrl: ").Append(SEzmaxcustomercodeUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.SEzmaxcustomercodeUrl != null) {
                // SEzmaxcustomercodeUrl (string) pattern
                Regex regexSEzmaxcustomercodeUrl = new Regex(@"^(https|http):\/\/[^\s\/$.?#].[^\s]*$", RegexOptions.CultureInvariant);
                if (!regexSEzmaxcustomercodeUrl.Match(this.SEzmaxcustomercodeUrl).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SEzmaxcustomercodeUrl, must match a pattern of " + regexSEzmaxcustomercodeUrl, new [] { "SEzmaxcustomercodeUrl" });
                }
            }

            yield break;
        }
    }

}
