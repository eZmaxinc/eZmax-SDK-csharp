/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezsigntemplatepackagemembership Object
    /// </summary>
    [DataContract(Name = "ezsigntemplatepackagemembership-ResponseCompound")]
    public partial class EzsigntemplatepackagemembershipResponseCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatepackagemembershipResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipResponseCompound" /> class.
        /// </summary>
        /// <param name="">The unique ID of the Ezsigntemplatepackagemembership (required).</param>
        /// <param name="">The unique ID of the Ezsigntemplatepackage (required).</param>
        /// <param name="">The unique ID of the Ezsigntemplate (required).</param>
        /// <param name="">The order in which the Ezsigntemplate will be imported when using an Ezsigntemplatepackage. (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        public EzsigntemplatepackagemembershipResponseCompound(int  = default(int), int  = default(int), int  = default(int), int  = default(int), EzsigntemplateResponseCompound  = default(EzsigntemplateResponseCompound), List<EzsigntemplatepackagesignermembershipResponseCompound>  = default(List<EzsigntemplatepackagesignermembershipResponseCompound>))
        {
            this.PkiEzsigntemplatepackagemembershipID = ;
            this.FkiEzsigntemplatepackageID = ;
            this.FkiEzsigntemplateID = ;
            this.IEzsigntemplatepackagemembershipOrder = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzsigntemplatepackagemembershipResponseCompound and cannot be null");
            }
            this.ObjEzsigntemplate = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzsigntemplatepackagemembershipResponseCompound and cannot be null");
            }
            this.AObjEzsigntemplatepackagesignermembership = ;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagemembership
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagemembership</value>
        /* <example>194</example>*/
        [DataMember(Name = "pkiEzsigntemplatepackagemembershipID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiEzsigntemplatepackagemembershipID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackage
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackage</value>
        /* <example>99</example>*/
        [DataMember(Name = "fkiEzsigntemplatepackageID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatepackageID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplate
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplate</value>
        /* <example>36</example>*/
        [DataMember(Name = "fkiEzsigntemplateID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplateID { get; set; }

        /// <summary>
        /// The order in which the Ezsigntemplate will be imported when using an Ezsigntemplatepackage.
        /// </summary>
        /// <value>The order in which the Ezsigntemplate will be imported when using an Ezsigntemplatepackage.</value>
        /* <example>1</example>*/
        [DataMember(Name = "iEzsigntemplatepackagemembershipOrder", IsRequired = true, EmitDefaultValue = true)]
        public int IEzsigntemplatepackagemembershipOrder { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzsigntemplate
        /// </summary>
        [DataMember(Name = "objEzsigntemplate", IsRequired = true, EmitDefaultValue = true)]
        public EzsigntemplateResponseCompound ObjEzsigntemplate { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsigntemplatepackagesignermembership
        /// </summary>
        [DataMember(Name = "a_objEzsigntemplatepackagesignermembership", IsRequired = true, EmitDefaultValue = true)]
        public List<EzsigntemplatepackagesignermembershipResponseCompound> AObjEzsigntemplatepackagesignermembership { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplatepackagemembershipResponseCompound {\n");
            sb.Append("  PkiEzsigntemplatepackagemembershipID: ").Append(PkiEzsigntemplatepackagemembershipID).Append("\n");
            sb.Append("  FkiEzsigntemplatepackageID: ").Append(FkiEzsigntemplatepackageID).Append("\n");
            sb.Append("  FkiEzsigntemplateID: ").Append(FkiEzsigntemplateID).Append("\n");
            sb.Append("  IEzsigntemplatepackagemembershipOrder: ").Append(IEzsigntemplatepackagemembershipOrder).Append("\n");
            sb.Append("  ObjEzsigntemplate: ").Append(ObjEzsigntemplate).Append("\n");
            sb.Append("  AObjEzsigntemplatepackagesignermembership: ").Append(AObjEzsigntemplatepackagesignermembership).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsigntemplatepackagemembershipID (int) minimum
            if (this.PkiEzsigntemplatepackagemembershipID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzsigntemplatepackagemembershipID, must be a value greater than or equal to 0.", new [] { "PkiEzsigntemplatepackagemembershipID" });
            }

            // FkiEzsigntemplatepackageID (int) minimum
            if (this.FkiEzsigntemplatepackageID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatepackageID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackageID" });
            }

            // FkiEzsigntemplateID (int) minimum
            if (this.FkiEzsigntemplateID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplateID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplateID" });
            }

            // IEzsigntemplatepackagemembershipOrder (int) minimum
            if (this.IEzsigntemplatepackagemembershipOrder < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzsigntemplatepackagemembershipOrder, must be a value greater than or equal to 1.", new [] { "IEzsigntemplatepackagemembershipOrder" });
            }

            yield break;
        }
    }

}
