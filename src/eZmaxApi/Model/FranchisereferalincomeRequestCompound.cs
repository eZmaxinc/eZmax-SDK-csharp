/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Franchisereferalincome Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "franchisereferalincome-RequestCompound")]
    public partial class FranchisereferalincomeRequestCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FranchisereferalincomeRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FranchisereferalincomeRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FranchisereferalincomeRequestCompound" /> class.
        /// </summary>
        /// <param name="pkiFranchisereferalincomeID">The unique ID of the Franchisereferalincome.</param>
        /// <param name="fkiFranchisebrokerID">The unique ID of the Franchisebroker (required).</param>
        /// <param name="fkiFranchisereferalincomeprogramID">The unique ID of the Franchisereferalincomeprogram (required).</param>
        /// <param name="fkiPeriodID">The unique ID of the Period (required).</param>
        /// <param name="dFranchisereferalincomeLoan">The loan amount (required).</param>
        /// <param name="dFranchisereferalincomeFranchiseamount">The amount that will be given to the franchise (required).</param>
        /// <param name="dFranchisereferalincomeFranchisoramount">The amount that will be kept by the franchisor (required).</param>
        /// <param name="dFranchisereferalincomeAgentamount">The amount that will be given to the agent (required).</param>
        /// <param name="dtFranchisereferalincomeDisbursed">The date the amounts were disbursed (required).</param>
        /// <param name="tFranchisereferalincomeComment">Comment about the transaction (required).</param>
        /// <param name="fkiFranchiseofficeID">The unique ID of the Franchisereoffice (required).</param>
        /// <param name="sFranchisereferalincomeRemoteid">sFranchisereferalincomeRemoteid (required).</param>
        /// <param name="objAddress">objAddress.</param>
        /// <param name="aObjContact">aObjContact (required).</param>
        public FranchisereferalincomeRequestCompound(int pkiFranchisereferalincomeID = default(int), int fkiFranchisebrokerID = default(int), int fkiFranchisereferalincomeprogramID = default(int), int fkiPeriodID = default(int), string dFranchisereferalincomeLoan = default(string), string dFranchisereferalincomeFranchiseamount = default(string), string dFranchisereferalincomeFranchisoramount = default(string), string dFranchisereferalincomeAgentamount = default(string), string dtFranchisereferalincomeDisbursed = default(string), string tFranchisereferalincomeComment = default(string), int fkiFranchiseofficeID = default(int), string sFranchisereferalincomeRemoteid = default(string), AddressRequest objAddress = default(AddressRequest), List<ContactRequestCompound> aObjContact = default(List<ContactRequestCompound>))
        {
            this.FkiFranchisebrokerID = fkiFranchisebrokerID;
            this.FkiFranchisereferalincomeprogramID = fkiFranchisereferalincomeprogramID;
            this.FkiPeriodID = fkiPeriodID;
            // to ensure "dFranchisereferalincomeLoan" is required (not null)
            if (dFranchisereferalincomeLoan == null)
            {
                throw new ArgumentNullException("dFranchisereferalincomeLoan is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.DFranchisereferalincomeLoan = dFranchisereferalincomeLoan;
            // to ensure "dFranchisereferalincomeFranchiseamount" is required (not null)
            if (dFranchisereferalincomeFranchiseamount == null)
            {
                throw new ArgumentNullException("dFranchisereferalincomeFranchiseamount is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.DFranchisereferalincomeFranchiseamount = dFranchisereferalincomeFranchiseamount;
            // to ensure "dFranchisereferalincomeFranchisoramount" is required (not null)
            if (dFranchisereferalincomeFranchisoramount == null)
            {
                throw new ArgumentNullException("dFranchisereferalincomeFranchisoramount is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.DFranchisereferalincomeFranchisoramount = dFranchisereferalincomeFranchisoramount;
            // to ensure "dFranchisereferalincomeAgentamount" is required (not null)
            if (dFranchisereferalincomeAgentamount == null)
            {
                throw new ArgumentNullException("dFranchisereferalincomeAgentamount is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.DFranchisereferalincomeAgentamount = dFranchisereferalincomeAgentamount;
            // to ensure "dtFranchisereferalincomeDisbursed" is required (not null)
            if (dtFranchisereferalincomeDisbursed == null)
            {
                throw new ArgumentNullException("dtFranchisereferalincomeDisbursed is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.DtFranchisereferalincomeDisbursed = dtFranchisereferalincomeDisbursed;
            // to ensure "tFranchisereferalincomeComment" is required (not null)
            if (tFranchisereferalincomeComment == null)
            {
                throw new ArgumentNullException("tFranchisereferalincomeComment is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.TFranchisereferalincomeComment = tFranchisereferalincomeComment;
            this.FkiFranchiseofficeID = fkiFranchiseofficeID;
            // to ensure "sFranchisereferalincomeRemoteid" is required (not null)
            if (sFranchisereferalincomeRemoteid == null)
            {
                throw new ArgumentNullException("sFranchisereferalincomeRemoteid is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.SFranchisereferalincomeRemoteid = sFranchisereferalincomeRemoteid;
            // to ensure "aObjContact" is required (not null)
            if (aObjContact == null)
            {
                throw new ArgumentNullException("aObjContact is a required property for FranchisereferalincomeRequestCompound and cannot be null");
            }
            this.AObjContact = aObjContact;
            this.PkiFranchisereferalincomeID = pkiFranchisereferalincomeID;
            this.ObjAddress = objAddress;
        }

        /// <summary>
        /// The unique ID of the Franchisereferalincome
        /// </summary>
        /// <value>The unique ID of the Franchisereferalincome</value>
        /* <example>35</example>*/
        [DataMember(Name = "pkiFranchisereferalincomeID", EmitDefaultValue = false)]
        public int PkiFranchisereferalincomeID { get; set; }

        /// <summary>
        /// The unique ID of the Franchisebroker
        /// </summary>
        /// <value>The unique ID of the Franchisebroker</value>
        /* <example>61</example>*/
        [DataMember(Name = "fkiFranchisebrokerID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiFranchisebrokerID { get; set; }

        /// <summary>
        /// The unique ID of the Franchisereferalincomeprogram
        /// </summary>
        /// <value>The unique ID of the Franchisereferalincomeprogram</value>
        /* <example>51</example>*/
        [DataMember(Name = "fkiFranchisereferalincomeprogramID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiFranchisereferalincomeprogramID { get; set; }

        /// <summary>
        /// The unique ID of the Period
        /// </summary>
        /// <value>The unique ID of the Period</value>
        /* <example>21</example>*/
        [DataMember(Name = "fkiPeriodID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiPeriodID { get; set; }

        /// <summary>
        /// The loan amount
        /// </summary>
        /// <value>The loan amount</value>
        /* <example>500275.62</example>*/
        [DataMember(Name = "dFranchisereferalincomeLoan", IsRequired = true, EmitDefaultValue = true)]
        public string DFranchisereferalincomeLoan { get; set; }

        /// <summary>
        /// The amount that will be given to the franchise
        /// </summary>
        /// <value>The amount that will be given to the franchise</value>
        /* <example>275.00</example>*/
        [DataMember(Name = "dFranchisereferalincomeFranchiseamount", IsRequired = true, EmitDefaultValue = true)]
        public string DFranchisereferalincomeFranchiseamount { get; set; }

        /// <summary>
        /// The amount that will be kept by the franchisor
        /// </summary>
        /// <value>The amount that will be kept by the franchisor</value>
        /* <example>385.00</example>*/
        [DataMember(Name = "dFranchisereferalincomeFranchisoramount", IsRequired = true, EmitDefaultValue = true)]
        public string DFranchisereferalincomeFranchisoramount { get; set; }

        /// <summary>
        /// The amount that will be given to the agent
        /// </summary>
        /// <value>The amount that will be given to the agent</value>
        /* <example>800.00</example>*/
        [DataMember(Name = "dFranchisereferalincomeAgentamount", IsRequired = true, EmitDefaultValue = true)]
        public string DFranchisereferalincomeAgentamount { get; set; }

        /// <summary>
        /// The date the amounts were disbursed
        /// </summary>
        /// <value>The date the amounts were disbursed</value>
        /* <example>2020-12-31</example>*/
        [DataMember(Name = "dtFranchisereferalincomeDisbursed", IsRequired = true, EmitDefaultValue = true)]
        public string DtFranchisereferalincomeDisbursed { get; set; }

        /// <summary>
        /// Comment about the transaction
        /// </summary>
        /// <value>Comment about the transaction</value>
        /* <example>This is a comment</example>*/
        [DataMember(Name = "tFranchisereferalincomeComment", IsRequired = true, EmitDefaultValue = true)]
        public string TFranchisereferalincomeComment { get; set; }

        /// <summary>
        /// The unique ID of the Franchisereoffice
        /// </summary>
        /// <value>The unique ID of the Franchisereoffice</value>
        /* <example>50</example>*/
        [DataMember(Name = "fkiFranchiseofficeID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiFranchiseofficeID { get; set; }

        /// <summary>
        /// Gets or Sets SFranchisereferalincomeRemoteid
        /// </summary>
        [DataMember(Name = "sFranchisereferalincomeRemoteid", IsRequired = true, EmitDefaultValue = true)]
        public string SFranchisereferalincomeRemoteid { get; set; }

        /// <summary>
        /// Gets or Sets ObjAddress
        /// </summary>
        [DataMember(Name = "objAddress", EmitDefaultValue = false)]
        public AddressRequest ObjAddress { get; set; }

        /// <summary>
        /// Gets or Sets AObjContact
        /// </summary>
        [DataMember(Name = "a_objContact", IsRequired = true, EmitDefaultValue = true)]
        public List<ContactRequestCompound> AObjContact { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FranchisereferalincomeRequestCompound {\n");
            sb.Append("  PkiFranchisereferalincomeID: ").Append(PkiFranchisereferalincomeID).Append("\n");
            sb.Append("  FkiFranchisebrokerID: ").Append(FkiFranchisebrokerID).Append("\n");
            sb.Append("  FkiFranchisereferalincomeprogramID: ").Append(FkiFranchisereferalincomeprogramID).Append("\n");
            sb.Append("  FkiPeriodID: ").Append(FkiPeriodID).Append("\n");
            sb.Append("  DFranchisereferalincomeLoan: ").Append(DFranchisereferalincomeLoan).Append("\n");
            sb.Append("  DFranchisereferalincomeFranchiseamount: ").Append(DFranchisereferalincomeFranchiseamount).Append("\n");
            sb.Append("  DFranchisereferalincomeFranchisoramount: ").Append(DFranchisereferalincomeFranchisoramount).Append("\n");
            sb.Append("  DFranchisereferalincomeAgentamount: ").Append(DFranchisereferalincomeAgentamount).Append("\n");
            sb.Append("  DtFranchisereferalincomeDisbursed: ").Append(DtFranchisereferalincomeDisbursed).Append("\n");
            sb.Append("  TFranchisereferalincomeComment: ").Append(TFranchisereferalincomeComment).Append("\n");
            sb.Append("  FkiFranchiseofficeID: ").Append(FkiFranchiseofficeID).Append("\n");
            sb.Append("  SFranchisereferalincomeRemoteid: ").Append(SFranchisereferalincomeRemoteid).Append("\n");
            sb.Append("  ObjAddress: ").Append(ObjAddress).Append("\n");
            sb.Append("  AObjContact: ").Append(AObjContact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiFranchisereferalincomeID (int) minimum
            if (this.PkiFranchisereferalincomeID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiFranchisereferalincomeID, must be a value greater than or equal to 0.", new [] { "PkiFranchisereferalincomeID" });
            }

            // FkiFranchisebrokerID (int) minimum
            if (this.FkiFranchisebrokerID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchisebrokerID, must be a value greater than or equal to 0.", new [] { "FkiFranchisebrokerID" });
            }

            // FkiFranchisereferalincomeprogramID (int) minimum
            if (this.FkiFranchisereferalincomeprogramID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchisereferalincomeprogramID, must be a value greater than or equal to 0.", new [] { "FkiFranchisereferalincomeprogramID" });
            }

            // FkiPeriodID (int) minimum
            if (this.FkiPeriodID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiPeriodID, must be a value greater than or equal to 0.", new [] { "FkiPeriodID" });
            }

            // FkiFranchiseofficeID (int) minimum
            if (this.FkiFranchiseofficeID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchiseofficeID, must be a value greater than or equal to 0.", new [] { "FkiFranchiseofficeID" });
            }

            yield break;
        }
    }

}
