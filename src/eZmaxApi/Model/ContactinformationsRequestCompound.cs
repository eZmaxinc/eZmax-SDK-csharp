/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Contactinformations Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "contactinformations-RequestCompound")]
    public partial class ContactinformationsRequestCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContactinformationsRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsRequestCompound" /> class.
        /// </summary>
        /// <param name="">The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="">The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="">The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="">The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        public ContactinformationsRequestCompound(int  = default(int), int  = default(int), int  = default(int), int  = default(int), List<AddressRequestCompound>  = default(List<AddressRequestCompound>), List<PhoneRequestCompound>  = default(List<PhoneRequestCompound>), List<EmailRequestCompound>  = default(List<EmailRequestCompound>), List<WebsiteRequestCompound>  = default(List<WebsiteRequestCompound>))
        {
            this.IAddressDefault = ;
            this.IPhoneDefault = ;
            this.IEmailDefault = ;
            this.IWebsiteDefault = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsRequestCompound and cannot be null");
            }
            this.AObjAddress = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsRequestCompound and cannot be null");
            }
            this.AObjPhone = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsRequestCompound and cannot be null");
            }
            this.AObjEmail = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsRequestCompound and cannot be null");
            }
            this.AObjWebsite = ;
        }

        /// <summary>
        /// The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iAddressDefault", IsRequired = true, EmitDefaultValue = true)]
        public int IAddressDefault { get; set; }

        /// <summary>
        /// The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iPhoneDefault", IsRequired = true, EmitDefaultValue = true)]
        public int IPhoneDefault { get; set; }

        /// <summary>
        /// The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iEmailDefault", IsRequired = true, EmitDefaultValue = true)]
        public int IEmailDefault { get; set; }

        /// <summary>
        /// The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iWebsiteDefault", IsRequired = true, EmitDefaultValue = true)]
        public int IWebsiteDefault { get; set; }

        /// <summary>
        /// Gets or Sets AObjAddress
        /// </summary>
        [DataMember(Name = "a_objAddress", IsRequired = true, EmitDefaultValue = true)]
        public List<AddressRequestCompound> AObjAddress { get; set; }

        /// <summary>
        /// Gets or Sets AObjPhone
        /// </summary>
        [DataMember(Name = "a_objPhone", IsRequired = true, EmitDefaultValue = true)]
        public List<PhoneRequestCompound> AObjPhone { get; set; }

        /// <summary>
        /// Gets or Sets AObjEmail
        /// </summary>
        [DataMember(Name = "a_objEmail", IsRequired = true, EmitDefaultValue = true)]
        public List<EmailRequestCompound> AObjEmail { get; set; }

        /// <summary>
        /// Gets or Sets AObjWebsite
        /// </summary>
        [DataMember(Name = "a_objWebsite", IsRequired = true, EmitDefaultValue = true)]
        public List<WebsiteRequestCompound> AObjWebsite { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContactinformationsRequestCompound {\n");
            sb.Append("  IAddressDefault: ").Append(IAddressDefault).Append("\n");
            sb.Append("  IPhoneDefault: ").Append(IPhoneDefault).Append("\n");
            sb.Append("  IEmailDefault: ").Append(IEmailDefault).Append("\n");
            sb.Append("  IWebsiteDefault: ").Append(IWebsiteDefault).Append("\n");
            sb.Append("  AObjAddress: ").Append(AObjAddress).Append("\n");
            sb.Append("  AObjPhone: ").Append(AObjPhone).Append("\n");
            sb.Append("  AObjEmail: ").Append(AObjEmail).Append("\n");
            sb.Append("  AObjWebsite: ").Append(AObjWebsite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
