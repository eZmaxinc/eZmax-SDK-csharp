/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// An Ezsigntemplateformfieldgroupsigner Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "ezsigntemplateformfieldgroupsigner-RequestCompound")]
    public partial class EzsigntemplateformfieldgroupsignerRequestCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplateformfieldgroupsignerRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplateformfieldgroupsignerRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplateformfieldgroupsignerRequestCompound" /> class.
        /// </summary>
        /// <param name="pkiEzsigntemplateformfieldgroupsignerID">The unique ID of the Ezsigntemplateformfieldgroupsigner.</param>
        /// <param name="fkiEzsigntemplatesignerID">The unique ID of the Ezsigntemplatesigner (required).</param>
        public EzsigntemplateformfieldgroupsignerRequestCompound(int pkiEzsigntemplateformfieldgroupsignerID = default(int), int fkiEzsigntemplatesignerID = default(int))
        {
            this.FkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
            this.PkiEzsigntemplateformfieldgroupsignerID = pkiEzsigntemplateformfieldgroupsignerID;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplateformfieldgroupsigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplateformfieldgroupsigner</value>
        /* <example>87</example>*/
        [DataMember(Name = "pkiEzsigntemplateformfieldgroupsignerID", EmitDefaultValue = false)]
        public int PkiEzsigntemplateformfieldgroupsignerID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatesigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatesigner</value>
        /* <example>9</example>*/
        [DataMember(Name = "fkiEzsigntemplatesignerID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatesignerID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplateformfieldgroupsignerRequestCompound {\n");
            sb.Append("  PkiEzsigntemplateformfieldgroupsignerID: ").Append(PkiEzsigntemplateformfieldgroupsignerID).Append("\n");
            sb.Append("  FkiEzsigntemplatesignerID: ").Append(FkiEzsigntemplatesignerID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsigntemplateformfieldgroupsignerID (int) minimum
            if (this.PkiEzsigntemplateformfieldgroupsignerID < (int)0)
            {
                yield return new ValidationResult("Invalid value for PkiEzsigntemplateformfieldgroupsignerID, must be a value greater than or equal to 0.", new [] { "PkiEzsigntemplateformfieldgroupsignerID" });
            }

            // FkiEzsigntemplatesignerID (int) minimum
            if (this.FkiEzsigntemplatesignerID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiEzsigntemplatesignerID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatesignerID" });
            }

            yield break;
        }
    }

}
