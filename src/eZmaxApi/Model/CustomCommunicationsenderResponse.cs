/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Generic Communicationsender Response
    /// </summary>
    [DataContract(Name = "Custom-Communicationsender-Response")]
    public partial class CustomCommunicationsenderResponse : IValidatableObject
    {
        /// <summary>
        /// Defines ECommunicationsenderObjecttype
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ECommunicationsenderObjecttypeEnum
        {
            /// <summary>
            /// Enum Agent for value: Agent
            /// </summary>
            [EnumMember(Value = "Agent")]
            Agent = 1,

            /// <summary>
            /// Enum Broker for value: Broker
            /// </summary>
            [EnumMember(Value = "Broker")]
            Broker = 2,

            /// <summary>
            /// Enum User for value: User
            /// </summary>
            [EnumMember(Value = "User")]
            User = 3,

            /// <summary>
            /// Enum Mailboxshared for value: Mailboxshared
            /// </summary>
            [EnumMember(Value = "Mailboxshared")]
            Mailboxshared = 4,

            /// <summary>
            /// Enum Phonelineshared for value: Phonelineshared
            /// </summary>
            [EnumMember(Value = "Phonelineshared")]
            Phonelineshared = 5
        }


        /// <summary>
        /// Gets or Sets ECommunicationsenderObjecttype
        /// </summary>
        /* <example>User</example>*/
        [DataMember(Name = "eCommunicationsenderObjecttype", IsRequired = true, EmitDefaultValue = true)]
        public ECommunicationsenderObjecttypeEnum ECommunicationsenderObjecttype { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCommunicationsenderResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomCommunicationsenderResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCommunicationsenderResponse" /> class.
        /// </summary>
        /// <param name="fkiAgentID">The unique ID of the Agent..</param>
        /// <param name="fkiBrokerID">The unique ID of the Broker..</param>
        /// <param name="fkiUserID">The unique ID of the User.</param>
        /// <param name="fkiMailboxsharedID">The unique ID of the Mailboxshared.</param>
        /// <param name="fkiPhonelinesharedID">The unique ID of the Phonelineshared.</param>
        /// <param name="eCommunicationsenderObjecttype">eCommunicationsenderObjecttype (required).</param>
        /// <param name="objContactName">objContactName (required).</param>
        /// <param name="objEmail">objEmail.</param>
        /// <param name="objPhoneFax">objPhoneFax.</param>
        /// <param name="objPhoneSMS">objPhoneSMS.</param>
        public CustomCommunicationsenderResponse(int fkiAgentID = default(int), int fkiBrokerID = default(int), int fkiUserID = default(int), int fkiMailboxsharedID = default(int), int fkiPhonelinesharedID = default(int), ECommunicationsenderObjecttypeEnum eCommunicationsenderObjecttype = default(ECommunicationsenderObjecttypeEnum), CustomContactNameResponse objContactName = default(CustomContactNameResponse), EmailResponseCompound objEmail = default(EmailResponseCompound), PhoneResponseCompound objPhoneFax = default(PhoneResponseCompound), PhoneResponseCompound objPhoneSMS = default(PhoneResponseCompound))
        {
            this.ECommunicationsenderObjecttype = eCommunicationsenderObjecttype;
            // to ensure "objContactName" is required (not null)
            if (objContactName == null)
            {
                throw new ArgumentNullException("objContactName is a required property for CustomCommunicationsenderResponse and cannot be null");
            }
            this.ObjContactName = objContactName;
            this.FkiAgentID = fkiAgentID;
            this.FkiBrokerID = fkiBrokerID;
            this.FkiUserID = fkiUserID;
            this.FkiMailboxsharedID = fkiMailboxsharedID;
            this.FkiPhonelinesharedID = fkiPhonelinesharedID;
            this.ObjEmail = objEmail;
            this.ObjPhoneFax = objPhoneFax;
            this.ObjPhoneSMS = objPhoneSMS;
        }

        /// <summary>
        /// The unique ID of the Agent.
        /// </summary>
        /// <value>The unique ID of the Agent.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiAgentID", EmitDefaultValue = false)]
        public int FkiAgentID { get; set; }

        /// <summary>
        /// The unique ID of the Broker.
        /// </summary>
        /// <value>The unique ID of the Broker.</value>
        /* <example>26</example>*/
        [DataMember(Name = "fkiBrokerID", EmitDefaultValue = false)]
        public int FkiBrokerID { get; set; }

        /// <summary>
        /// The unique ID of the User
        /// </summary>
        /// <value>The unique ID of the User</value>
        /* <example>70</example>*/
        [DataMember(Name = "fkiUserID", EmitDefaultValue = false)]
        public int FkiUserID { get; set; }

        /// <summary>
        /// The unique ID of the Mailboxshared
        /// </summary>
        /// <value>The unique ID of the Mailboxshared</value>
        /* <example>47</example>*/
        [DataMember(Name = "fkiMailboxsharedID", EmitDefaultValue = false)]
        public int FkiMailboxsharedID { get; set; }

        /// <summary>
        /// The unique ID of the Phonelineshared
        /// </summary>
        /// <value>The unique ID of the Phonelineshared</value>
        /* <example>47</example>*/
        [DataMember(Name = "fkiPhonelinesharedID", EmitDefaultValue = false)]
        public int FkiPhonelinesharedID { get; set; }

        /// <summary>
        /// Gets or Sets ObjContactName
        /// </summary>
        [DataMember(Name = "objContactName", IsRequired = true, EmitDefaultValue = true)]
        public CustomContactNameResponse ObjContactName { get; set; }

        /// <summary>
        /// Gets or Sets ObjEmail
        /// </summary>
        [DataMember(Name = "objEmail", EmitDefaultValue = false)]
        public EmailResponseCompound ObjEmail { get; set; }

        /// <summary>
        /// Gets or Sets ObjPhoneFax
        /// </summary>
        [DataMember(Name = "objPhoneFax", EmitDefaultValue = false)]
        public PhoneResponseCompound ObjPhoneFax { get; set; }

        /// <summary>
        /// Gets or Sets ObjPhoneSMS
        /// </summary>
        [DataMember(Name = "objPhoneSMS", EmitDefaultValue = false)]
        public PhoneResponseCompound ObjPhoneSMS { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomCommunicationsenderResponse {\n");
            sb.Append("  FkiAgentID: ").Append(FkiAgentID).Append("\n");
            sb.Append("  FkiBrokerID: ").Append(FkiBrokerID).Append("\n");
            sb.Append("  FkiUserID: ").Append(FkiUserID).Append("\n");
            sb.Append("  FkiMailboxsharedID: ").Append(FkiMailboxsharedID).Append("\n");
            sb.Append("  FkiPhonelinesharedID: ").Append(FkiPhonelinesharedID).Append("\n");
            sb.Append("  ECommunicationsenderObjecttype: ").Append(ECommunicationsenderObjecttype).Append("\n");
            sb.Append("  ObjContactName: ").Append(ObjContactName).Append("\n");
            sb.Append("  ObjEmail: ").Append(ObjEmail).Append("\n");
            sb.Append("  ObjPhoneFax: ").Append(ObjPhoneFax).Append("\n");
            sb.Append("  ObjPhoneSMS: ").Append(ObjPhoneSMS).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiAgentID (int) minimum
            if (this.FkiAgentID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiAgentID, must be a value greater than or equal to 0.", new [] { "FkiAgentID" });
            }

            // FkiBrokerID (int) minimum
            if (this.FkiBrokerID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiBrokerID, must be a value greater than or equal to 0.", new [] { "FkiBrokerID" });
            }

            // FkiUserID (int) minimum
            if (this.FkiUserID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiUserID, must be a value greater than or equal to 0.", new [] { "FkiUserID" });
            }

            // FkiMailboxsharedID (int) maximum
            if (this.FkiMailboxsharedID > (int)255)
            {
                yield return new ValidationResult("Invalid value for FkiMailboxsharedID, must be a value less than or equal to 255.", new [] { "FkiMailboxsharedID" });
            }

            // FkiMailboxsharedID (int) minimum
            if (this.FkiMailboxsharedID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiMailboxsharedID, must be a value greater than or equal to 0.", new [] { "FkiMailboxsharedID" });
            }

            // FkiPhonelinesharedID (int) maximum
            if (this.FkiPhonelinesharedID > (int)255)
            {
                yield return new ValidationResult("Invalid value for FkiPhonelinesharedID, must be a value less than or equal to 255.", new [] { "FkiPhonelinesharedID" });
            }

            // FkiPhonelinesharedID (int) minimum
            if (this.FkiPhonelinesharedID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiPhonelinesharedID, must be a value greater than or equal to 0.", new [] { "FkiPhonelinesharedID" });
            }

            yield break;
        }
    }

}
