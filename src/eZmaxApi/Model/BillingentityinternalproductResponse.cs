/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Billingentityinternalproduct Object
    /// </summary>
    [DataContract]
    public partial class BillingentityinternalproductResponse :  IEquatable<BillingentityinternalproductResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalproductResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillingentityinternalproductResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalproductResponse" /> class.
        /// </summary>
        /// <param name="pkiBillingentityinternalproductID">The unique ID of the Billingentityinternalproduct (required).</param>
        /// <param name="fkiBillingentityinternalID">The unique ID of the Billingentityinternal. (required).</param>
        /// <param name="sBillingentityinternalDescriptionX">The description of the Billingentityinternal in the language of the requester (required).</param>
        /// <param name="fkiEzmaxproductID">The unique ID of the Ezmaxproduct (required).</param>
        /// <param name="sEzmaxproductDescriptionX">The description of the Ezmaxproduct in the language of the requester (required).</param>
        /// <param name="fkiBillingentityexternalID">The unique ID of the Billingentityexternal (required).</param>
        /// <param name="sBillingentityexternalDescription">The description of the Billingentityexternal (required).</param>
        public BillingentityinternalproductResponse(int pkiBillingentityinternalproductID = default(int), int fkiBillingentityinternalID = default(int), string sBillingentityinternalDescriptionX = default(string), int fkiEzmaxproductID = default(int), string sEzmaxproductDescriptionX = default(string), int fkiBillingentityexternalID = default(int), string sBillingentityexternalDescription = default(string))
        {
            // to ensure "pkiBillingentityinternalproductID" is required (not null)
            if (pkiBillingentityinternalproductID == null)
            {
                throw new InvalidDataException("pkiBillingentityinternalproductID is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.PkiBillingentityinternalproductID = pkiBillingentityinternalproductID;
            }

            // to ensure "fkiBillingentityinternalID" is required (not null)
            if (fkiBillingentityinternalID == null)
            {
                throw new InvalidDataException("fkiBillingentityinternalID is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.FkiBillingentityinternalID = fkiBillingentityinternalID;
            }

            // to ensure "sBillingentityinternalDescriptionX" is required (not null)
            if (sBillingentityinternalDescriptionX == null)
            {
                throw new InvalidDataException("sBillingentityinternalDescriptionX is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.SBillingentityinternalDescriptionX = sBillingentityinternalDescriptionX;
            }

            // to ensure "fkiEzmaxproductID" is required (not null)
            if (fkiEzmaxproductID == null)
            {
                throw new InvalidDataException("fkiEzmaxproductID is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.FkiEzmaxproductID = fkiEzmaxproductID;
            }

            // to ensure "sEzmaxproductDescriptionX" is required (not null)
            if (sEzmaxproductDescriptionX == null)
            {
                throw new InvalidDataException("sEzmaxproductDescriptionX is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.SEzmaxproductDescriptionX = sEzmaxproductDescriptionX;
            }

            // to ensure "fkiBillingentityexternalID" is required (not null)
            if (fkiBillingentityexternalID == null)
            {
                throw new InvalidDataException("fkiBillingentityexternalID is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.FkiBillingentityexternalID = fkiBillingentityexternalID;
            }

            // to ensure "sBillingentityexternalDescription" is required (not null)
            if (sBillingentityexternalDescription == null)
            {
                throw new InvalidDataException("sBillingentityexternalDescription is a required property for BillingentityinternalproductResponse and cannot be null");
            }
            else
            {
                this.SBillingentityexternalDescription = sBillingentityexternalDescription;
            }

        }

        /// <summary>
        /// The unique ID of the Billingentityinternalproduct
        /// </summary>
        /// <value>The unique ID of the Billingentityinternalproduct</value>
        [DataMember(Name="pkiBillingentityinternalproductID", EmitDefaultValue=true)]
        public int PkiBillingentityinternalproductID { get; set; }

        /// <summary>
        /// The unique ID of the Billingentityinternal.
        /// </summary>
        /// <value>The unique ID of the Billingentityinternal.</value>
        [DataMember(Name="fkiBillingentityinternalID", EmitDefaultValue=true)]
        public int FkiBillingentityinternalID { get; set; }

        /// <summary>
        /// The description of the Billingentityinternal in the language of the requester
        /// </summary>
        /// <value>The description of the Billingentityinternal in the language of the requester</value>
        [DataMember(Name="sBillingentityinternalDescriptionX", EmitDefaultValue=true)]
        public string SBillingentityinternalDescriptionX { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxproduct
        /// </summary>
        /// <value>The unique ID of the Ezmaxproduct</value>
        [DataMember(Name="fkiEzmaxproductID", EmitDefaultValue=true)]
        public int FkiEzmaxproductID { get; set; }

        /// <summary>
        /// The description of the Ezmaxproduct in the language of the requester
        /// </summary>
        /// <value>The description of the Ezmaxproduct in the language of the requester</value>
        [DataMember(Name="sEzmaxproductDescriptionX", EmitDefaultValue=true)]
        public string SEzmaxproductDescriptionX { get; set; }

        /// <summary>
        /// The unique ID of the Billingentityexternal
        /// </summary>
        /// <value>The unique ID of the Billingentityexternal</value>
        [DataMember(Name="fkiBillingentityexternalID", EmitDefaultValue=true)]
        public int FkiBillingentityexternalID { get; set; }

        /// <summary>
        /// The description of the Billingentityexternal
        /// </summary>
        /// <value>The description of the Billingentityexternal</value>
        [DataMember(Name="sBillingentityexternalDescription", EmitDefaultValue=true)]
        public string SBillingentityexternalDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillingentityinternalproductResponse {\n");
            sb.Append("  PkiBillingentityinternalproductID: ").Append(PkiBillingentityinternalproductID).Append("\n");
            sb.Append("  FkiBillingentityinternalID: ").Append(FkiBillingentityinternalID).Append("\n");
            sb.Append("  SBillingentityinternalDescriptionX: ").Append(SBillingentityinternalDescriptionX).Append("\n");
            sb.Append("  FkiEzmaxproductID: ").Append(FkiEzmaxproductID).Append("\n");
            sb.Append("  SEzmaxproductDescriptionX: ").Append(SEzmaxproductDescriptionX).Append("\n");
            sb.Append("  FkiBillingentityexternalID: ").Append(FkiBillingentityexternalID).Append("\n");
            sb.Append("  SBillingentityexternalDescription: ").Append(SBillingentityexternalDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillingentityinternalproductResponse);
        }

        /// <summary>
        /// Returns true if BillingentityinternalproductResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of BillingentityinternalproductResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillingentityinternalproductResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiBillingentityinternalproductID == input.PkiBillingentityinternalproductID ||
                    (this.PkiBillingentityinternalproductID != null &&
                    this.PkiBillingentityinternalproductID.Equals(input.PkiBillingentityinternalproductID))
                ) && 
                (
                    this.FkiBillingentityinternalID == input.FkiBillingentityinternalID ||
                    (this.FkiBillingentityinternalID != null &&
                    this.FkiBillingentityinternalID.Equals(input.FkiBillingentityinternalID))
                ) && 
                (
                    this.SBillingentityinternalDescriptionX == input.SBillingentityinternalDescriptionX ||
                    (this.SBillingentityinternalDescriptionX != null &&
                    this.SBillingentityinternalDescriptionX.Equals(input.SBillingentityinternalDescriptionX))
                ) && 
                (
                    this.FkiEzmaxproductID == input.FkiEzmaxproductID ||
                    (this.FkiEzmaxproductID != null &&
                    this.FkiEzmaxproductID.Equals(input.FkiEzmaxproductID))
                ) && 
                (
                    this.SEzmaxproductDescriptionX == input.SEzmaxproductDescriptionX ||
                    (this.SEzmaxproductDescriptionX != null &&
                    this.SEzmaxproductDescriptionX.Equals(input.SEzmaxproductDescriptionX))
                ) && 
                (
                    this.FkiBillingentityexternalID == input.FkiBillingentityexternalID ||
                    (this.FkiBillingentityexternalID != null &&
                    this.FkiBillingentityexternalID.Equals(input.FkiBillingentityexternalID))
                ) && 
                (
                    this.SBillingentityexternalDescription == input.SBillingentityexternalDescription ||
                    (this.SBillingentityexternalDescription != null &&
                    this.SBillingentityexternalDescription.Equals(input.SBillingentityexternalDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiBillingentityinternalproductID != null)
                    hashCode = hashCode * 59 + this.PkiBillingentityinternalproductID.GetHashCode();
                if (this.FkiBillingentityinternalID != null)
                    hashCode = hashCode * 59 + this.FkiBillingentityinternalID.GetHashCode();
                if (this.SBillingentityinternalDescriptionX != null)
                    hashCode = hashCode * 59 + this.SBillingentityinternalDescriptionX.GetHashCode();
                if (this.FkiEzmaxproductID != null)
                    hashCode = hashCode * 59 + this.FkiEzmaxproductID.GetHashCode();
                if (this.SEzmaxproductDescriptionX != null)
                    hashCode = hashCode * 59 + this.SEzmaxproductDescriptionX.GetHashCode();
                if (this.FkiBillingentityexternalID != null)
                    hashCode = hashCode * 59 + this.FkiBillingentityexternalID.GetHashCode();
                if (this.SBillingentityexternalDescription != null)
                    hashCode = hashCode * 59 + this.SBillingentityexternalDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // PkiBillingentityinternalproductID (int) maximum
            if(this.PkiBillingentityinternalproductID > (int)255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiBillingentityinternalproductID, must be a value less than or equal to 255.", new [] { "PkiBillingentityinternalproductID" });
            }

            // PkiBillingentityinternalproductID (int) minimum
            if(this.PkiBillingentityinternalproductID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiBillingentityinternalproductID, must be a value greater than or equal to 0.", new [] { "PkiBillingentityinternalproductID" });
            }



            // FkiBillingentityinternalID (int) minimum
            if(this.FkiBillingentityinternalID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBillingentityinternalID, must be a value greater than or equal to 0.", new [] { "FkiBillingentityinternalID" });
            }



            // FkiEzmaxproductID (int) minimum
            if(this.FkiEzmaxproductID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxproductID, must be a value greater than or equal to 1.", new [] { "FkiEzmaxproductID" });
            }



            // FkiBillingentityexternalID (int) minimum
            if(this.FkiBillingentityexternalID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBillingentityexternalID, must be a value greater than or equal to 1.", new [] { "FkiBillingentityexternalID" });
            }

            yield break;
        }
    }

}
