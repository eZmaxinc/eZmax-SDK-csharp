/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Notificationsubsection Object
    /// </summary>
    [DataContract(Name = "notificationsubsection-Response")]
    public partial class NotificationsubsectionResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NotificationsubsectionResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected NotificationsubsectionResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="NotificationsubsectionResponse" /> class.
        /// </summary>
        /// <param name="pkiNotificationsubsectionID">The unique ID of the Notificationsubsection (required).</param>
        /// <param name="fkiNotificationsectionID">The unique ID of the Notificationsection (required).</param>
        /// <param name="objNotificationsubsectionName">objNotificationsubsectionName.</param>
        /// <param name="sNotificationsectionNameX">The name of the Notificationsection in the language of the requester.</param>
        /// <param name="sNotificationsubsectionNameX">The name of the Notificationsubsection in the language of the requester (required).</param>
        public NotificationsubsectionResponse(int pkiNotificationsubsectionID = default(int), int fkiNotificationsectionID = default(int), MultilingualNotificationsubsectionName objNotificationsubsectionName = default(MultilingualNotificationsubsectionName), string sNotificationsectionNameX = default(string), string sNotificationsubsectionNameX = default(string))
        {
            this.PkiNotificationsubsectionID = pkiNotificationsubsectionID;
            this.FkiNotificationsectionID = fkiNotificationsectionID;
            // to ensure "sNotificationsubsectionNameX" is required (not null)
            if (sNotificationsubsectionNameX == null)
            {
                throw new ArgumentNullException("sNotificationsubsectionNameX is a required property for NotificationsubsectionResponse and cannot be null");
            }
            this.SNotificationsubsectionNameX = sNotificationsubsectionNameX;
            this.ObjNotificationsubsectionName = objNotificationsubsectionName;
            this.SNotificationsectionNameX = sNotificationsectionNameX;
        }

        /// <summary>
        /// The unique ID of the Notificationsubsection
        /// </summary>
        /// <value>The unique ID of the Notificationsubsection</value>
        /* <example>3</example>*/
        [DataMember(Name = "pkiNotificationsubsectionID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiNotificationsubsectionID { get; set; }

        /// <summary>
        /// The unique ID of the Notificationsection
        /// </summary>
        /// <value>The unique ID of the Notificationsection</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiNotificationsectionID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiNotificationsectionID { get; set; }

        /// <summary>
        /// Gets or Sets ObjNotificationsubsectionName
        /// </summary>
        [DataMember(Name = "objNotificationsubsectionName", EmitDefaultValue = false)]
        public MultilingualNotificationsubsectionName ObjNotificationsubsectionName { get; set; }

        /// <summary>
        /// The name of the Notificationsection in the language of the requester
        /// </summary>
        /// <value>The name of the Notificationsection in the language of the requester</value>
        /* <example>Homepage</example>*/
        [DataMember(Name = "sNotificationsectionNameX", EmitDefaultValue = false)]
        public string SNotificationsectionNameX { get; set; }

        /// <summary>
        /// The name of the Notificationsubsection in the language of the requester
        /// </summary>
        /// <value>The name of the Notificationsubsection in the language of the requester</value>
        /* <example>Default</example>*/
        [DataMember(Name = "sNotificationsubsectionNameX", IsRequired = true, EmitDefaultValue = true)]
        public string SNotificationsubsectionNameX { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class NotificationsubsectionResponse {\n");
            sb.Append("  PkiNotificationsubsectionID: ").Append(PkiNotificationsubsectionID).Append("\n");
            sb.Append("  FkiNotificationsectionID: ").Append(FkiNotificationsectionID).Append("\n");
            sb.Append("  ObjNotificationsubsectionName: ").Append(ObjNotificationsubsectionName).Append("\n");
            sb.Append("  SNotificationsectionNameX: ").Append(SNotificationsectionNameX).Append("\n");
            sb.Append("  SNotificationsubsectionNameX: ").Append(SNotificationsubsectionNameX).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiNotificationsubsectionID (int) minimum
            if (this.PkiNotificationsubsectionID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiNotificationsubsectionID, must be a value greater than or equal to 0.", new [] { "PkiNotificationsubsectionID" });
            }

            // FkiNotificationsectionID (int) minimum
            if (this.FkiNotificationsectionID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiNotificationsectionID, must be a value greater than or equal to 0.", new [] { "FkiNotificationsectionID" });
            }

            yield break;
        }
    }

}
