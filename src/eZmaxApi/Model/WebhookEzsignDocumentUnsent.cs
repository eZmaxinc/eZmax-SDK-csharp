/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// This is the base Webhook object
    /// </summary>
    [DataContract(Name = "Webhook-Ezsign-DocumentUnsent")]
    public partial class WebhookEzsignDocumentUnsent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookEzsignDocumentUnsent" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebhookEzsignDocumentUnsent() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookEzsignDocumentUnsent" /> class.
        /// </summary>
        /// <param name="objWebhook">objWebhook (required).</param>
        /// <param name="aObjAttempt">An array containing details of previous attempts that were made to deliver the message. The array is empty if it&#39;s the first attempt. (required).</param>
        /// <param name="objEzsigndocument">objEzsigndocument (required).</param>
        public WebhookEzsignDocumentUnsent(CustomWebhookResponse objWebhook = default(CustomWebhookResponse), List<AttemptResponseCompound> aObjAttempt = default(List<AttemptResponseCompound>), EzsigndocumentResponse objEzsigndocument = default(EzsigndocumentResponse))
        {
            // to ensure "objWebhook" is required (not null)
            if (objWebhook == null)
            {
                throw new ArgumentNullException("objWebhook is a required property for WebhookEzsignDocumentUnsent and cannot be null");
            }
            this.ObjWebhook = objWebhook;
            // to ensure "aObjAttempt" is required (not null)
            if (aObjAttempt == null)
            {
                throw new ArgumentNullException("aObjAttempt is a required property for WebhookEzsignDocumentUnsent and cannot be null");
            }
            this.AObjAttempt = aObjAttempt;
            // to ensure "objEzsigndocument" is required (not null)
            if (objEzsigndocument == null)
            {
                throw new ArgumentNullException("objEzsigndocument is a required property for WebhookEzsignDocumentUnsent and cannot be null");
            }
            this.ObjEzsigndocument = objEzsigndocument;
        }

        /// <summary>
        /// Gets or Sets ObjWebhook
        /// </summary>
        [DataMember(Name = "objWebhook", IsRequired = true, EmitDefaultValue = true)]
        public CustomWebhookResponse ObjWebhook { get; set; }

        /// <summary>
        /// An array containing details of previous attempts that were made to deliver the message. The array is empty if it&#39;s the first attempt.
        /// </summary>
        /// <value>An array containing details of previous attempts that were made to deliver the message. The array is empty if it&#39;s the first attempt.</value>
        [DataMember(Name = "a_objAttempt", IsRequired = true, EmitDefaultValue = true)]
        public List<AttemptResponseCompound> AObjAttempt { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzsigndocument
        /// </summary>
        [DataMember(Name = "objEzsigndocument", IsRequired = true, EmitDefaultValue = true)]
        public EzsigndocumentResponse ObjEzsigndocument { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhookEzsignDocumentUnsent {\n");
            sb.Append("  ObjWebhook: ").Append(ObjWebhook).Append("\n");
            sb.Append("  AObjAttempt: ").Append(AObjAttempt).Append("\n");
            sb.Append("  ObjEzsigndocument: ").Append(ObjEzsigndocument).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
