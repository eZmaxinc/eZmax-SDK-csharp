/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.7
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// EzsignbulksendsignermappingGetObjectV1ResponseAllOf
    /// </summary>
    [DataContract]
    public partial class EzsignbulksendsignermappingGetObjectV1ResponseAllOf :  IEquatable<EzsignbulksendsignermappingGetObjectV1ResponseAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendsignermappingGetObjectV1ResponseAllOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignbulksendsignermappingGetObjectV1ResponseAllOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendsignermappingGetObjectV1ResponseAllOf" /> class.
        /// </summary>
        /// <param name="mPayload">mPayload (required).</param>
        public EzsignbulksendsignermappingGetObjectV1ResponseAllOf(EzsignbulksendsignermappingGetObjectV1ResponseMPayload mPayload = default(EzsignbulksendsignermappingGetObjectV1ResponseMPayload))
        {
            // to ensure "mPayload" is required (not null)
            if (mPayload == null)
            {
                throw new InvalidDataException("mPayload is a required property for EzsignbulksendsignermappingGetObjectV1ResponseAllOf and cannot be null");
            }
            else
            {
                this.MPayload = mPayload;
            }

        }

        /// <summary>
        /// Gets or Sets MPayload
        /// </summary>
        [DataMember(Name="mPayload", EmitDefaultValue=true)]
        public EzsignbulksendsignermappingGetObjectV1ResponseMPayload MPayload { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzsignbulksendsignermappingGetObjectV1ResponseAllOf {\n");
            sb.Append("  MPayload: ").Append(MPayload).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsignbulksendsignermappingGetObjectV1ResponseAllOf);
        }

        /// <summary>
        /// Returns true if EzsignbulksendsignermappingGetObjectV1ResponseAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsignbulksendsignermappingGetObjectV1ResponseAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsignbulksendsignermappingGetObjectV1ResponseAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MPayload == input.MPayload ||
                    (this.MPayload != null &&
                    this.MPayload.Equals(input.MPayload))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MPayload != null)
                    hashCode = hashCode * 59 + this.MPayload.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
