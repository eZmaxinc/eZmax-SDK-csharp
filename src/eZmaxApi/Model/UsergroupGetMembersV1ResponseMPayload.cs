/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Response for GET /1/object/usergroup/{pkiUsergroupID}/GetMembers
    /// </summary>
    [DataContract]
    public partial class UsergroupGetMembersV1ResponseMPayload :  IEquatable<UsergroupGetMembersV1ResponseMPayload>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UsergroupGetMembersV1ResponseMPayload" /> class.
        /// </summary>
        /// <param name="aFkiUserID">aFkiUserID.</param>
        public UsergroupGetMembersV1ResponseMPayload(List<int> aFkiUserID = default(List<int>))
        {
            this.AFkiUserID = aFkiUserID;
        }

        /// <summary>
        /// Gets or Sets AFkiUserID
        /// </summary>
        [DataMember(Name="a_fkiUserID", EmitDefaultValue=false)]
        public List<int> AFkiUserID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UsergroupGetMembersV1ResponseMPayload {\n");
            sb.Append("  AFkiUserID: ").Append(AFkiUserID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UsergroupGetMembersV1ResponseMPayload);
        }

        /// <summary>
        /// Returns true if UsergroupGetMembersV1ResponseMPayload instances are equal
        /// </summary>
        /// <param name="input">Instance of UsergroupGetMembersV1ResponseMPayload to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UsergroupGetMembersV1ResponseMPayload input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AFkiUserID == input.AFkiUserID ||
                    this.AFkiUserID != null &&
                    input.AFkiUserID != null &&
                    this.AFkiUserID.SequenceEqual(input.AFkiUserID)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AFkiUserID != null)
                    hashCode = hashCode * 59 + this.AFkiUserID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
