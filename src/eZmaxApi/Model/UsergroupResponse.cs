/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Usergroup Object
    /// </summary>
    [DataContract(Name = "usergroup-Response")]
    public partial class UsergroupResponse : IEquatable<UsergroupResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UsergroupResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UsergroupResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UsergroupResponse" /> class.
        /// </summary>
        /// <param name="pkiUsergroupID">The unique ID of the Usergroup (required).</param>
        /// <param name="objUsergroupName">objUsergroupName (required).</param>
        public UsergroupResponse(int pkiUsergroupID = default(int), MultilingualUsergroupName objUsergroupName = default(MultilingualUsergroupName))
        {
            this.PkiUsergroupID = pkiUsergroupID;
            // to ensure "objUsergroupName" is required (not null)
            if (objUsergroupName == null)
            {
                throw new ArgumentNullException("objUsergroupName is a required property for UsergroupResponse and cannot be null");
            }
            this.ObjUsergroupName = objUsergroupName;
        }

        /// <summary>
        /// The unique ID of the Usergroup
        /// </summary>
        /// <value>The unique ID of the Usergroup</value>
        /* <example>2</example>*/
        [DataMember(Name = "pkiUsergroupID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiUsergroupID { get; set; }

        /// <summary>
        /// Gets or Sets ObjUsergroupName
        /// </summary>
        [DataMember(Name = "objUsergroupName", IsRequired = true, EmitDefaultValue = true)]
        public MultilingualUsergroupName ObjUsergroupName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UsergroupResponse {\n");
            sb.Append("  PkiUsergroupID: ").Append(PkiUsergroupID).Append("\n");
            sb.Append("  ObjUsergroupName: ").Append(ObjUsergroupName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UsergroupResponse);
        }

        /// <summary>
        /// Returns true if UsergroupResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of UsergroupResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UsergroupResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PkiUsergroupID == input.PkiUsergroupID ||
                    this.PkiUsergroupID.Equals(input.PkiUsergroupID)
                ) && 
                (
                    this.ObjUsergroupName == input.ObjUsergroupName ||
                    (this.ObjUsergroupName != null &&
                    this.ObjUsergroupName.Equals(input.ObjUsergroupName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PkiUsergroupID.GetHashCode();
                if (this.ObjUsergroupName != null)
                {
                    hashCode = (hashCode * 59) + this.ObjUsergroupName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiUsergroupID (int) maximum
            if (this.PkiUsergroupID > (int)255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiUsergroupID, must be a value less than or equal to 255.", new [] { "PkiUsergroupID" });
            }

            // PkiUsergroupID (int) minimum
            if (this.PkiUsergroupID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiUsergroupID, must be a value greater than or equal to 0.", new [] { "PkiUsergroupID" });
            }

            yield break;
        }
    }

}
