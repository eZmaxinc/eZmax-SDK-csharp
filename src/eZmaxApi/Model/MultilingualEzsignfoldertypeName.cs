/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Name of the Ezsignfoldertype
    /// </summary>
    [DataContract(Name = "Multilingual-EzsignfoldertypeName")]
    public partial class MultilingualEzsignfoldertypeName : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MultilingualEzsignfoldertypeName" /> class.
        /// </summary>
        /// <param name="sEzsignfoldertypeName1">The name of the Ezsignfoldertype in French.</param>
        /// <param name="sEzsignfoldertypeName2">The name of the Ezsignfoldertype in English.</param>
        public MultilingualEzsignfoldertypeName(string sEzsignfoldertypeName1 = default(string), string sEzsignfoldertypeName2 = default(string))
        {
            this.SEzsignfoldertypeName1 = sEzsignfoldertypeName1;
            this.SEzsignfoldertypeName2 = sEzsignfoldertypeName2;
        }

        /// <summary>
        /// The name of the Ezsignfoldertype in French
        /// </summary>
        /// <value>The name of the Ezsignfoldertype in French</value>
        /* <example>Embauche</example>*/
        [DataMember(Name = "sEzsignfoldertypeName1", EmitDefaultValue = false)]
        public string SEzsignfoldertypeName1 { get; set; }

        /// <summary>
        /// The name of the Ezsignfoldertype in English
        /// </summary>
        /// <value>The name of the Ezsignfoldertype in English</value>
        /* <example>Recruitment</example>*/
        [DataMember(Name = "sEzsignfoldertypeName2", EmitDefaultValue = false)]
        public string SEzsignfoldertypeName2 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MultilingualEzsignfoldertypeName {\n");
            sb.Append("  SEzsignfoldertypeName1: ").Append(SEzsignfoldertypeName1).Append("\n");
            sb.Append("  SEzsignfoldertypeName2: ").Append(SEzsignfoldertypeName2).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
