/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.8
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// EzsigntemplateformfieldgroupResponseCompoundAllOf
    /// </summary>
    [DataContract]
    public partial class EzsigntemplateformfieldgroupResponseCompoundAllOf :  IEquatable<EzsigntemplateformfieldgroupResponseCompoundAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplateformfieldgroupResponseCompoundAllOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplateformfieldgroupResponseCompoundAllOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplateformfieldgroupResponseCompoundAllOf" /> class.
        /// </summary>
        /// <param name="aObjEzsigntemplateformfieldgroupsigner">aObjEzsigntemplateformfieldgroupsigner (required).</param>
        /// <param name="aObjDropdownElement">aObjDropdownElement.</param>
        /// <param name="aObjEzsigntemplateformfield">aObjEzsigntemplateformfield (required).</param>
        public EzsigntemplateformfieldgroupResponseCompoundAllOf(List<EzsigntemplateformfieldgroupsignerResponseCompound> aObjEzsigntemplateformfieldgroupsigner = default(List<EzsigntemplateformfieldgroupsignerResponseCompound>), List<CustomDropdownElementResponseCompound> aObjDropdownElement = default(List<CustomDropdownElementResponseCompound>), List<EzsigntemplateformfieldResponseCompound> aObjEzsigntemplateformfield = default(List<EzsigntemplateformfieldResponseCompound>))
        {
            // to ensure "aObjEzsigntemplateformfieldgroupsigner" is required (not null)
            if (aObjEzsigntemplateformfieldgroupsigner == null)
            {
                throw new InvalidDataException("aObjEzsigntemplateformfieldgroupsigner is a required property for EzsigntemplateformfieldgroupResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.AObjEzsigntemplateformfieldgroupsigner = aObjEzsigntemplateformfieldgroupsigner;
            }

            // to ensure "aObjEzsigntemplateformfield" is required (not null)
            if (aObjEzsigntemplateformfield == null)
            {
                throw new InvalidDataException("aObjEzsigntemplateformfield is a required property for EzsigntemplateformfieldgroupResponseCompoundAllOf and cannot be null");
            }
            else
            {
                this.AObjEzsigntemplateformfield = aObjEzsigntemplateformfield;
            }

            this.AObjDropdownElement = aObjDropdownElement;
        }

        /// <summary>
        /// Gets or Sets AObjEzsigntemplateformfieldgroupsigner
        /// </summary>
        [DataMember(Name="a_objEzsigntemplateformfieldgroupsigner", EmitDefaultValue=true)]
        public List<EzsigntemplateformfieldgroupsignerResponseCompound> AObjEzsigntemplateformfieldgroupsigner { get; set; }

        /// <summary>
        /// Gets or Sets AObjDropdownElement
        /// </summary>
        [DataMember(Name="a_objDropdownElement", EmitDefaultValue=false)]
        public List<CustomDropdownElementResponseCompound> AObjDropdownElement { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsigntemplateformfield
        /// </summary>
        [DataMember(Name="a_objEzsigntemplateformfield", EmitDefaultValue=true)]
        public List<EzsigntemplateformfieldResponseCompound> AObjEzsigntemplateformfield { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzsigntemplateformfieldgroupResponseCompoundAllOf {\n");
            sb.Append("  AObjEzsigntemplateformfieldgroupsigner: ").Append(AObjEzsigntemplateformfieldgroupsigner).Append("\n");
            sb.Append("  AObjDropdownElement: ").Append(AObjDropdownElement).Append("\n");
            sb.Append("  AObjEzsigntemplateformfield: ").Append(AObjEzsigntemplateformfield).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsigntemplateformfieldgroupResponseCompoundAllOf);
        }

        /// <summary>
        /// Returns true if EzsigntemplateformfieldgroupResponseCompoundAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsigntemplateformfieldgroupResponseCompoundAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsigntemplateformfieldgroupResponseCompoundAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AObjEzsigntemplateformfieldgroupsigner == input.AObjEzsigntemplateformfieldgroupsigner ||
                    this.AObjEzsigntemplateformfieldgroupsigner != null &&
                    input.AObjEzsigntemplateformfieldgroupsigner != null &&
                    this.AObjEzsigntemplateformfieldgroupsigner.SequenceEqual(input.AObjEzsigntemplateformfieldgroupsigner)
                ) && 
                (
                    this.AObjDropdownElement == input.AObjDropdownElement ||
                    this.AObjDropdownElement != null &&
                    input.AObjDropdownElement != null &&
                    this.AObjDropdownElement.SequenceEqual(input.AObjDropdownElement)
                ) && 
                (
                    this.AObjEzsigntemplateformfield == input.AObjEzsigntemplateformfield ||
                    this.AObjEzsigntemplateformfield != null &&
                    input.AObjEzsigntemplateformfield != null &&
                    this.AObjEzsigntemplateformfield.SequenceEqual(input.AObjEzsigntemplateformfield)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AObjEzsigntemplateformfieldgroupsigner != null)
                    hashCode = hashCode * 59 + this.AObjEzsigntemplateformfieldgroupsigner.GetHashCode();
                if (this.AObjDropdownElement != null)
                    hashCode = hashCode * 59 + this.AObjDropdownElement.GetHashCode();
                if (this.AObjEzsigntemplateformfield != null)
                    hashCode = hashCode * 59 + this.AObjEzsigntemplateformfield.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
