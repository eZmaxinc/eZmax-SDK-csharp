/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// This is the base Webhook object
    /// </summary>
    [DataContract(Name = "Webhook-Ezsign-EzsignsignerAcceptclause")]
    public partial class WebhookEzsignEzsignsignerAcceptclause : CommonWebhook, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookEzsignEzsignsignerAcceptclause" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebhookEzsignEzsignsignerAcceptclause() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookEzsignEzsignsignerAcceptclause" /> class.
        /// </summary>
        /// <param name="objEzsignfolder">objEzsignfolder.</param>
        /// <param name="objEzsignfoldersignerassociation">objEzsignfoldersignerassociation (required).</param>
        /// <param name="objWebhook">objWebhook (required).</param>
        /// <param name="aObjAttempt">An array containing details of previous attempts that were made to deliver the message. The array is empty if it&#39;s the first attempt. (required).</param>
        public WebhookEzsignEzsignsignerAcceptclause(EzsignfolderResponse objEzsignfolder = default(EzsignfolderResponse), EzsignfoldersignerassociationResponseCompound objEzsignfoldersignerassociation = default(EzsignfoldersignerassociationResponseCompound), CustomWebhookResponse objWebhook = default(CustomWebhookResponse), List<AttemptResponseCompound> aObjAttempt = default(List<AttemptResponseCompound>)) : base()
        {
            // to ensure "objEzsignfoldersignerassociation" is required (not null)
            if (objEzsignfoldersignerassociation == null)
            {
                throw new ArgumentNullException("objEzsignfoldersignerassociation is a required property for WebhookEzsignEzsignsignerAcceptclause and cannot be null");
            }
            this.ObjEzsignfoldersignerassociation = objEzsignfoldersignerassociation;
            this.ObjEzsignfolder = objEzsignfolder;
        }

        /// <summary>
        /// Gets or Sets ObjEzsignfolder
        /// </summary>
        [DataMember(Name = "objEzsignfolder", EmitDefaultValue = false)]
        public EzsignfolderResponse ObjEzsignfolder { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzsignfoldersignerassociation
        /// </summary>
        [DataMember(Name = "objEzsignfoldersignerassociation", IsRequired = true, EmitDefaultValue = true)]
        public EzsignfoldersignerassociationResponseCompound ObjEzsignfoldersignerassociation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhookEzsignEzsignsignerAcceptclause {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  ObjEzsignfolder: ").Append(ObjEzsignfolder).Append("\n");
            sb.Append("  ObjEzsignfoldersignerassociation: ").Append(ObjEzsignfoldersignerassociation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
