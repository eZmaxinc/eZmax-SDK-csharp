/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Contactinformations Object
    /// </summary>
    [DataContract(Name = "contactinformations-ResponseCompound")]
    public partial class ContactinformationsResponseCompound : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets EContactinformationsType
        /// </summary>
        [DataMember(Name = "eContactinformationsType", IsRequired = true, EmitDefaultValue = true)]
        public FieldEContactinformationsType EContactinformationsType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContactinformationsResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsResponseCompound" /> class.
        /// </summary>
        /// <param name="">The unique ID of the Contactinformations (required).</param>
        /// <param name="">The unique ID of the Address.</param>
        /// <param name="">The unique ID of the Phone..</param>
        /// <param name="">The unique ID of the Email.</param>
        /// <param name="">The unique ID of the Website Default.</param>
        /// <param name=""> (required).</param>
        /// <param name="">The url of the Contactinformations.</param>
        /// <param name="">.</param>
        /// <param name="">.</param>
        /// <param name="">.</param>
        /// <param name="">.</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        public ContactinformationsResponseCompound(int  = default(int), int  = default(int), int  = default(int), int  = default(int), int  = default(int), FieldEContactinformationsType  = default(FieldEContactinformationsType), string  = default(string), AddressResponseCompound  = default(AddressResponseCompound), PhoneResponseCompound  = default(PhoneResponseCompound), EmailResponseCompound  = default(EmailResponseCompound), WebsiteResponseCompound  = default(WebsiteResponseCompound), List<AddressResponseCompound>  = default(List<AddressResponseCompound>), List<PhoneResponseCompound>  = default(List<PhoneResponseCompound>), List<EmailResponseCompound>  = default(List<EmailResponseCompound>), List<WebsiteResponseCompound>  = default(List<WebsiteResponseCompound>))
        {
            this.PkiContactinformationsID = ;
            this.EContactinformationsType = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsResponseCompound and cannot be null");
            }
            this.AObjAddress = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsResponseCompound and cannot be null");
            }
            this.AObjPhone = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsResponseCompound and cannot be null");
            }
            this.AObjEmail = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for ContactinformationsResponseCompound and cannot be null");
            }
            this.AObjWebsite = ;
            this.FkiAddressIDDefault = ;
            this.FkiPhoneIDDefault = ;
            this.FkiEmailIDDefault = ;
            this.FkiWebsiteIDDefault = ;
            this.SContactinformationsUrl = ;
            this.ObjAddressDefault = ;
            this.ObjPhoneDefault = ;
            this.ObjEmailDefault = ;
            this.ObjWebsiteDefault = ;
        }

        /// <summary>
        /// The unique ID of the Contactinformations
        /// </summary>
        /// <value>The unique ID of the Contactinformations</value>
        /* <example>55</example>*/
        [DataMember(Name = "pkiContactinformationsID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiContactinformationsID { get; set; }

        /// <summary>
        /// The unique ID of the Address
        /// </summary>
        /// <value>The unique ID of the Address</value>
        /* <example>142</example>*/
        [DataMember(Name = "fkiAddressIDDefault", EmitDefaultValue = false)]
        public int FkiAddressIDDefault { get; set; }

        /// <summary>
        /// The unique ID of the Phone.
        /// </summary>
        /// <value>The unique ID of the Phone.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiPhoneIDDefault", EmitDefaultValue = false)]
        public int FkiPhoneIDDefault { get; set; }

        /// <summary>
        /// The unique ID of the Email
        /// </summary>
        /// <value>The unique ID of the Email</value>
        /* <example>22</example>*/
        [DataMember(Name = "fkiEmailIDDefault", EmitDefaultValue = false)]
        public int FkiEmailIDDefault { get; set; }

        /// <summary>
        /// The unique ID of the Website Default
        /// </summary>
        /// <value>The unique ID of the Website Default</value>
        /* <example>145</example>*/
        [DataMember(Name = "fkiWebsiteIDDefault", EmitDefaultValue = false)]
        public int FkiWebsiteIDDefault { get; set; }

        /// <summary>
        /// The url of the Contactinformations
        /// </summary>
        /// <value>The url of the Contactinformations</value>
        /* <example>https://www.example.com</example>*/
        [DataMember(Name = "sContactinformationsUrl", EmitDefaultValue = false)]
        public string SContactinformationsUrl { get; set; }

        /// <summary>
        /// Gets or Sets ObjAddressDefault
        /// </summary>
        [DataMember(Name = "objAddressDefault", EmitDefaultValue = false)]
        public AddressResponseCompound ObjAddressDefault { get; set; }

        /// <summary>
        /// Gets or Sets ObjPhoneDefault
        /// </summary>
        [DataMember(Name = "objPhoneDefault", EmitDefaultValue = false)]
        public PhoneResponseCompound ObjPhoneDefault { get; set; }

        /// <summary>
        /// Gets or Sets ObjEmailDefault
        /// </summary>
        [DataMember(Name = "objEmailDefault", EmitDefaultValue = false)]
        public EmailResponseCompound ObjEmailDefault { get; set; }

        /// <summary>
        /// Gets or Sets ObjWebsiteDefault
        /// </summary>
        [DataMember(Name = "objWebsiteDefault", EmitDefaultValue = false)]
        public WebsiteResponseCompound ObjWebsiteDefault { get; set; }

        /// <summary>
        /// Gets or Sets AObjAddress
        /// </summary>
        [DataMember(Name = "a_objAddress", IsRequired = true, EmitDefaultValue = true)]
        public List<AddressResponseCompound> AObjAddress { get; set; }

        /// <summary>
        /// Gets or Sets AObjPhone
        /// </summary>
        [DataMember(Name = "a_objPhone", IsRequired = true, EmitDefaultValue = true)]
        public List<PhoneResponseCompound> AObjPhone { get; set; }

        /// <summary>
        /// Gets or Sets AObjEmail
        /// </summary>
        [DataMember(Name = "a_objEmail", IsRequired = true, EmitDefaultValue = true)]
        public List<EmailResponseCompound> AObjEmail { get; set; }

        /// <summary>
        /// Gets or Sets AObjWebsite
        /// </summary>
        [DataMember(Name = "a_objWebsite", IsRequired = true, EmitDefaultValue = true)]
        public List<WebsiteResponseCompound> AObjWebsite { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContactinformationsResponseCompound {\n");
            sb.Append("  PkiContactinformationsID: ").Append(PkiContactinformationsID).Append("\n");
            sb.Append("  FkiAddressIDDefault: ").Append(FkiAddressIDDefault).Append("\n");
            sb.Append("  FkiPhoneIDDefault: ").Append(FkiPhoneIDDefault).Append("\n");
            sb.Append("  FkiEmailIDDefault: ").Append(FkiEmailIDDefault).Append("\n");
            sb.Append("  FkiWebsiteIDDefault: ").Append(FkiWebsiteIDDefault).Append("\n");
            sb.Append("  EContactinformationsType: ").Append(EContactinformationsType).Append("\n");
            sb.Append("  SContactinformationsUrl: ").Append(SContactinformationsUrl).Append("\n");
            sb.Append("  ObjAddressDefault: ").Append(ObjAddressDefault).Append("\n");
            sb.Append("  ObjPhoneDefault: ").Append(ObjPhoneDefault).Append("\n");
            sb.Append("  ObjEmailDefault: ").Append(ObjEmailDefault).Append("\n");
            sb.Append("  ObjWebsiteDefault: ").Append(ObjWebsiteDefault).Append("\n");
            sb.Append("  AObjAddress: ").Append(AObjAddress).Append("\n");
            sb.Append("  AObjPhone: ").Append(AObjPhone).Append("\n");
            sb.Append("  AObjEmail: ").Append(AObjEmail).Append("\n");
            sb.Append("  AObjWebsite: ").Append(AObjWebsite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiContactinformationsID (int) maximum
            if (this.PkiContactinformationsID > (int)16777215)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiContactinformationsID, must be a value less than or equal to 16777215.", new [] { "PkiContactinformationsID" });
            }

            // PkiContactinformationsID (int) minimum
            if (this.PkiContactinformationsID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiContactinformationsID, must be a value greater than or equal to 0.", new [] { "PkiContactinformationsID" });
            }

            // FkiAddressIDDefault (int) minimum
            if (this.FkiAddressIDDefault < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiAddressIDDefault, must be a value greater than or equal to 0.", new [] { "FkiAddressIDDefault" });
            }

            // FkiPhoneIDDefault (int) minimum
            if (this.FkiPhoneIDDefault < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiPhoneIDDefault, must be a value greater than or equal to 0.", new [] { "FkiPhoneIDDefault" });
            }

            // FkiEmailIDDefault (int) maximum
            if (this.FkiEmailIDDefault > (int)16777215)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEmailIDDefault, must be a value less than or equal to 16777215.", new [] { "FkiEmailIDDefault" });
            }

            // FkiEmailIDDefault (int) minimum
            if (this.FkiEmailIDDefault < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEmailIDDefault, must be a value greater than or equal to 1.", new [] { "FkiEmailIDDefault" });
            }

            // FkiWebsiteIDDefault (int) maximum
            if (this.FkiWebsiteIDDefault > (int)16777215)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiWebsiteIDDefault, must be a value less than or equal to 16777215.", new [] { "FkiWebsiteIDDefault" });
            }

            // FkiWebsiteIDDefault (int) minimum
            if (this.FkiWebsiteIDDefault < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiWebsiteIDDefault, must be a value greater than or equal to 0.", new [] { "FkiWebsiteIDDefault" });
            }

            if (this.SContactinformationsUrl != null) {
                // SContactinformationsUrl (string) pattern
                Regex regexSContactinformationsUrl = new Regex(@"^.{0,255}$", RegexOptions.CultureInvariant);
                if (!regexSContactinformationsUrl.Match(this.SContactinformationsUrl).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SContactinformationsUrl, must match a pattern of " + regexSContactinformationsUrl, new [] { "SContactinformationsUrl" });
                }
            }

            yield break;
        }
    }

}
