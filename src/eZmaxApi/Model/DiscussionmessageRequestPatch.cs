/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Discussionmessage Object
    /// </summary>
    [DataContract(Name = "discussionmessage-RequestPatch")]
    public partial class DiscussionmessageRequestPatch : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DiscussionmessageRequestPatch" /> class.
        /// </summary>
        /// <param name="fkiDiscussionmembershipIDActionrequired">The unique ID of the Discussionmembership.</param>
        /// <param name="tDiscussionmessageContent">The content of the Discussionmessage.</param>
        public DiscussionmessageRequestPatch(int fkiDiscussionmembershipIDActionrequired = default(int), string tDiscussionmessageContent = default(string))
        {
            this.FkiDiscussionmembershipIDActionrequired = fkiDiscussionmembershipIDActionrequired;
            this.TDiscussionmessageContent = tDiscussionmessageContent;
        }

        /// <summary>
        /// The unique ID of the Discussionmembership
        /// </summary>
        /// <value>The unique ID of the Discussionmembership</value>
        /* <example>165</example>*/
        [DataMember(Name = "fkiDiscussionmembershipIDActionrequired", EmitDefaultValue = false)]
        public int FkiDiscussionmembershipIDActionrequired { get; set; }

        /// <summary>
        /// The content of the Discussionmessage
        /// </summary>
        /// <value>The content of the Discussionmessage</value>
        /* <example>Hello, this is an example of content in a message</example>*/
        [DataMember(Name = "tDiscussionmessageContent", EmitDefaultValue = false)]
        public string TDiscussionmessageContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DiscussionmessageRequestPatch {\n");
            sb.Append("  FkiDiscussionmembershipIDActionrequired: ").Append(FkiDiscussionmembershipIDActionrequired).Append("\n");
            sb.Append("  TDiscussionmessageContent: ").Append(TDiscussionmessageContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiDiscussionmembershipIDActionrequired (int) maximum
            if (this.FkiDiscussionmembershipIDActionrequired > (int)16777215)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiDiscussionmembershipIDActionrequired, must be a value less than or equal to 16777215.", new [] { "FkiDiscussionmembershipIDActionrequired" });
            }

            // FkiDiscussionmembershipIDActionrequired (int) minimum
            if (this.FkiDiscussionmembershipIDActionrequired < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiDiscussionmembershipIDActionrequired, must be a value greater than or equal to 0.", new [] { "FkiDiscussionmembershipIDActionrequired" });
            }

            if (this.TDiscussionmessageContent != null) {
                // TDiscussionmessageContent (string) pattern
                Regex regexTDiscussionmessageContent = new Regex(@"^.{0,65535}$", RegexOptions.CultureInvariant);
                if (!regexTDiscussionmessageContent.Match(this.TDiscussionmessageContent).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TDiscussionmessageContent, must match a pattern of " + regexTDiscussionmessageContent, new [] { "TDiscussionmessageContent" });
                }
            }

            yield break;
        }
    }

}
