/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Custom Ezsignformfielderrortest Object to contain the detail of the test error
    /// </summary>
    [DataContract(Name = "Custom-Ezsignformfielderrortest-Response")]
    public partial class CustomEzsignformfielderrortestResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEzsignformfielderrortestResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomEzsignformfielderrortestResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEzsignformfielderrortestResponse" /> class.
        /// </summary>
        /// <param name="">The name of the test (required).</param>
        /// <param name="">The detail why the test failed (required).</param>
        public CustomEzsignformfielderrortestResponse(string  = default(string), string  = default(string))
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CustomEzsignformfielderrortestResponse and cannot be null");
            }
            this.SEzsignformfielderrortestName = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CustomEzsignformfielderrortestResponse and cannot be null");
            }
            this.SEzsignformfielderrortestDetail = ;
        }

        /// <summary>
        /// The name of the test
        /// </summary>
        /// <value>The name of the test</value>
        [DataMember(Name = "sEzsignformfielderrortestName", IsRequired = true, EmitDefaultValue = true)]
        public string SEzsignformfielderrortestName { get; set; }

        /// <summary>
        /// The detail why the test failed
        /// </summary>
        /// <value>The detail why the test failed</value>
        [DataMember(Name = "sEzsignformfielderrortestDetail", IsRequired = true, EmitDefaultValue = true)]
        public string SEzsignformfielderrortestDetail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomEzsignformfielderrortestResponse {\n");
            sb.Append("  SEzsignformfielderrortestName: ").Append(SEzsignformfielderrortestName).Append("\n");
            sb.Append("  SEzsignformfielderrortestDetail: ").Append(SEzsignformfielderrortestDetail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.SEzsignformfielderrortestName != null) {
                // SEzsignformfielderrortestName (string) pattern
                Regex regexSEzsignformfielderrortestName = new Regex(@"^.{0,50}$", RegexOptions.CultureInvariant);
                if (!regexSEzsignformfielderrortestName.Match(this.SEzsignformfielderrortestName).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SEzsignformfielderrortestName, must match a pattern of " + regexSEzsignformfielderrortestName, new [] { "SEzsignformfielderrortestName" });
                }
            }

            if (this.SEzsignformfielderrortestDetail != null) {
                // SEzsignformfielderrortestDetail (string) pattern
                Regex regexSEzsignformfielderrortestDetail = new Regex(@"^.{0,255}$", RegexOptions.CultureInvariant);
                if (!regexSEzsignformfielderrortestDetail.Match(this.SEzsignformfielderrortestDetail).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SEzsignformfielderrortestDetail, must match a pattern of " + regexSEzsignformfielderrortestDetail, new [] { "SEzsignformfielderrortestDetail" });
                }
            }

            yield break;
        }
    }

}
