/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Userstaged List Element
    /// </summary>
    [DataContract]
    public partial class UserstagedListElement :  IEquatable<UserstagedListElement>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserstagedListElement" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UserstagedListElement() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserstagedListElement" /> class.
        /// </summary>
        /// <param name="pkiUserstagedID">The unique ID of the Userstaged (required).</param>
        /// <param name="sEmailAddress">The email address. (required).</param>
        /// <param name="sUserstagedFirstname">The firstname of the Userstaged (required).</param>
        /// <param name="sUserstagedLastname">The lastname of the Userstaged (required).</param>
        /// <param name="sUserstagedExternalid">The externalid of the Userstaged (required).</param>
        public UserstagedListElement(int pkiUserstagedID = default(int), string sEmailAddress = default(string), string sUserstagedFirstname = default(string), string sUserstagedLastname = default(string), string sUserstagedExternalid = default(string))
        {
            // to ensure "pkiUserstagedID" is required (not null)
            if (pkiUserstagedID == null)
            {
                throw new InvalidDataException("pkiUserstagedID is a required property for UserstagedListElement and cannot be null");
            }
            else
            {
                this.PkiUserstagedID = pkiUserstagedID;
            }

            // to ensure "sEmailAddress" is required (not null)
            if (sEmailAddress == null)
            {
                throw new InvalidDataException("sEmailAddress is a required property for UserstagedListElement and cannot be null");
            }
            else
            {
                this.SEmailAddress = sEmailAddress;
            }

            // to ensure "sUserstagedFirstname" is required (not null)
            if (sUserstagedFirstname == null)
            {
                throw new InvalidDataException("sUserstagedFirstname is a required property for UserstagedListElement and cannot be null");
            }
            else
            {
                this.SUserstagedFirstname = sUserstagedFirstname;
            }

            // to ensure "sUserstagedLastname" is required (not null)
            if (sUserstagedLastname == null)
            {
                throw new InvalidDataException("sUserstagedLastname is a required property for UserstagedListElement and cannot be null");
            }
            else
            {
                this.SUserstagedLastname = sUserstagedLastname;
            }

            // to ensure "sUserstagedExternalid" is required (not null)
            if (sUserstagedExternalid == null)
            {
                throw new InvalidDataException("sUserstagedExternalid is a required property for UserstagedListElement and cannot be null");
            }
            else
            {
                this.SUserstagedExternalid = sUserstagedExternalid;
            }

        }

        /// <summary>
        /// The unique ID of the Userstaged
        /// </summary>
        /// <value>The unique ID of the Userstaged</value>
        [DataMember(Name="pkiUserstagedID", EmitDefaultValue=true)]
        public int PkiUserstagedID { get; set; }

        /// <summary>
        /// The email address.
        /// </summary>
        /// <value>The email address.</value>
        [DataMember(Name="sEmailAddress", EmitDefaultValue=true)]
        public string SEmailAddress { get; set; }

        /// <summary>
        /// The firstname of the Userstaged
        /// </summary>
        /// <value>The firstname of the Userstaged</value>
        [DataMember(Name="sUserstagedFirstname", EmitDefaultValue=true)]
        public string SUserstagedFirstname { get; set; }

        /// <summary>
        /// The lastname of the Userstaged
        /// </summary>
        /// <value>The lastname of the Userstaged</value>
        [DataMember(Name="sUserstagedLastname", EmitDefaultValue=true)]
        public string SUserstagedLastname { get; set; }

        /// <summary>
        /// The externalid of the Userstaged
        /// </summary>
        /// <value>The externalid of the Userstaged</value>
        [DataMember(Name="sUserstagedExternalid", EmitDefaultValue=true)]
        public string SUserstagedExternalid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserstagedListElement {\n");
            sb.Append("  PkiUserstagedID: ").Append(PkiUserstagedID).Append("\n");
            sb.Append("  SEmailAddress: ").Append(SEmailAddress).Append("\n");
            sb.Append("  SUserstagedFirstname: ").Append(SUserstagedFirstname).Append("\n");
            sb.Append("  SUserstagedLastname: ").Append(SUserstagedLastname).Append("\n");
            sb.Append("  SUserstagedExternalid: ").Append(SUserstagedExternalid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserstagedListElement);
        }

        /// <summary>
        /// Returns true if UserstagedListElement instances are equal
        /// </summary>
        /// <param name="input">Instance of UserstagedListElement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserstagedListElement input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiUserstagedID == input.PkiUserstagedID ||
                    (this.PkiUserstagedID != null &&
                    this.PkiUserstagedID.Equals(input.PkiUserstagedID))
                ) && 
                (
                    this.SEmailAddress == input.SEmailAddress ||
                    (this.SEmailAddress != null &&
                    this.SEmailAddress.Equals(input.SEmailAddress))
                ) && 
                (
                    this.SUserstagedFirstname == input.SUserstagedFirstname ||
                    (this.SUserstagedFirstname != null &&
                    this.SUserstagedFirstname.Equals(input.SUserstagedFirstname))
                ) && 
                (
                    this.SUserstagedLastname == input.SUserstagedLastname ||
                    (this.SUserstagedLastname != null &&
                    this.SUserstagedLastname.Equals(input.SUserstagedLastname))
                ) && 
                (
                    this.SUserstagedExternalid == input.SUserstagedExternalid ||
                    (this.SUserstagedExternalid != null &&
                    this.SUserstagedExternalid.Equals(input.SUserstagedExternalid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiUserstagedID != null)
                    hashCode = hashCode * 59 + this.PkiUserstagedID.GetHashCode();
                if (this.SEmailAddress != null)
                    hashCode = hashCode * 59 + this.SEmailAddress.GetHashCode();
                if (this.SUserstagedFirstname != null)
                    hashCode = hashCode * 59 + this.SUserstagedFirstname.GetHashCode();
                if (this.SUserstagedLastname != null)
                    hashCode = hashCode * 59 + this.SUserstagedLastname.GetHashCode();
                if (this.SUserstagedExternalid != null)
                    hashCode = hashCode * 59 + this.SUserstagedExternalid.GetHashCode();
                return hashCode;
            }
        }
    }

}
