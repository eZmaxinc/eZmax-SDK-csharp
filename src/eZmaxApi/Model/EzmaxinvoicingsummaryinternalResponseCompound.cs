/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.15
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezmaxinvoicingsummaryinternal Object
    /// </summary>
    [DataContract]
    public partial class EzmaxinvoicingsummaryinternalResponseCompound :  IEquatable<EzmaxinvoicingsummaryinternalResponseCompound>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryinternalResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingsummaryinternalResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryinternalResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiEzmaxinvoicingsummaryinternalID">The unique ID of the Ezmaxinvoicingsummaryinternal.</param>
        /// <param name="objEzmaxinvoicingsummaryinternalDescription">objEzmaxinvoicingsummaryinternalDescription (required).</param>
        /// <param name="sEzmaxinvoicingsummaryinternalDescriptionX">The Ezmaxinvoicingsummaryinternal description in the language of the requester (required).</param>
        /// <param name="fkiEzmaxinvoicingID">The unique ID of the Ezmaxinvoicing.</param>
        /// <param name="fkiBillingentityinternalID">The unique ID of the Billingentityinternal. (required).</param>
        /// <param name="sBillingentityinternalDescriptionX">The description of the Billingentityinternal in the language of the requester (required).</param>
        /// <param name="aObjEzmaxinvoicingsummaryinternaldetail">aObjEzmaxinvoicingsummaryinternaldetail (required).</param>
        public EzmaxinvoicingsummaryinternalResponseCompound(int pkiEzmaxinvoicingsummaryinternalID = default(int), MultilingualEzmaxinvoicingsummaryinternalDescription objEzmaxinvoicingsummaryinternalDescription = default(MultilingualEzmaxinvoicingsummaryinternalDescription), string sEzmaxinvoicingsummaryinternalDescriptionX = default(string), int fkiEzmaxinvoicingID = default(int), int fkiBillingentityinternalID = default(int), string sBillingentityinternalDescriptionX = default(string), List<EzmaxinvoicingsummaryinternaldetailResponseCompound> aObjEzmaxinvoicingsummaryinternaldetail = default(List<EzmaxinvoicingsummaryinternaldetailResponseCompound>))
        {
            // to ensure "objEzmaxinvoicingsummaryinternalDescription" is required (not null)
            if (objEzmaxinvoicingsummaryinternalDescription == null)
            {
                throw new InvalidDataException("objEzmaxinvoicingsummaryinternalDescription is a required property for EzmaxinvoicingsummaryinternalResponseCompound and cannot be null");
            }
            else
            {
                this.ObjEzmaxinvoicingsummaryinternalDescription = objEzmaxinvoicingsummaryinternalDescription;
            }

            // to ensure "sEzmaxinvoicingsummaryinternalDescriptionX" is required (not null)
            if (sEzmaxinvoicingsummaryinternalDescriptionX == null)
            {
                throw new InvalidDataException("sEzmaxinvoicingsummaryinternalDescriptionX is a required property for EzmaxinvoicingsummaryinternalResponseCompound and cannot be null");
            }
            else
            {
                this.SEzmaxinvoicingsummaryinternalDescriptionX = sEzmaxinvoicingsummaryinternalDescriptionX;
            }

            // to ensure "fkiBillingentityinternalID" is required (not null)
            if (fkiBillingentityinternalID == null)
            {
                throw new InvalidDataException("fkiBillingentityinternalID is a required property for EzmaxinvoicingsummaryinternalResponseCompound and cannot be null");
            }
            else
            {
                this.FkiBillingentityinternalID = fkiBillingentityinternalID;
            }

            // to ensure "sBillingentityinternalDescriptionX" is required (not null)
            if (sBillingentityinternalDescriptionX == null)
            {
                throw new InvalidDataException("sBillingentityinternalDescriptionX is a required property for EzmaxinvoicingsummaryinternalResponseCompound and cannot be null");
            }
            else
            {
                this.SBillingentityinternalDescriptionX = sBillingentityinternalDescriptionX;
            }

            // to ensure "aObjEzmaxinvoicingsummaryinternaldetail" is required (not null)
            if (aObjEzmaxinvoicingsummaryinternaldetail == null)
            {
                throw new InvalidDataException("aObjEzmaxinvoicingsummaryinternaldetail is a required property for EzmaxinvoicingsummaryinternalResponseCompound and cannot be null");
            }
            else
            {
                this.AObjEzmaxinvoicingsummaryinternaldetail = aObjEzmaxinvoicingsummaryinternaldetail;
            }

            this.PkiEzmaxinvoicingsummaryinternalID = pkiEzmaxinvoicingsummaryinternalID;
            this.FkiEzmaxinvoicingID = fkiEzmaxinvoicingID;
        }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicingsummaryinternal
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicingsummaryinternal</value>
        [DataMember(Name="pkiEzmaxinvoicingsummaryinternalID", EmitDefaultValue=false)]
        public int PkiEzmaxinvoicingsummaryinternalID { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzmaxinvoicingsummaryinternalDescription
        /// </summary>
        [DataMember(Name="objEzmaxinvoicingsummaryinternalDescription", EmitDefaultValue=true)]
        public MultilingualEzmaxinvoicingsummaryinternalDescription ObjEzmaxinvoicingsummaryinternalDescription { get; set; }

        /// <summary>
        /// The Ezmaxinvoicingsummaryinternal description in the language of the requester
        /// </summary>
        /// <value>The Ezmaxinvoicingsummaryinternal description in the language of the requester</value>
        [DataMember(Name="sEzmaxinvoicingsummaryinternalDescriptionX", EmitDefaultValue=true)]
        public string SEzmaxinvoicingsummaryinternalDescriptionX { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicing
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicing</value>
        [DataMember(Name="fkiEzmaxinvoicingID", EmitDefaultValue=false)]
        public int FkiEzmaxinvoicingID { get; set; }

        /// <summary>
        /// The unique ID of the Billingentityinternal.
        /// </summary>
        /// <value>The unique ID of the Billingentityinternal.</value>
        [DataMember(Name="fkiBillingentityinternalID", EmitDefaultValue=true)]
        public int FkiBillingentityinternalID { get; set; }

        /// <summary>
        /// The description of the Billingentityinternal in the language of the requester
        /// </summary>
        /// <value>The description of the Billingentityinternal in the language of the requester</value>
        [DataMember(Name="sBillingentityinternalDescriptionX", EmitDefaultValue=true)]
        public string SBillingentityinternalDescriptionX { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryinternaldetail
        /// </summary>
        [DataMember(Name="a_objEzmaxinvoicingsummaryinternaldetail", EmitDefaultValue=true)]
        public List<EzmaxinvoicingsummaryinternaldetailResponseCompound> AObjEzmaxinvoicingsummaryinternaldetail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingsummaryinternalResponseCompound {\n");
            sb.Append("  PkiEzmaxinvoicingsummaryinternalID: ").Append(PkiEzmaxinvoicingsummaryinternalID).Append("\n");
            sb.Append("  ObjEzmaxinvoicingsummaryinternalDescription: ").Append(ObjEzmaxinvoicingsummaryinternalDescription).Append("\n");
            sb.Append("  SEzmaxinvoicingsummaryinternalDescriptionX: ").Append(SEzmaxinvoicingsummaryinternalDescriptionX).Append("\n");
            sb.Append("  FkiEzmaxinvoicingID: ").Append(FkiEzmaxinvoicingID).Append("\n");
            sb.Append("  FkiBillingentityinternalID: ").Append(FkiBillingentityinternalID).Append("\n");
            sb.Append("  SBillingentityinternalDescriptionX: ").Append(SBillingentityinternalDescriptionX).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryinternaldetail: ").Append(AObjEzmaxinvoicingsummaryinternaldetail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzmaxinvoicingsummaryinternalResponseCompound);
        }

        /// <summary>
        /// Returns true if EzmaxinvoicingsummaryinternalResponseCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of EzmaxinvoicingsummaryinternalResponseCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzmaxinvoicingsummaryinternalResponseCompound input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiEzmaxinvoicingsummaryinternalID == input.PkiEzmaxinvoicingsummaryinternalID ||
                    (this.PkiEzmaxinvoicingsummaryinternalID != null &&
                    this.PkiEzmaxinvoicingsummaryinternalID.Equals(input.PkiEzmaxinvoicingsummaryinternalID))
                ) && 
                (
                    this.ObjEzmaxinvoicingsummaryinternalDescription == input.ObjEzmaxinvoicingsummaryinternalDescription ||
                    (this.ObjEzmaxinvoicingsummaryinternalDescription != null &&
                    this.ObjEzmaxinvoicingsummaryinternalDescription.Equals(input.ObjEzmaxinvoicingsummaryinternalDescription))
                ) && 
                (
                    this.SEzmaxinvoicingsummaryinternalDescriptionX == input.SEzmaxinvoicingsummaryinternalDescriptionX ||
                    (this.SEzmaxinvoicingsummaryinternalDescriptionX != null &&
                    this.SEzmaxinvoicingsummaryinternalDescriptionX.Equals(input.SEzmaxinvoicingsummaryinternalDescriptionX))
                ) && 
                (
                    this.FkiEzmaxinvoicingID == input.FkiEzmaxinvoicingID ||
                    (this.FkiEzmaxinvoicingID != null &&
                    this.FkiEzmaxinvoicingID.Equals(input.FkiEzmaxinvoicingID))
                ) && 
                (
                    this.FkiBillingentityinternalID == input.FkiBillingentityinternalID ||
                    (this.FkiBillingentityinternalID != null &&
                    this.FkiBillingentityinternalID.Equals(input.FkiBillingentityinternalID))
                ) && 
                (
                    this.SBillingentityinternalDescriptionX == input.SBillingentityinternalDescriptionX ||
                    (this.SBillingentityinternalDescriptionX != null &&
                    this.SBillingentityinternalDescriptionX.Equals(input.SBillingentityinternalDescriptionX))
                ) && 
                (
                    this.AObjEzmaxinvoicingsummaryinternaldetail == input.AObjEzmaxinvoicingsummaryinternaldetail ||
                    this.AObjEzmaxinvoicingsummaryinternaldetail != null &&
                    input.AObjEzmaxinvoicingsummaryinternaldetail != null &&
                    this.AObjEzmaxinvoicingsummaryinternaldetail.SequenceEqual(input.AObjEzmaxinvoicingsummaryinternaldetail)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiEzmaxinvoicingsummaryinternalID != null)
                    hashCode = hashCode * 59 + this.PkiEzmaxinvoicingsummaryinternalID.GetHashCode();
                if (this.ObjEzmaxinvoicingsummaryinternalDescription != null)
                    hashCode = hashCode * 59 + this.ObjEzmaxinvoicingsummaryinternalDescription.GetHashCode();
                if (this.SEzmaxinvoicingsummaryinternalDescriptionX != null)
                    hashCode = hashCode * 59 + this.SEzmaxinvoicingsummaryinternalDescriptionX.GetHashCode();
                if (this.FkiEzmaxinvoicingID != null)
                    hashCode = hashCode * 59 + this.FkiEzmaxinvoicingID.GetHashCode();
                if (this.FkiBillingentityinternalID != null)
                    hashCode = hashCode * 59 + this.FkiBillingentityinternalID.GetHashCode();
                if (this.SBillingentityinternalDescriptionX != null)
                    hashCode = hashCode * 59 + this.SBillingentityinternalDescriptionX.GetHashCode();
                if (this.AObjEzmaxinvoicingsummaryinternaldetail != null)
                    hashCode = hashCode * 59 + this.AObjEzmaxinvoicingsummaryinternaldetail.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // PkiEzmaxinvoicingsummaryinternalID (int) minimum
            if(this.PkiEzmaxinvoicingsummaryinternalID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzmaxinvoicingsummaryinternalID, must be a value greater than or equal to 0.", new [] { "PkiEzmaxinvoicingsummaryinternalID" });
            }

            // SEzmaxinvoicingsummaryinternalDescriptionX (string) maxLength
            if(this.SEzmaxinvoicingsummaryinternalDescriptionX != null && this.SEzmaxinvoicingsummaryinternalDescriptionX.Length > 70)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SEzmaxinvoicingsummaryinternalDescriptionX, length must be less than 70.", new [] { "SEzmaxinvoicingsummaryinternalDescriptionX" });
            }




            // FkiEzmaxinvoicingID (int) minimum
            if(this.FkiEzmaxinvoicingID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxinvoicingID, must be a value greater than or equal to 0.", new [] { "FkiEzmaxinvoicingID" });
            }



            // FkiBillingentityinternalID (int) minimum
            if(this.FkiBillingentityinternalID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBillingentityinternalID, must be a value greater than or equal to 0.", new [] { "FkiBillingentityinternalID" });
            }

            yield break;
        }
    }

}
