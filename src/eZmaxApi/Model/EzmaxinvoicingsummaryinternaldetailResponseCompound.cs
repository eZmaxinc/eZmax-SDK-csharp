/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezmaxinvoicingsummaryinternaldetail Object
    /// </summary>
    [DataContract]
    public partial class EzmaxinvoicingsummaryinternaldetailResponseCompound :  IEquatable<EzmaxinvoicingsummaryinternaldetailResponseCompound>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryinternaldetailResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingsummaryinternaldetailResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryinternaldetailResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiEzmaxinvoicingsummaryinternaldetailID">The unique ID of the Ezmaxinvoicingsummaryinternaldetail.</param>
        /// <param name="fkiEzmaxinvoicingsummaryinternalID">The unique ID of the Ezmaxinvoicingsummaryinternal.</param>
        /// <param name="fkiEzmaxproductID">The unique ID of the Ezmaxproduct (required).</param>
        /// <param name="sEzmaxproductDescriptionX">The description of the Ezmaxproduct in the language of the requester (required).</param>
        /// <param name="fkiBillingentityexternalID">The unique ID of the Billingentityexternal (required).</param>
        /// <param name="sBillingentityexternalDescription">The description of the Billingentityexternal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryinternaldetailCountreal">The count item invoiced for the product (required).</param>
        /// <param name="dEzmaxinvoicingsummaryinternaldetailSubtotal">The subtotal invoiced for the product (required).</param>
        /// <param name="dEzmaxinvoicingsummaryinternaldetailRebate">The rebate for the product (required).</param>
        /// <param name="dEzmaxinvoicingsummaryinternaldetailTotal">The total invoiced for the product (required).</param>
        /// <param name="bEzmaxinvoicingsummaryinternaldetailAdjustment">Whether if it&#39;s an adjustment (required).</param>
        public EzmaxinvoicingsummaryinternaldetailResponseCompound(int pkiEzmaxinvoicingsummaryinternaldetailID = default(int), int fkiEzmaxinvoicingsummaryinternalID = default(int), int fkiEzmaxproductID = default(int), string sEzmaxproductDescriptionX = default(string), int fkiBillingentityexternalID = default(int), string sBillingentityexternalDescription = default(string), string dEzmaxinvoicingsummaryinternaldetailCountreal = default(string), string dEzmaxinvoicingsummaryinternaldetailSubtotal = default(string), string dEzmaxinvoicingsummaryinternaldetailRebate = default(string), string dEzmaxinvoicingsummaryinternaldetailTotal = default(string), bool bEzmaxinvoicingsummaryinternaldetailAdjustment = default(bool))
        {
            // to ensure "fkiEzmaxproductID" is required (not null)
            if (fkiEzmaxproductID == null)
            {
                throw new InvalidDataException("fkiEzmaxproductID is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.FkiEzmaxproductID = fkiEzmaxproductID;
            }

            // to ensure "sEzmaxproductDescriptionX" is required (not null)
            if (sEzmaxproductDescriptionX == null)
            {
                throw new InvalidDataException("sEzmaxproductDescriptionX is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.SEzmaxproductDescriptionX = sEzmaxproductDescriptionX;
            }

            // to ensure "fkiBillingentityexternalID" is required (not null)
            if (fkiBillingentityexternalID == null)
            {
                throw new InvalidDataException("fkiBillingentityexternalID is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.FkiBillingentityexternalID = fkiBillingentityexternalID;
            }

            // to ensure "sBillingentityexternalDescription" is required (not null)
            if (sBillingentityexternalDescription == null)
            {
                throw new InvalidDataException("sBillingentityexternalDescription is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.SBillingentityexternalDescription = sBillingentityexternalDescription;
            }

            // to ensure "dEzmaxinvoicingsummaryinternaldetailCountreal" is required (not null)
            if (dEzmaxinvoicingsummaryinternaldetailCountreal == null)
            {
                throw new InvalidDataException("dEzmaxinvoicingsummaryinternaldetailCountreal is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.DEzmaxinvoicingsummaryinternaldetailCountreal = dEzmaxinvoicingsummaryinternaldetailCountreal;
            }

            // to ensure "dEzmaxinvoicingsummaryinternaldetailSubtotal" is required (not null)
            if (dEzmaxinvoicingsummaryinternaldetailSubtotal == null)
            {
                throw new InvalidDataException("dEzmaxinvoicingsummaryinternaldetailSubtotal is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.DEzmaxinvoicingsummaryinternaldetailSubtotal = dEzmaxinvoicingsummaryinternaldetailSubtotal;
            }

            // to ensure "dEzmaxinvoicingsummaryinternaldetailRebate" is required (not null)
            if (dEzmaxinvoicingsummaryinternaldetailRebate == null)
            {
                throw new InvalidDataException("dEzmaxinvoicingsummaryinternaldetailRebate is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.DEzmaxinvoicingsummaryinternaldetailRebate = dEzmaxinvoicingsummaryinternaldetailRebate;
            }

            // to ensure "dEzmaxinvoicingsummaryinternaldetailTotal" is required (not null)
            if (dEzmaxinvoicingsummaryinternaldetailTotal == null)
            {
                throw new InvalidDataException("dEzmaxinvoicingsummaryinternaldetailTotal is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.DEzmaxinvoicingsummaryinternaldetailTotal = dEzmaxinvoicingsummaryinternaldetailTotal;
            }

            // to ensure "bEzmaxinvoicingsummaryinternaldetailAdjustment" is required (not null)
            if (bEzmaxinvoicingsummaryinternaldetailAdjustment == null)
            {
                throw new InvalidDataException("bEzmaxinvoicingsummaryinternaldetailAdjustment is a required property for EzmaxinvoicingsummaryinternaldetailResponseCompound and cannot be null");
            }
            else
            {
                this.BEzmaxinvoicingsummaryinternaldetailAdjustment = bEzmaxinvoicingsummaryinternaldetailAdjustment;
            }

            this.PkiEzmaxinvoicingsummaryinternaldetailID = pkiEzmaxinvoicingsummaryinternaldetailID;
            this.FkiEzmaxinvoicingsummaryinternalID = fkiEzmaxinvoicingsummaryinternalID;
        }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicingsummaryinternaldetail
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicingsummaryinternaldetail</value>
        [DataMember(Name="pkiEzmaxinvoicingsummaryinternaldetailID", EmitDefaultValue=false)]
        public int PkiEzmaxinvoicingsummaryinternaldetailID { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicingsummaryinternal
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicingsummaryinternal</value>
        [DataMember(Name="fkiEzmaxinvoicingsummaryinternalID", EmitDefaultValue=false)]
        public int FkiEzmaxinvoicingsummaryinternalID { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxproduct
        /// </summary>
        /// <value>The unique ID of the Ezmaxproduct</value>
        [DataMember(Name="fkiEzmaxproductID", EmitDefaultValue=true)]
        public int FkiEzmaxproductID { get; set; }

        /// <summary>
        /// The description of the Ezmaxproduct in the language of the requester
        /// </summary>
        /// <value>The description of the Ezmaxproduct in the language of the requester</value>
        [DataMember(Name="sEzmaxproductDescriptionX", EmitDefaultValue=true)]
        public string SEzmaxproductDescriptionX { get; set; }

        /// <summary>
        /// The unique ID of the Billingentityexternal
        /// </summary>
        /// <value>The unique ID of the Billingentityexternal</value>
        [DataMember(Name="fkiBillingentityexternalID", EmitDefaultValue=true)]
        public int FkiBillingentityexternalID { get; set; }

        /// <summary>
        /// The description of the Billingentityexternal
        /// </summary>
        /// <value>The description of the Billingentityexternal</value>
        [DataMember(Name="sBillingentityexternalDescription", EmitDefaultValue=true)]
        public string SBillingentityexternalDescription { get; set; }

        /// <summary>
        /// The count item invoiced for the product
        /// </summary>
        /// <value>The count item invoiced for the product</value>
        [DataMember(Name="dEzmaxinvoicingsummaryinternaldetailCountreal", EmitDefaultValue=true)]
        public string DEzmaxinvoicingsummaryinternaldetailCountreal { get; set; }

        /// <summary>
        /// The subtotal invoiced for the product
        /// </summary>
        /// <value>The subtotal invoiced for the product</value>
        [DataMember(Name="dEzmaxinvoicingsummaryinternaldetailSubtotal", EmitDefaultValue=true)]
        public string DEzmaxinvoicingsummaryinternaldetailSubtotal { get; set; }

        /// <summary>
        /// The rebate for the product
        /// </summary>
        /// <value>The rebate for the product</value>
        [DataMember(Name="dEzmaxinvoicingsummaryinternaldetailRebate", EmitDefaultValue=true)]
        public string DEzmaxinvoicingsummaryinternaldetailRebate { get; set; }

        /// <summary>
        /// The total invoiced for the product
        /// </summary>
        /// <value>The total invoiced for the product</value>
        [DataMember(Name="dEzmaxinvoicingsummaryinternaldetailTotal", EmitDefaultValue=true)]
        public string DEzmaxinvoicingsummaryinternaldetailTotal { get; set; }

        /// <summary>
        /// Whether if it&#39;s an adjustment
        /// </summary>
        /// <value>Whether if it&#39;s an adjustment</value>
        [DataMember(Name="bEzmaxinvoicingsummaryinternaldetailAdjustment", EmitDefaultValue=true)]
        public bool BEzmaxinvoicingsummaryinternaldetailAdjustment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingsummaryinternaldetailResponseCompound {\n");
            sb.Append("  PkiEzmaxinvoicingsummaryinternaldetailID: ").Append(PkiEzmaxinvoicingsummaryinternaldetailID).Append("\n");
            sb.Append("  FkiEzmaxinvoicingsummaryinternalID: ").Append(FkiEzmaxinvoicingsummaryinternalID).Append("\n");
            sb.Append("  FkiEzmaxproductID: ").Append(FkiEzmaxproductID).Append("\n");
            sb.Append("  SEzmaxproductDescriptionX: ").Append(SEzmaxproductDescriptionX).Append("\n");
            sb.Append("  FkiBillingentityexternalID: ").Append(FkiBillingentityexternalID).Append("\n");
            sb.Append("  SBillingentityexternalDescription: ").Append(SBillingentityexternalDescription).Append("\n");
            sb.Append("  DEzmaxinvoicingsummaryinternaldetailCountreal: ").Append(DEzmaxinvoicingsummaryinternaldetailCountreal).Append("\n");
            sb.Append("  DEzmaxinvoicingsummaryinternaldetailSubtotal: ").Append(DEzmaxinvoicingsummaryinternaldetailSubtotal).Append("\n");
            sb.Append("  DEzmaxinvoicingsummaryinternaldetailRebate: ").Append(DEzmaxinvoicingsummaryinternaldetailRebate).Append("\n");
            sb.Append("  DEzmaxinvoicingsummaryinternaldetailTotal: ").Append(DEzmaxinvoicingsummaryinternaldetailTotal).Append("\n");
            sb.Append("  BEzmaxinvoicingsummaryinternaldetailAdjustment: ").Append(BEzmaxinvoicingsummaryinternaldetailAdjustment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzmaxinvoicingsummaryinternaldetailResponseCompound);
        }

        /// <summary>
        /// Returns true if EzmaxinvoicingsummaryinternaldetailResponseCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of EzmaxinvoicingsummaryinternaldetailResponseCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzmaxinvoicingsummaryinternaldetailResponseCompound input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiEzmaxinvoicingsummaryinternaldetailID == input.PkiEzmaxinvoicingsummaryinternaldetailID ||
                    (this.PkiEzmaxinvoicingsummaryinternaldetailID != null &&
                    this.PkiEzmaxinvoicingsummaryinternaldetailID.Equals(input.PkiEzmaxinvoicingsummaryinternaldetailID))
                ) && 
                (
                    this.FkiEzmaxinvoicingsummaryinternalID == input.FkiEzmaxinvoicingsummaryinternalID ||
                    (this.FkiEzmaxinvoicingsummaryinternalID != null &&
                    this.FkiEzmaxinvoicingsummaryinternalID.Equals(input.FkiEzmaxinvoicingsummaryinternalID))
                ) && 
                (
                    this.FkiEzmaxproductID == input.FkiEzmaxproductID ||
                    (this.FkiEzmaxproductID != null &&
                    this.FkiEzmaxproductID.Equals(input.FkiEzmaxproductID))
                ) && 
                (
                    this.SEzmaxproductDescriptionX == input.SEzmaxproductDescriptionX ||
                    (this.SEzmaxproductDescriptionX != null &&
                    this.SEzmaxproductDescriptionX.Equals(input.SEzmaxproductDescriptionX))
                ) && 
                (
                    this.FkiBillingentityexternalID == input.FkiBillingentityexternalID ||
                    (this.FkiBillingentityexternalID != null &&
                    this.FkiBillingentityexternalID.Equals(input.FkiBillingentityexternalID))
                ) && 
                (
                    this.SBillingentityexternalDescription == input.SBillingentityexternalDescription ||
                    (this.SBillingentityexternalDescription != null &&
                    this.SBillingentityexternalDescription.Equals(input.SBillingentityexternalDescription))
                ) && 
                (
                    this.DEzmaxinvoicingsummaryinternaldetailCountreal == input.DEzmaxinvoicingsummaryinternaldetailCountreal ||
                    (this.DEzmaxinvoicingsummaryinternaldetailCountreal != null &&
                    this.DEzmaxinvoicingsummaryinternaldetailCountreal.Equals(input.DEzmaxinvoicingsummaryinternaldetailCountreal))
                ) && 
                (
                    this.DEzmaxinvoicingsummaryinternaldetailSubtotal == input.DEzmaxinvoicingsummaryinternaldetailSubtotal ||
                    (this.DEzmaxinvoicingsummaryinternaldetailSubtotal != null &&
                    this.DEzmaxinvoicingsummaryinternaldetailSubtotal.Equals(input.DEzmaxinvoicingsummaryinternaldetailSubtotal))
                ) && 
                (
                    this.DEzmaxinvoicingsummaryinternaldetailRebate == input.DEzmaxinvoicingsummaryinternaldetailRebate ||
                    (this.DEzmaxinvoicingsummaryinternaldetailRebate != null &&
                    this.DEzmaxinvoicingsummaryinternaldetailRebate.Equals(input.DEzmaxinvoicingsummaryinternaldetailRebate))
                ) && 
                (
                    this.DEzmaxinvoicingsummaryinternaldetailTotal == input.DEzmaxinvoicingsummaryinternaldetailTotal ||
                    (this.DEzmaxinvoicingsummaryinternaldetailTotal != null &&
                    this.DEzmaxinvoicingsummaryinternaldetailTotal.Equals(input.DEzmaxinvoicingsummaryinternaldetailTotal))
                ) && 
                (
                    this.BEzmaxinvoicingsummaryinternaldetailAdjustment == input.BEzmaxinvoicingsummaryinternaldetailAdjustment ||
                    (this.BEzmaxinvoicingsummaryinternaldetailAdjustment != null &&
                    this.BEzmaxinvoicingsummaryinternaldetailAdjustment.Equals(input.BEzmaxinvoicingsummaryinternaldetailAdjustment))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiEzmaxinvoicingsummaryinternaldetailID != null)
                    hashCode = hashCode * 59 + this.PkiEzmaxinvoicingsummaryinternaldetailID.GetHashCode();
                if (this.FkiEzmaxinvoicingsummaryinternalID != null)
                    hashCode = hashCode * 59 + this.FkiEzmaxinvoicingsummaryinternalID.GetHashCode();
                if (this.FkiEzmaxproductID != null)
                    hashCode = hashCode * 59 + this.FkiEzmaxproductID.GetHashCode();
                if (this.SEzmaxproductDescriptionX != null)
                    hashCode = hashCode * 59 + this.SEzmaxproductDescriptionX.GetHashCode();
                if (this.FkiBillingentityexternalID != null)
                    hashCode = hashCode * 59 + this.FkiBillingentityexternalID.GetHashCode();
                if (this.SBillingentityexternalDescription != null)
                    hashCode = hashCode * 59 + this.SBillingentityexternalDescription.GetHashCode();
                if (this.DEzmaxinvoicingsummaryinternaldetailCountreal != null)
                    hashCode = hashCode * 59 + this.DEzmaxinvoicingsummaryinternaldetailCountreal.GetHashCode();
                if (this.DEzmaxinvoicingsummaryinternaldetailSubtotal != null)
                    hashCode = hashCode * 59 + this.DEzmaxinvoicingsummaryinternaldetailSubtotal.GetHashCode();
                if (this.DEzmaxinvoicingsummaryinternaldetailRebate != null)
                    hashCode = hashCode * 59 + this.DEzmaxinvoicingsummaryinternaldetailRebate.GetHashCode();
                if (this.DEzmaxinvoicingsummaryinternaldetailTotal != null)
                    hashCode = hashCode * 59 + this.DEzmaxinvoicingsummaryinternaldetailTotal.GetHashCode();
                if (this.BEzmaxinvoicingsummaryinternaldetailAdjustment != null)
                    hashCode = hashCode * 59 + this.BEzmaxinvoicingsummaryinternaldetailAdjustment.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // PkiEzmaxinvoicingsummaryinternaldetailID (int) minimum
            if(this.PkiEzmaxinvoicingsummaryinternaldetailID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzmaxinvoicingsummaryinternaldetailID, must be a value greater than or equal to 0.", new [] { "PkiEzmaxinvoicingsummaryinternaldetailID" });
            }



            // FkiEzmaxinvoicingsummaryinternalID (int) minimum
            if(this.FkiEzmaxinvoicingsummaryinternalID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxinvoicingsummaryinternalID, must be a value greater than or equal to 0.", new [] { "FkiEzmaxinvoicingsummaryinternalID" });
            }



            // FkiEzmaxproductID (int) minimum
            if(this.FkiEzmaxproductID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxproductID, must be a value greater than or equal to 1.", new [] { "FkiEzmaxproductID" });
            }



            // FkiBillingentityexternalID (int) minimum
            if(this.FkiBillingentityexternalID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBillingentityexternalID, must be a value greater than or equal to 1.", new [] { "FkiBillingentityexternalID" });
            }



            // DEzmaxinvoicingsummaryinternaldetailCountreal (string) pattern
            Regex regexDEzmaxinvoicingsummaryinternaldetailCountreal = new Regex(@"^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$", RegexOptions.CultureInvariant);
            if (false == regexDEzmaxinvoicingsummaryinternaldetailCountreal.Match(this.DEzmaxinvoicingsummaryinternaldetailCountreal).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingsummaryinternaldetailCountreal, must match a pattern of " + regexDEzmaxinvoicingsummaryinternaldetailCountreal, new [] { "DEzmaxinvoicingsummaryinternaldetailCountreal" });
            }



            // DEzmaxinvoicingsummaryinternaldetailSubtotal (string) pattern
            Regex regexDEzmaxinvoicingsummaryinternaldetailSubtotal = new Regex(@"^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$", RegexOptions.CultureInvariant);
            if (false == regexDEzmaxinvoicingsummaryinternaldetailSubtotal.Match(this.DEzmaxinvoicingsummaryinternaldetailSubtotal).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingsummaryinternaldetailSubtotal, must match a pattern of " + regexDEzmaxinvoicingsummaryinternaldetailSubtotal, new [] { "DEzmaxinvoicingsummaryinternaldetailSubtotal" });
            }



            // DEzmaxinvoicingsummaryinternaldetailRebate (string) pattern
            Regex regexDEzmaxinvoicingsummaryinternaldetailRebate = new Regex(@"^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$", RegexOptions.CultureInvariant);
            if (false == regexDEzmaxinvoicingsummaryinternaldetailRebate.Match(this.DEzmaxinvoicingsummaryinternaldetailRebate).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingsummaryinternaldetailRebate, must match a pattern of " + regexDEzmaxinvoicingsummaryinternaldetailRebate, new [] { "DEzmaxinvoicingsummaryinternaldetailRebate" });
            }



            // DEzmaxinvoicingsummaryinternaldetailTotal (string) pattern
            Regex regexDEzmaxinvoicingsummaryinternaldetailTotal = new Regex(@"^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$", RegexOptions.CultureInvariant);
            if (false == regexDEzmaxinvoicingsummaryinternaldetailTotal.Match(this.DEzmaxinvoicingsummaryinternaldetailTotal).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingsummaryinternaldetailTotal, must match a pattern of " + regexDEzmaxinvoicingsummaryinternaldetailTotal, new [] { "DEzmaxinvoicingsummaryinternaldetailTotal" });
            }

            yield break;
        }
    }

}
