/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Communicationexternalrecipient Object
    /// </summary>
    [DataContract(Name = "communicationexternalrecipient-ResponseCompound")]
    public partial class CommunicationexternalrecipientResponseCompound : IEquatable<CommunicationexternalrecipientResponseCompound>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ECommunicationexternalrecipientType
        /// </summary>
        [DataMember(Name = "eCommunicationexternalrecipientType", IsRequired = true, EmitDefaultValue = true)]
        public FieldECommunicationexternalrecipientType ECommunicationexternalrecipientType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationexternalrecipientResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommunicationexternalrecipientResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationexternalrecipientResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiCommunicationexternalrecipientID">The unique ID of the Communicationexternalrecipient (required).</param>
        /// <param name="eCommunicationexternalrecipientType">eCommunicationexternalrecipientType (required).</param>
        /// <param name="objDescriptionstatic">objDescriptionstatic (required).</param>
        /// <param name="objEmailstatic">objEmailstatic.</param>
        /// <param name="objPhonestatic">objPhonestatic.</param>
        public CommunicationexternalrecipientResponseCompound(int pkiCommunicationexternalrecipientID = default(int), FieldECommunicationexternalrecipientType eCommunicationexternalrecipientType = default(FieldECommunicationexternalrecipientType), DescriptionstaticResponseCompound objDescriptionstatic = default(DescriptionstaticResponseCompound), EmailstaticResponseCompound objEmailstatic = default(EmailstaticResponseCompound), PhonestaticResponseCompound objPhonestatic = default(PhonestaticResponseCompound))
        {
            this.PkiCommunicationexternalrecipientID = pkiCommunicationexternalrecipientID;
            this.ECommunicationexternalrecipientType = eCommunicationexternalrecipientType;
            // to ensure "objDescriptionstatic" is required (not null)
            if (objDescriptionstatic == null)
            {
                throw new ArgumentNullException("objDescriptionstatic is a required property for CommunicationexternalrecipientResponseCompound and cannot be null");
            }
            this.ObjDescriptionstatic = objDescriptionstatic;
            this.ObjEmailstatic = objEmailstatic;
            this.ObjPhonestatic = objPhonestatic;
        }

        /// <summary>
        /// The unique ID of the Communicationexternalrecipient
        /// </summary>
        /// <value>The unique ID of the Communicationexternalrecipient</value>
		/* <example>9</example>*/
        [DataMember(Name = "pkiCommunicationexternalrecipientID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiCommunicationexternalrecipientID { get; set; }

        /// <summary>
        /// Gets or Sets ObjDescriptionstatic
        /// </summary>
        [DataMember(Name = "objDescriptionstatic", IsRequired = true, EmitDefaultValue = true)]
        public DescriptionstaticResponseCompound ObjDescriptionstatic { get; set; }

        /// <summary>
        /// Gets or Sets ObjEmailstatic
        /// </summary>
        [DataMember(Name = "objEmailstatic", EmitDefaultValue = false)]
        public EmailstaticResponseCompound ObjEmailstatic { get; set; }

        /// <summary>
        /// Gets or Sets ObjPhonestatic
        /// </summary>
        [DataMember(Name = "objPhonestatic", EmitDefaultValue = false)]
        public PhonestaticResponseCompound ObjPhonestatic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommunicationexternalrecipientResponseCompound {\n");
            sb.Append("  PkiCommunicationexternalrecipientID: ").Append(PkiCommunicationexternalrecipientID).Append("\n");
            sb.Append("  ECommunicationexternalrecipientType: ").Append(ECommunicationexternalrecipientType).Append("\n");
            sb.Append("  ObjDescriptionstatic: ").Append(ObjDescriptionstatic).Append("\n");
            sb.Append("  ObjEmailstatic: ").Append(ObjEmailstatic).Append("\n");
            sb.Append("  ObjPhonestatic: ").Append(ObjPhonestatic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CommunicationexternalrecipientResponseCompound);
        }

        /// <summary>
        /// Returns true if CommunicationexternalrecipientResponseCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of CommunicationexternalrecipientResponseCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CommunicationexternalrecipientResponseCompound input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PkiCommunicationexternalrecipientID == input.PkiCommunicationexternalrecipientID ||
                    this.PkiCommunicationexternalrecipientID.Equals(input.PkiCommunicationexternalrecipientID)
                ) && 
                (
                    this.ECommunicationexternalrecipientType == input.ECommunicationexternalrecipientType ||
                    this.ECommunicationexternalrecipientType.Equals(input.ECommunicationexternalrecipientType)
                ) && 
                (
                    this.ObjDescriptionstatic == input.ObjDescriptionstatic ||
                    (this.ObjDescriptionstatic != null &&
                    this.ObjDescriptionstatic.Equals(input.ObjDescriptionstatic))
                ) && 
                (
                    this.ObjEmailstatic == input.ObjEmailstatic ||
                    (this.ObjEmailstatic != null &&
                    this.ObjEmailstatic.Equals(input.ObjEmailstatic))
                ) && 
                (
                    this.ObjPhonestatic == input.ObjPhonestatic ||
                    (this.ObjPhonestatic != null &&
                    this.ObjPhonestatic.Equals(input.ObjPhonestatic))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PkiCommunicationexternalrecipientID.GetHashCode();
                hashCode = (hashCode * 59) + this.ECommunicationexternalrecipientType.GetHashCode();
                if (this.ObjDescriptionstatic != null)
                {
                    hashCode = (hashCode * 59) + this.ObjDescriptionstatic.GetHashCode();
                }
                if (this.ObjEmailstatic != null)
                {
                    hashCode = (hashCode * 59) + this.ObjEmailstatic.GetHashCode();
                }
                if (this.ObjPhonestatic != null)
                {
                    hashCode = (hashCode * 59) + this.ObjPhonestatic.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
