/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.16
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for POST /2/object/ezmaxinvoicing/getAutocomplete
    /// </summary>
    [DataContract]
    public partial class EzmaxinvoicingGetAutocompleteV2ResponseMPayload :  IEquatable<EzmaxinvoicingGetAutocompleteV2ResponseMPayload>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingGetAutocompleteV2ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingGetAutocompleteV2ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingGetAutocompleteV2ResponseMPayload" /> class.
        /// </summary>
        /// <param name="aObjEzmaxinvoicing">An array of Ezmaxinvoicing autocomplete element response. (required).</param>
        public EzmaxinvoicingGetAutocompleteV2ResponseMPayload(List<EzmaxinvoicingAutocompleteElementResponse> aObjEzmaxinvoicing = default(List<EzmaxinvoicingAutocompleteElementResponse>))
        {
            // to ensure "aObjEzmaxinvoicing" is required (not null)
            if (aObjEzmaxinvoicing == null)
            {
                throw new InvalidDataException("aObjEzmaxinvoicing is a required property for EzmaxinvoicingGetAutocompleteV2ResponseMPayload and cannot be null");
            }
            else
            {
                this.AObjEzmaxinvoicing = aObjEzmaxinvoicing;
            }

        }

        /// <summary>
        /// An array of Ezmaxinvoicing autocomplete element response.
        /// </summary>
        /// <value>An array of Ezmaxinvoicing autocomplete element response.</value>
        [DataMember(Name="a_objEzmaxinvoicing", EmitDefaultValue=true)]
        public List<EzmaxinvoicingAutocompleteElementResponse> AObjEzmaxinvoicing { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingGetAutocompleteV2ResponseMPayload {\n");
            sb.Append("  AObjEzmaxinvoicing: ").Append(AObjEzmaxinvoicing).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzmaxinvoicingGetAutocompleteV2ResponseMPayload);
        }

        /// <summary>
        /// Returns true if EzmaxinvoicingGetAutocompleteV2ResponseMPayload instances are equal
        /// </summary>
        /// <param name="input">Instance of EzmaxinvoicingGetAutocompleteV2ResponseMPayload to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzmaxinvoicingGetAutocompleteV2ResponseMPayload input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AObjEzmaxinvoicing == input.AObjEzmaxinvoicing ||
                    this.AObjEzmaxinvoicing != null &&
                    input.AObjEzmaxinvoicing != null &&
                    this.AObjEzmaxinvoicing.SequenceEqual(input.AObjEzmaxinvoicing)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AObjEzmaxinvoicing != null)
                    hashCode = hashCode * 59 + this.AObjEzmaxinvoicing.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
