/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for GET /1/object/ezmaxinvoicing/getProvisional
    /// </summary>
    [DataContract(Name = "ezmaxinvoicing-getProvisional-v1-Response-mPayload")]
    public partial class EzmaxinvoicingGetProvisionalV1ResponseMPayload : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets EEzmaxinvoicingPaymenttype
        /// </summary>
        [DataMember(Name = "eEzmaxinvoicingPaymenttype", IsRequired = true, EmitDefaultValue = true)]
        public FieldEEzmaxinvoicingPaymenttype EEzmaxinvoicingPaymenttype { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingGetProvisionalV1ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingGetProvisionalV1ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingGetProvisionalV1ResponseMPayload" /> class.
        /// </summary>
        /// <param name="">The unique ID of the Ezmaxinvoicing.</param>
        /// <param name="">The unique ID of the Ezmaxinvoicingcontract (required).</param>
        /// <param name="">The unique ID of the Ezmaxpricing (required).</param>
        /// <param name="">The unique ID of the Systemconfigurationtype (required).</param>
        /// <param name="">The description of the Systemconfigurationtype in the language of the requester (required).</param>
        /// <param name="">The YYYYMM period of the Ezmaxinvoicing (required).</param>
        /// <param name="">The number of days invoiced (required).</param>
        /// <param name=""> (required).</param>
        /// <param name="">The percentage of rebate depending of the payment type (required).</param>
        /// <param name="">The length of the contract in years (required).</param>
        /// <param name="">The percentage of rebate depending of the contract length (required).</param>
        /// <param name="">Whether the rebate for eZsign is for all agents (required).</param>
        /// <param name="">.</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        /// <param name=""> (required).</param>
        public EzmaxinvoicingGetProvisionalV1ResponseMPayload(int  = default(int), int  = default(int), int  = default(int), int  = default(int), string  = default(string), string  = default(string), int  = default(int), FieldEEzmaxinvoicingPaymenttype  = default(FieldEEzmaxinvoicingPaymenttype), string  = default(string), int  = default(int), string  = default(string), bool  = default(bool), CommonAudit  = default(CommonAudit), EzmaxinvoicingcontractResponseCompound  = default(EzmaxinvoicingcontractResponseCompound), CustomEzmaxpricingResponse  = default(CustomEzmaxpricingResponse), List<EzmaxinvoicingsummaryglobalResponseCompound>  = default(List<EzmaxinvoicingsummaryglobalResponseCompound>), List<EzmaxinvoicingsummaryexternalResponseCompound>  = default(List<EzmaxinvoicingsummaryexternalResponseCompound>), List<EzmaxinvoicingsummaryinternalResponseCompound>  = default(List<EzmaxinvoicingsummaryinternalResponseCompound>), List<EzmaxinvoicingagentResponseCompound>  = default(List<EzmaxinvoicingagentResponseCompound>), List<EzmaxinvoicinguserResponseCompound>  = default(List<EzmaxinvoicinguserResponseCompound>), List<CustomEzmaxinvoicingEzsignfolderResponse>  = default(List<CustomEzmaxinvoicingEzsignfolderResponse>), List<CustomEzmaxinvoicingEzsigndocumentResponse>  = default(List<CustomEzmaxinvoicingEzsigndocumentResponse>))
        {
            this.FkiEzmaxinvoicingcontractID = ;
            this.FkiEzmaxpricingID = ;
            this.FkiSystemconfigurationtypeID = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.SSystemconfigurationtypeDescriptionX = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.YyyymmEzmaxinvoicing = ;
            this.IEzmaxinvoicingDays = ;
            this.EEzmaxinvoicingPaymenttype = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.DEzmaxinvoicingRebatepaymenttype = ;
            this.IEzmaxinvoicingContractlength = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.DEzmaxinvoicingRebatecontractlength = ;
            this.BEzmaxinvoicingRebateEzsignallagents = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.ObjEzmaxinvoicingcontract = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.ObjEzmaxpricing = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryglobal = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryexternal = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryinternal = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingagent = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicinguser = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingezsignfolder = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzmaxinvoicingGetProvisionalV1ResponseMPayload and cannot be null");
            }
            this.AObjEzmaxinvoicingezsigndocument = ;
            this.PkiEzmaxinvoicingID = ;
            this.ObjAudit = ;
        }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicing
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicing</value>
        /* <example>28</example>*/
        [DataMember(Name = "pkiEzmaxinvoicingID", EmitDefaultValue = false)]
        public int PkiEzmaxinvoicingID { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxinvoicingcontract
        /// </summary>
        /// <value>The unique ID of the Ezmaxinvoicingcontract</value>
        /* <example>28</example>*/
        [DataMember(Name = "fkiEzmaxinvoicingcontractID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzmaxinvoicingcontractID { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxpricing
        /// </summary>
        /// <value>The unique ID of the Ezmaxpricing</value>
        /* <example>28</example>*/
        [DataMember(Name = "fkiEzmaxpricingID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzmaxpricingID { get; set; }

        /// <summary>
        /// The unique ID of the Systemconfigurationtype
        /// </summary>
        /// <value>The unique ID of the Systemconfigurationtype</value>
        /* <example>28</example>*/
        [DataMember(Name = "fkiSystemconfigurationtypeID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiSystemconfigurationtypeID { get; set; }

        /// <summary>
        /// The description of the Systemconfigurationtype in the language of the requester
        /// </summary>
        /// <value>The description of the Systemconfigurationtype in the language of the requester</value>
        /* <example>eZsign (Pro)</example>*/
        [DataMember(Name = "sSystemconfigurationtypeDescriptionX", IsRequired = true, EmitDefaultValue = true)]
        public string SSystemconfigurationtypeDescriptionX { get; set; }

        /// <summary>
        /// The YYYYMM period of the Ezmaxinvoicing
        /// </summary>
        /// <value>The YYYYMM period of the Ezmaxinvoicing</value>
        /* <example>2022-01</example>*/
        [DataMember(Name = "yyyymmEzmaxinvoicing", IsRequired = true, EmitDefaultValue = true)]
        public string YyyymmEzmaxinvoicing { get; set; }

        /// <summary>
        /// The number of days invoiced
        /// </summary>
        /// <value>The number of days invoiced</value>
        /* <example>28</example>*/
        [DataMember(Name = "iEzmaxinvoicingDays", IsRequired = true, EmitDefaultValue = true)]
        public int IEzmaxinvoicingDays { get; set; }

        /// <summary>
        /// The percentage of rebate depending of the payment type
        /// </summary>
        /// <value>The percentage of rebate depending of the payment type</value>
        /* <example>1.00</example>*/
        [DataMember(Name = "dEzmaxinvoicingRebatepaymenttype", IsRequired = true, EmitDefaultValue = true)]
        public string DEzmaxinvoicingRebatepaymenttype { get; set; }

        /// <summary>
        /// The length of the contract in years
        /// </summary>
        /// <value>The length of the contract in years</value>
        /* <example>1</example>*/
        [DataMember(Name = "iEzmaxinvoicingContractlength", IsRequired = true, EmitDefaultValue = true)]
        public int IEzmaxinvoicingContractlength { get; set; }

        /// <summary>
        /// The percentage of rebate depending of the contract length
        /// </summary>
        /// <value>The percentage of rebate depending of the contract length</value>
        /* <example>1.00</example>*/
        [DataMember(Name = "dEzmaxinvoicingRebatecontractlength", IsRequired = true, EmitDefaultValue = true)]
        public string DEzmaxinvoicingRebatecontractlength { get; set; }

        /// <summary>
        /// Whether the rebate for eZsign is for all agents
        /// </summary>
        /// <value>Whether the rebate for eZsign is for all agents</value>
        /* <example>true</example>*/
        [DataMember(Name = "bEzmaxinvoicingRebateEzsignallagents", IsRequired = true, EmitDefaultValue = true)]
        public bool BEzmaxinvoicingRebateEzsignallagents { get; set; }

        /// <summary>
        /// Gets or Sets ObjAudit
        /// </summary>
        [DataMember(Name = "objAudit", EmitDefaultValue = false)]
        public CommonAudit ObjAudit { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzmaxinvoicingcontract
        /// </summary>
        [DataMember(Name = "objEzmaxinvoicingcontract", IsRequired = true, EmitDefaultValue = true)]
        public EzmaxinvoicingcontractResponseCompound ObjEzmaxinvoicingcontract { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzmaxpricing
        /// </summary>
        [DataMember(Name = "objEzmaxpricing", IsRequired = true, EmitDefaultValue = true)]
        public CustomEzmaxpricingResponse ObjEzmaxpricing { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryglobal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryglobal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryglobalResponseCompound> AObjEzmaxinvoicingsummaryglobal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryexternal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryexternal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryexternalResponseCompound> AObjEzmaxinvoicingsummaryexternal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryinternal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryinternal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryinternalResponseCompound> AObjEzmaxinvoicingsummaryinternal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingagent
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingagent", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingagentResponseCompound> AObjEzmaxinvoicingagent { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicinguser
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicinguser", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicinguserResponseCompound> AObjEzmaxinvoicinguser { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingezsignfolder
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingezsignfolder", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomEzmaxinvoicingEzsignfolderResponse> AObjEzmaxinvoicingezsignfolder { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingezsigndocument
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingezsigndocument", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomEzmaxinvoicingEzsigndocumentResponse> AObjEzmaxinvoicingezsigndocument { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingGetProvisionalV1ResponseMPayload {\n");
            sb.Append("  PkiEzmaxinvoicingID: ").Append(PkiEzmaxinvoicingID).Append("\n");
            sb.Append("  FkiEzmaxinvoicingcontractID: ").Append(FkiEzmaxinvoicingcontractID).Append("\n");
            sb.Append("  FkiEzmaxpricingID: ").Append(FkiEzmaxpricingID).Append("\n");
            sb.Append("  FkiSystemconfigurationtypeID: ").Append(FkiSystemconfigurationtypeID).Append("\n");
            sb.Append("  SSystemconfigurationtypeDescriptionX: ").Append(SSystemconfigurationtypeDescriptionX).Append("\n");
            sb.Append("  YyyymmEzmaxinvoicing: ").Append(YyyymmEzmaxinvoicing).Append("\n");
            sb.Append("  IEzmaxinvoicingDays: ").Append(IEzmaxinvoicingDays).Append("\n");
            sb.Append("  EEzmaxinvoicingPaymenttype: ").Append(EEzmaxinvoicingPaymenttype).Append("\n");
            sb.Append("  DEzmaxinvoicingRebatepaymenttype: ").Append(DEzmaxinvoicingRebatepaymenttype).Append("\n");
            sb.Append("  IEzmaxinvoicingContractlength: ").Append(IEzmaxinvoicingContractlength).Append("\n");
            sb.Append("  DEzmaxinvoicingRebatecontractlength: ").Append(DEzmaxinvoicingRebatecontractlength).Append("\n");
            sb.Append("  BEzmaxinvoicingRebateEzsignallagents: ").Append(BEzmaxinvoicingRebateEzsignallagents).Append("\n");
            sb.Append("  ObjAudit: ").Append(ObjAudit).Append("\n");
            sb.Append("  ObjEzmaxinvoicingcontract: ").Append(ObjEzmaxinvoicingcontract).Append("\n");
            sb.Append("  ObjEzmaxpricing: ").Append(ObjEzmaxpricing).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryglobal: ").Append(AObjEzmaxinvoicingsummaryglobal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryexternal: ").Append(AObjEzmaxinvoicingsummaryexternal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryinternal: ").Append(AObjEzmaxinvoicingsummaryinternal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingagent: ").Append(AObjEzmaxinvoicingagent).Append("\n");
            sb.Append("  AObjEzmaxinvoicinguser: ").Append(AObjEzmaxinvoicinguser).Append("\n");
            sb.Append("  AObjEzmaxinvoicingezsignfolder: ").Append(AObjEzmaxinvoicingezsignfolder).Append("\n");
            sb.Append("  AObjEzmaxinvoicingezsigndocument: ").Append(AObjEzmaxinvoicingezsigndocument).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzmaxinvoicingID (int) minimum
            if (this.PkiEzmaxinvoicingID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzmaxinvoicingID, must be a value greater than or equal to 0.", new [] { "PkiEzmaxinvoicingID" });
            }

            // FkiEzmaxinvoicingcontractID (int) minimum
            if (this.FkiEzmaxinvoicingcontractID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxinvoicingcontractID, must be a value greater than or equal to 1.", new [] { "FkiEzmaxinvoicingcontractID" });
            }

            // FkiEzmaxpricingID (int) minimum
            if (this.FkiEzmaxpricingID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxpricingID, must be a value greater than or equal to 1.", new [] { "FkiEzmaxpricingID" });
            }

            // FkiSystemconfigurationtypeID (int) minimum
            if (this.FkiSystemconfigurationtypeID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiSystemconfigurationtypeID, must be a value greater than or equal to 1.", new [] { "FkiSystemconfigurationtypeID" });
            }

            // YyyymmEzmaxinvoicing (string) maxLength
            if (this.YyyymmEzmaxinvoicing != null && this.YyyymmEzmaxinvoicing.Length > 7)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for YyyymmEzmaxinvoicing, length must be less than 7.", new [] { "YyyymmEzmaxinvoicing" });
            }

            // IEzmaxinvoicingDays (int) minimum
            if (this.IEzmaxinvoicingDays < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzmaxinvoicingDays, must be a value greater than or equal to 1.", new [] { "IEzmaxinvoicingDays" });
            }

            if (this.DEzmaxinvoicingRebatepaymenttype != null) {
                // DEzmaxinvoicingRebatepaymenttype (string) pattern
                Regex regexDEzmaxinvoicingRebatepaymenttype = new Regex(@"^-{0,1}[\d]{1,3}?\.[\d]{2}$", RegexOptions.CultureInvariant);
                if (!regexDEzmaxinvoicingRebatepaymenttype.Match(this.DEzmaxinvoicingRebatepaymenttype).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingRebatepaymenttype, must match a pattern of " + regexDEzmaxinvoicingRebatepaymenttype, new [] { "DEzmaxinvoicingRebatepaymenttype" });
                }
            }

            // IEzmaxinvoicingContractlength (int) minimum
            if (this.IEzmaxinvoicingContractlength < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzmaxinvoicingContractlength, must be a value greater than or equal to 1.", new [] { "IEzmaxinvoicingContractlength" });
            }

            if (this.DEzmaxinvoicingRebatecontractlength != null) {
                // DEzmaxinvoicingRebatecontractlength (string) pattern
                Regex regexDEzmaxinvoicingRebatecontractlength = new Regex(@"^-{0,1}[\d]{1,3}?\.[\d]{2}$", RegexOptions.CultureInvariant);
                if (!regexDEzmaxinvoicingRebatecontractlength.Match(this.DEzmaxinvoicingRebatecontractlength).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DEzmaxinvoicingRebatecontractlength, must match a pattern of " + regexDEzmaxinvoicingRebatecontractlength, new [] { "DEzmaxinvoicingRebatecontractlength" });
                }
            }

            yield break;
        }
    }

}
