/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Province AutocompleteElement Response
    /// </summary>
    [DataContract(Name = "province-AutocompleteElement-Response")]
    public partial class ProvinceAutocompleteElementResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProvinceAutocompleteElementResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProvinceAutocompleteElementResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProvinceAutocompleteElementResponse" /> class.
        /// </summary>
        /// <param name="pkiProvinceID">The unique ID of the Province.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|(Canada) Alberta |2|(Canada) British Columbia| |3|(Canada) Manitoba| |3|(Canada) Manitoba| |4|(Canada) New Brunswick| |5|(Canada) Newfoundland| |6|(Canada) Northwest Territories| |7|(Canada) Nova Scotia| |8|(Canada) Nunavut| |9|(Canada) Ontario| |10|(Canada) Prince Edward Island| |11|(Canada) Quebec| |12|(Canada) Saskatchewan| |13|(Canada) Yukon| |14|(United-States) Alabama| |15|(United-States) Alaska| |16|(United-States) Arizona| |17|(United-States) Arkansas| |18|(United-States) California| |19|(United-States) Colorado| |20|(United-States) Connecticut| |21|(United-States) Delaware| |22|(United-States) District of Columbia| |23|(United-States) Florida| |24|(United-States) Georgia| |25|(United-States) Hawaii| |26|(United-States) Idaho| |27|(United-States) Illinois| |28|(United-States) Indiana| |29|(United-States) Iowa| |30|(United-States) Kansas| |31|(United-States) Kentucky| |32|(United-States) Louisiane| |33|(United-States) Maine| |34|(United-States) Maryland| |35|(United-States) Massachusetts| |36|(United-States) Michigan| |37|(United-States) Minnesota| |38|(United-States) Mississippi| |39|(United-States) Missouri| |40|(United-States) Montana| |41|(United-States) Nebraska| |42|(United-States) Nevada| |43|(United-States) New Hampshire| |44|(United-States) New Jersey| |45|(United-States) New Mexico| |46|(United-States) New York| |47|(United-States) North Carolina| |48|(United-States) North Dakota| |49|(United-States) Ohio| |50|(United-States) Oklahoma| |51|(United-States) Oregon| |52|(United-States) Pennsylvania| |53|(United-States) Rhode Island| |54|(United-States) South Carolina| |55|(United-States) South Dakota| |56|(United-States) Tennessee| |57|(United-States) Texas| |58|(United-States) Utah| |60|(United-States) Vermont| |59|(United-States) Virginia| |61|(United-States) Washington| |62|(United-States) West Virginia| |63|(United-States) Wisconsin| |64|(United-States) Wyoming| (required).</param>
        /// <param name="fkiCountryID">The unique ID of the Country.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|Canada| |2|United-States| (required).</param>
        /// <param name="sProvinceNameX">The name of the Province in the language of the requester (required).</param>
        /// <param name="sProvinceShortname">The shortname of the Province (required).</param>
        /// <param name="bProvinceIsactive">Whether the Province is active or not (required).</param>
        public ProvinceAutocompleteElementResponse(int pkiProvinceID = default(int), int fkiCountryID = default(int), string sProvinceNameX = default(string), string sProvinceShortname = default(string), bool bProvinceIsactive = default(bool))
        {
            this.PkiProvinceID = pkiProvinceID;
            this.FkiCountryID = fkiCountryID;
            // to ensure "sProvinceNameX" is required (not null)
            if (sProvinceNameX == null)
            {
                throw new ArgumentNullException("sProvinceNameX is a required property for ProvinceAutocompleteElementResponse and cannot be null");
            }
            this.SProvinceNameX = sProvinceNameX;
            // to ensure "sProvinceShortname" is required (not null)
            if (sProvinceShortname == null)
            {
                throw new ArgumentNullException("sProvinceShortname is a required property for ProvinceAutocompleteElementResponse and cannot be null");
            }
            this.SProvinceShortname = sProvinceShortname;
            this.BProvinceIsactive = bProvinceIsactive;
        }

        /// <summary>
        /// The unique ID of the Province.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|(Canada) Alberta |2|(Canada) British Columbia| |3|(Canada) Manitoba| |3|(Canada) Manitoba| |4|(Canada) New Brunswick| |5|(Canada) Newfoundland| |6|(Canada) Northwest Territories| |7|(Canada) Nova Scotia| |8|(Canada) Nunavut| |9|(Canada) Ontario| |10|(Canada) Prince Edward Island| |11|(Canada) Quebec| |12|(Canada) Saskatchewan| |13|(Canada) Yukon| |14|(United-States) Alabama| |15|(United-States) Alaska| |16|(United-States) Arizona| |17|(United-States) Arkansas| |18|(United-States) California| |19|(United-States) Colorado| |20|(United-States) Connecticut| |21|(United-States) Delaware| |22|(United-States) District of Columbia| |23|(United-States) Florida| |24|(United-States) Georgia| |25|(United-States) Hawaii| |26|(United-States) Idaho| |27|(United-States) Illinois| |28|(United-States) Indiana| |29|(United-States) Iowa| |30|(United-States) Kansas| |31|(United-States) Kentucky| |32|(United-States) Louisiane| |33|(United-States) Maine| |34|(United-States) Maryland| |35|(United-States) Massachusetts| |36|(United-States) Michigan| |37|(United-States) Minnesota| |38|(United-States) Mississippi| |39|(United-States) Missouri| |40|(United-States) Montana| |41|(United-States) Nebraska| |42|(United-States) Nevada| |43|(United-States) New Hampshire| |44|(United-States) New Jersey| |45|(United-States) New Mexico| |46|(United-States) New York| |47|(United-States) North Carolina| |48|(United-States) North Dakota| |49|(United-States) Ohio| |50|(United-States) Oklahoma| |51|(United-States) Oregon| |52|(United-States) Pennsylvania| |53|(United-States) Rhode Island| |54|(United-States) South Carolina| |55|(United-States) South Dakota| |56|(United-States) Tennessee| |57|(United-States) Texas| |58|(United-States) Utah| |60|(United-States) Vermont| |59|(United-States) Virginia| |61|(United-States) Washington| |62|(United-States) West Virginia| |63|(United-States) Wisconsin| |64|(United-States) Wyoming|
        /// </summary>
        /// <value>The unique ID of the Province.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|(Canada) Alberta |2|(Canada) British Columbia| |3|(Canada) Manitoba| |3|(Canada) Manitoba| |4|(Canada) New Brunswick| |5|(Canada) Newfoundland| |6|(Canada) Northwest Territories| |7|(Canada) Nova Scotia| |8|(Canada) Nunavut| |9|(Canada) Ontario| |10|(Canada) Prince Edward Island| |11|(Canada) Quebec| |12|(Canada) Saskatchewan| |13|(Canada) Yukon| |14|(United-States) Alabama| |15|(United-States) Alaska| |16|(United-States) Arizona| |17|(United-States) Arkansas| |18|(United-States) California| |19|(United-States) Colorado| |20|(United-States) Connecticut| |21|(United-States) Delaware| |22|(United-States) District of Columbia| |23|(United-States) Florida| |24|(United-States) Georgia| |25|(United-States) Hawaii| |26|(United-States) Idaho| |27|(United-States) Illinois| |28|(United-States) Indiana| |29|(United-States) Iowa| |30|(United-States) Kansas| |31|(United-States) Kentucky| |32|(United-States) Louisiane| |33|(United-States) Maine| |34|(United-States) Maryland| |35|(United-States) Massachusetts| |36|(United-States) Michigan| |37|(United-States) Minnesota| |38|(United-States) Mississippi| |39|(United-States) Missouri| |40|(United-States) Montana| |41|(United-States) Nebraska| |42|(United-States) Nevada| |43|(United-States) New Hampshire| |44|(United-States) New Jersey| |45|(United-States) New Mexico| |46|(United-States) New York| |47|(United-States) North Carolina| |48|(United-States) North Dakota| |49|(United-States) Ohio| |50|(United-States) Oklahoma| |51|(United-States) Oregon| |52|(United-States) Pennsylvania| |53|(United-States) Rhode Island| |54|(United-States) South Carolina| |55|(United-States) South Dakota| |56|(United-States) Tennessee| |57|(United-States) Texas| |58|(United-States) Utah| |60|(United-States) Vermont| |59|(United-States) Virginia| |61|(United-States) Washington| |62|(United-States) West Virginia| |63|(United-States) Wisconsin| |64|(United-States) Wyoming|</value>
        /* <example>11</example>*/
        [DataMember(Name = "pkiProvinceID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiProvinceID { get; set; }

        /// <summary>
        /// The unique ID of the Country.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|Canada| |2|United-States|
        /// </summary>
        /// <value>The unique ID of the Country.  Here are some common values (Complete list must be retrieved from API):  |Value|Description| |-|-| |1|Canada| |2|United-States|</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiCountryID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiCountryID { get; set; }

        /// <summary>
        /// The name of the Province in the language of the requester
        /// </summary>
        /// <value>The name of the Province in the language of the requester</value>
        /* <example>Quebec</example>*/
        [DataMember(Name = "sProvinceNameX", IsRequired = true, EmitDefaultValue = true)]
        public string SProvinceNameX { get; set; }

        /// <summary>
        /// The shortname of the Province
        /// </summary>
        /// <value>The shortname of the Province</value>
        /* <example>QC</example>*/
        [DataMember(Name = "sProvinceShortname", IsRequired = true, EmitDefaultValue = true)]
        public string SProvinceShortname { get; set; }

        /// <summary>
        /// Whether the Province is active or not
        /// </summary>
        /// <value>Whether the Province is active or not</value>
        /* <example>true</example>*/
        [DataMember(Name = "bProvinceIsactive", IsRequired = true, EmitDefaultValue = true)]
        public bool BProvinceIsactive { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProvinceAutocompleteElementResponse {\n");
            sb.Append("  PkiProvinceID: ").Append(PkiProvinceID).Append("\n");
            sb.Append("  FkiCountryID: ").Append(FkiCountryID).Append("\n");
            sb.Append("  SProvinceNameX: ").Append(SProvinceNameX).Append("\n");
            sb.Append("  SProvinceShortname: ").Append(SProvinceShortname).Append("\n");
            sb.Append("  BProvinceIsactive: ").Append(BProvinceIsactive).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiProvinceID (int) minimum
            if (this.PkiProvinceID < (int)0)
            {
                yield return new ValidationResult("Invalid value for PkiProvinceID, must be a value greater than or equal to 0.", new [] { "PkiProvinceID" });
            }

            // FkiCountryID (int) minimum
            if (this.FkiCountryID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiCountryID, must be a value greater than or equal to 0.", new [] { "FkiCountryID" });
            }

            if (this.SProvinceNameX != null) {
                // SProvinceNameX (string) pattern
                Regex regexSProvinceNameX = new Regex(@"^.{0,50}$", RegexOptions.CultureInvariant);
                if (!regexSProvinceNameX.Match(this.SProvinceNameX).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SProvinceNameX, must match a pattern of " + regexSProvinceNameX, new [] { "SProvinceNameX" });
                }
            }

            if (this.SProvinceShortname != null) {
                // SProvinceShortname (string) pattern
                Regex regexSProvinceShortname = new Regex(@"^.{1,3}$", RegexOptions.CultureInvariant);
                if (!regexSProvinceShortname.Match(this.SProvinceShortname).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SProvinceShortname, must match a pattern of " + regexSProvinceShortname, new [] { "SProvinceShortname" });
                }
            }

            yield break;
        }
    }

}
