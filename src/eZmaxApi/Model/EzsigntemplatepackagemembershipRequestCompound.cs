/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezsigntemplatepackagemembership Object and children
    /// </summary>
    [DataContract]
    public partial class EzsigntemplatepackagemembershipRequestCompound :  IEquatable<EzsigntemplatepackagemembershipRequestCompound>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatepackagemembershipRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagemembershipRequestCompound" /> class.
        /// </summary>
        /// <param name="pkiEzsigntemplatepackagemembershipID">The unique ID of the Ezsigntemplatepackagemembership.</param>
        /// <param name="fkiEzsigntemplatepackageID">The unique ID of the Ezsigntemplatepackage (required).</param>
        /// <param name="fkiEzsigntemplateID">The unique ID of the Ezsigntemplate (required).</param>
        public EzsigntemplatepackagemembershipRequestCompound(int pkiEzsigntemplatepackagemembershipID = default(int), int fkiEzsigntemplatepackageID = default(int), int fkiEzsigntemplateID = default(int))
        {
            // to ensure "fkiEzsigntemplatepackageID" is required (not null)
            if (fkiEzsigntemplatepackageID == null)
            {
                throw new InvalidDataException("fkiEzsigntemplatepackageID is a required property for EzsigntemplatepackagemembershipRequestCompound and cannot be null");
            }
            else
            {
                this.FkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID;
            }

            // to ensure "fkiEzsigntemplateID" is required (not null)
            if (fkiEzsigntemplateID == null)
            {
                throw new InvalidDataException("fkiEzsigntemplateID is a required property for EzsigntemplatepackagemembershipRequestCompound and cannot be null");
            }
            else
            {
                this.FkiEzsigntemplateID = fkiEzsigntemplateID;
            }

            this.PkiEzsigntemplatepackagemembershipID = pkiEzsigntemplatepackagemembershipID;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagemembership
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagemembership</value>
        [DataMember(Name="pkiEzsigntemplatepackagemembershipID", EmitDefaultValue=false)]
        public int PkiEzsigntemplatepackagemembershipID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackage
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackage</value>
        [DataMember(Name="fkiEzsigntemplatepackageID", EmitDefaultValue=true)]
        public int FkiEzsigntemplatepackageID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplate
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplate</value>
        [DataMember(Name="fkiEzsigntemplateID", EmitDefaultValue=true)]
        public int FkiEzsigntemplateID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EzsigntemplatepackagemembershipRequestCompound {\n");
            sb.Append("  PkiEzsigntemplatepackagemembershipID: ").Append(PkiEzsigntemplatepackagemembershipID).Append("\n");
            sb.Append("  FkiEzsigntemplatepackageID: ").Append(FkiEzsigntemplatepackageID).Append("\n");
            sb.Append("  FkiEzsigntemplateID: ").Append(FkiEzsigntemplateID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsigntemplatepackagemembershipRequestCompound);
        }

        /// <summary>
        /// Returns true if EzsigntemplatepackagemembershipRequestCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsigntemplatepackagemembershipRequestCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsigntemplatepackagemembershipRequestCompound input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiEzsigntemplatepackagemembershipID == input.PkiEzsigntemplatepackagemembershipID ||
                    (this.PkiEzsigntemplatepackagemembershipID != null &&
                    this.PkiEzsigntemplatepackagemembershipID.Equals(input.PkiEzsigntemplatepackagemembershipID))
                ) && 
                (
                    this.FkiEzsigntemplatepackageID == input.FkiEzsigntemplatepackageID ||
                    (this.FkiEzsigntemplatepackageID != null &&
                    this.FkiEzsigntemplatepackageID.Equals(input.FkiEzsigntemplatepackageID))
                ) && 
                (
                    this.FkiEzsigntemplateID == input.FkiEzsigntemplateID ||
                    (this.FkiEzsigntemplateID != null &&
                    this.FkiEzsigntemplateID.Equals(input.FkiEzsigntemplateID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiEzsigntemplatepackagemembershipID != null)
                    hashCode = hashCode * 59 + this.PkiEzsigntemplatepackagemembershipID.GetHashCode();
                if (this.FkiEzsigntemplatepackageID != null)
                    hashCode = hashCode * 59 + this.FkiEzsigntemplatepackageID.GetHashCode();
                if (this.FkiEzsigntemplateID != null)
                    hashCode = hashCode * 59 + this.FkiEzsigntemplateID.GetHashCode();
                return hashCode;
            }
        }
    }

}
