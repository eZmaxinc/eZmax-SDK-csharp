/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezsigndocument createObject Response
    /// </summary>
    [DataContract(Name = "ezsigndocument-createElement-v3-Response")]
    public partial class EzsigndocumentCreateElementV3Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigndocumentCreateElementV3Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigndocumentCreateElementV3Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigndocumentCreateElementV3Response" /> class.
        /// </summary>
        /// <param name="pkiEzsigndocumentID">The unique ID of the Ezsigndocument (required).</param>
        /// <param name="aObjMatchingtemplate">An array of possibly matching template. (required).</param>
        public EzsigndocumentCreateElementV3Response(int pkiEzsigndocumentID = default(int), List<EzsigndocumentMatchingtemplateV3Response> aObjMatchingtemplate = default(List<EzsigndocumentMatchingtemplateV3Response>))
        {
            this.PkiEzsigndocumentID = pkiEzsigndocumentID;
            // to ensure "aObjMatchingtemplate" is required (not null)
            if (aObjMatchingtemplate == null)
            {
                throw new ArgumentNullException("aObjMatchingtemplate is a required property for EzsigndocumentCreateElementV3Response and cannot be null");
            }
            this.AObjMatchingtemplate = aObjMatchingtemplate;
        }

        /// <summary>
        /// The unique ID of the Ezsigndocument
        /// </summary>
        /// <value>The unique ID of the Ezsigndocument</value>
        /* <example>97</example>*/
        [DataMember(Name = "pkiEzsigndocumentID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiEzsigndocumentID { get; set; }

        /// <summary>
        /// An array of possibly matching template.
        /// </summary>
        /// <value>An array of possibly matching template.</value>
        [DataMember(Name = "a_objMatchingtemplate", IsRequired = true, EmitDefaultValue = true)]
        public List<EzsigndocumentMatchingtemplateV3Response> AObjMatchingtemplate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigndocumentCreateElementV3Response {\n");
            sb.Append("  PkiEzsigndocumentID: ").Append(PkiEzsigndocumentID).Append("\n");
            sb.Append("  AObjMatchingtemplate: ").Append(AObjMatchingtemplate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsigndocumentID (int) minimum
            if (this.PkiEzsigndocumentID < (int)0)
            {
                yield return new ValidationResult("Invalid value for PkiEzsigndocumentID, must be a value greater than or equal to 0.", new [] { "PkiEzsigndocumentID" });
            }

            yield break;
        }
    }

}
