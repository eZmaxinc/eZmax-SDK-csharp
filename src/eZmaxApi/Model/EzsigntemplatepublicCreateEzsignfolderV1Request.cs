/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Request for POST /1/object/ezsigntemplatepublic/createEzsignfolder
    /// </summary>
    [DataContract(Name = "ezsigntemplatepublic-createEzsignfolder-v1-Request")]
    public partial class EzsigntemplatepublicCreateEzsignfolderV1Request : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepublicCreateEzsignfolderV1Request" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatepublicCreateEzsignfolderV1Request() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepublicCreateEzsignfolderV1Request" /> class.
        /// </summary>
        /// <param name="pksEzmaxcustomerCode">The Ezmaxcustomer code (required).</param>
        /// <param name="sEzsigntemplatepublicReferenceid">The referenceid of the Ezsigntemplatepublic (required).</param>
        /// <param name="aSEzsigntemplatesignerDescription">aSEzsigntemplatesignerDescription (required).</param>
        /// <param name="aObjEzsignsigner">aObjEzsignsigner (required).</param>
        public EzsigntemplatepublicCreateEzsignfolderV1Request(string pksEzmaxcustomerCode = default(string), string sEzsigntemplatepublicReferenceid = default(string), List<string> aSEzsigntemplatesignerDescription = default(List<string>), List<EzsignsignerRequestCompound> aObjEzsignsigner = default(List<EzsignsignerRequestCompound>))
        {
            // to ensure "pksEzmaxcustomerCode" is required (not null)
            if (pksEzmaxcustomerCode == null)
            {
                throw new ArgumentNullException("pksEzmaxcustomerCode is a required property for EzsigntemplatepublicCreateEzsignfolderV1Request and cannot be null");
            }
            this.PksEzmaxcustomerCode = pksEzmaxcustomerCode;
            // to ensure "sEzsigntemplatepublicReferenceid" is required (not null)
            if (sEzsigntemplatepublicReferenceid == null)
            {
                throw new ArgumentNullException("sEzsigntemplatepublicReferenceid is a required property for EzsigntemplatepublicCreateEzsignfolderV1Request and cannot be null");
            }
            this.SEzsigntemplatepublicReferenceid = sEzsigntemplatepublicReferenceid;
            // to ensure "aSEzsigntemplatesignerDescription" is required (not null)
            if (aSEzsigntemplatesignerDescription == null)
            {
                throw new ArgumentNullException("aSEzsigntemplatesignerDescription is a required property for EzsigntemplatepublicCreateEzsignfolderV1Request and cannot be null");
            }
            this.ASEzsigntemplatesignerDescription = aSEzsigntemplatesignerDescription;
            // to ensure "aObjEzsignsigner" is required (not null)
            if (aObjEzsignsigner == null)
            {
                throw new ArgumentNullException("aObjEzsignsigner is a required property for EzsigntemplatepublicCreateEzsignfolderV1Request and cannot be null");
            }
            this.AObjEzsignsigner = aObjEzsignsigner;
        }

        /// <summary>
        /// The Ezmaxcustomer code
        /// </summary>
        /// <value>The Ezmaxcustomer code</value>
        /* <example>demo</example>*/
        [DataMember(Name = "pksEzmaxcustomerCode", IsRequired = true, EmitDefaultValue = true)]
        public string PksEzmaxcustomerCode { get; set; }

        /// <summary>
        /// The referenceid of the Ezsigntemplatepublic
        /// </summary>
        /// <value>The referenceid of the Ezsigntemplatepublic</value>
        /* <example>6B29FC40-CA47-1067-B31D-00DD010662DA</example>*/
        [DataMember(Name = "sEzsigntemplatepublicReferenceid", IsRequired = true, EmitDefaultValue = true)]
        public string SEzsigntemplatepublicReferenceid { get; set; }

        /// <summary>
        /// Gets or Sets ASEzsigntemplatesignerDescription
        /// </summary>
        [DataMember(Name = "a_sEzsigntemplatesignerDescription", IsRequired = true, EmitDefaultValue = true)]
        public List<string> ASEzsigntemplatesignerDescription { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsignsigner
        /// </summary>
        [DataMember(Name = "a_objEzsignsigner", IsRequired = true, EmitDefaultValue = true)]
        public List<EzsignsignerRequestCompound> AObjEzsignsigner { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplatepublicCreateEzsignfolderV1Request {\n");
            sb.Append("  PksEzmaxcustomerCode: ").Append(PksEzmaxcustomerCode).Append("\n");
            sb.Append("  SEzsigntemplatepublicReferenceid: ").Append(SEzsigntemplatepublicReferenceid).Append("\n");
            sb.Append("  ASEzsigntemplatesignerDescription: ").Append(ASEzsigntemplatesignerDescription).Append("\n");
            sb.Append("  AObjEzsignsigner: ").Append(AObjEzsignsigner).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PksEzmaxcustomerCode (string) maxLength
            if (this.PksEzmaxcustomerCode != null && this.PksEzmaxcustomerCode.Length > 6)
            {
                yield return new ValidationResult("Invalid value for PksEzmaxcustomerCode, length must be less than 6.", new [] { "PksEzmaxcustomerCode" });
            }

            // PksEzmaxcustomerCode (string) minLength
            if (this.PksEzmaxcustomerCode != null && this.PksEzmaxcustomerCode.Length < 2)
            {
                yield return new ValidationResult("Invalid value for PksEzmaxcustomerCode, length must be greater than 2.", new [] { "PksEzmaxcustomerCode" });
            }

            if (this.PksEzmaxcustomerCode != null) {
                // PksEzmaxcustomerCode (string) pattern
                Regex regexPksEzmaxcustomerCode = new Regex(@"^[a-z\d]{2,6}$", RegexOptions.CultureInvariant);
                if (!regexPksEzmaxcustomerCode.Match(this.PksEzmaxcustomerCode).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PksEzmaxcustomerCode, must match a pattern of " + regexPksEzmaxcustomerCode, new [] { "PksEzmaxcustomerCode" });
                }
            }

            if (this.SEzsigntemplatepublicReferenceid != null) {
                // SEzsigntemplatepublicReferenceid (string) pattern
                Regex regexSEzsigntemplatepublicReferenceid = new Regex(@"^.{0,36}$", RegexOptions.CultureInvariant);
                if (!regexSEzsigntemplatepublicReferenceid.Match(this.SEzsigntemplatepublicReferenceid).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SEzsigntemplatepublicReferenceid, must match a pattern of " + regexSEzsigntemplatepublicReferenceid, new [] { "SEzsigntemplatepublicReferenceid" });
                }
            }

            yield break;
        }
    }

}
