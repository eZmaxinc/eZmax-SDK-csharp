/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezmaxinvoicingsummaryglobal Object
    /// </summary>
    [DataContract(Name = "ezmaxinvoicingsummaryglobal-ResponseCompound")]
    public partial class EzmaxinvoicingsummaryglobalResponseCompound : EzmaxinvoicingsummaryglobalResponse, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryglobalResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingsummaryglobalResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingsummaryglobalResponseCompound" /> class.
        /// </summary>
        /// <param name="aObjEzmaxinvoicingcommission">aObjEzmaxinvoicingcommission.</param>
        /// <param name="pkiEzmaxinvoicingsummaryglobalID">The unique ID of the Ezmaxinvoicingsummaryglobal.</param>
        /// <param name="fkiEzmaxinvoicingID">The unique ID of the Ezmaxinvoicing.</param>
        /// <param name="fkiEzmaxproductID">The unique ID of the Ezmaxproduct (required).</param>
        /// <param name="sEzmaxproductDescriptionX">The description of the Ezmaxproduct in the language of the requester (required).</param>
        /// <param name="dtEzmaxinvoicingsummaryglobalStart">The start date for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="dtEzmaxinvoicingsummaryglobalEnd">The end date for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="iEzmaxinvoicingsummaryglobalDays">The number of days for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalCountreal">The count item calculated (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalCountbilled">The count item billed (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalSubtotal">The Ezmaxinvoicingsummaryglobal subtotal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalRebateamount">The rebate amount for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalRebatepercent">The rebate percentage of the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalRebatetotal">The rebate amount total for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalTotal">The Ezmaxinvoicingsummaryglobal total (required).</param>
        /// <param name="dEzmaxinvoicingsummaryglobalRepresentative">The amount of commission for the representative.</param>
        /// <param name="dEzmaxinvoicingsummaryglobalPartner">The amount of commission for the partner.</param>
        /// <param name="dEzmaxinvoicingsummaryglobalNet">The net amount of the Ezmaxinvoicingsummaryglobal.</param>
        /// <param name="bEzmaxinvoicingsummaryglobalAdjustment">Whether it is adjustment for the Ezmaxinvoicingsummaryglobal (required).</param>
        /// <param name="tEzmaxproductHelpX">The help message of the Ezmaxproduct in the language of the requester (required).</param>
        public EzmaxinvoicingsummaryglobalResponseCompound(List<EzmaxinvoicingcommissionResponseCompound> aObjEzmaxinvoicingcommission = default(List<EzmaxinvoicingcommissionResponseCompound>), int pkiEzmaxinvoicingsummaryglobalID = default(int), int fkiEzmaxinvoicingID = default(int), int fkiEzmaxproductID = default(int), string sEzmaxproductDescriptionX = default(string), string dtEzmaxinvoicingsummaryglobalStart = default(string), string dtEzmaxinvoicingsummaryglobalEnd = default(string), int iEzmaxinvoicingsummaryglobalDays = default(int), string dEzmaxinvoicingsummaryglobalCountreal = default(string), string dEzmaxinvoicingsummaryglobalCountbilled = default(string), string dEzmaxinvoicingsummaryglobalSubtotal = default(string), string dEzmaxinvoicingsummaryglobalRebateamount = default(string), string dEzmaxinvoicingsummaryglobalRebatepercent = default(string), string dEzmaxinvoicingsummaryglobalRebatetotal = default(string), string dEzmaxinvoicingsummaryglobalTotal = default(string), string dEzmaxinvoicingsummaryglobalRepresentative = default(string), string dEzmaxinvoicingsummaryglobalPartner = default(string), string dEzmaxinvoicingsummaryglobalNet = default(string), bool bEzmaxinvoicingsummaryglobalAdjustment = default(bool), string tEzmaxproductHelpX = default(string)) : base()
        {
            this.AObjEzmaxinvoicingcommission = aObjEzmaxinvoicingcommission;
        }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingcommission
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingcommission", EmitDefaultValue = false)]
        public List<EzmaxinvoicingcommissionResponseCompound> AObjEzmaxinvoicingcommission { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingsummaryglobalResponseCompound {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  AObjEzmaxinvoicingcommission: ").Append(AObjEzmaxinvoicingcommission).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
