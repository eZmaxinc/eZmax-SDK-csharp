/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A form Signer Object in the context of an Ezsignfoldertransmissions
    /// </summary>
    [DataContract(Name = "Custom-EzsignfolderezsigntemplatepublicSigner-Response")]
    public partial class CustomEzsignfolderezsigntemplatepublicSignerResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEzsignfolderezsigntemplatepublicSignerResponse" /> class.
        /// </summary>
        /// <param name="">The unique ID of the User.</param>
        /// <param name="">The unique ID of the Ezsignsignergroup.</param>
        /// <param name="">The First name of the contact.</param>
        /// <param name="">The Last name of the contact.</param>
        /// <param name="">The Description of the Ezsignsignergroup in the language of the requester.</param>
        public CustomEzsignfolderezsigntemplatepublicSignerResponse(int  = default(int), int  = default(int), string  = default(string), string  = default(string), string  = default(string))
        {
            this.FkiUserID = ;
            this.FkiEzsignsignergroupID = ;
            this.SContactFirstname = ;
            this.SContactLastname = ;
            this.SEzsignsignergroupDescriptionX = ;
        }

        /// <summary>
        /// The unique ID of the User
        /// </summary>
        /// <value>The unique ID of the User</value>
        /* <example>70</example>*/
        [DataMember(Name = "fkiUserID", EmitDefaultValue = false)]
        public int FkiUserID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignsignergroup
        /// </summary>
        /// <value>The unique ID of the Ezsignsignergroup</value>
        /* <example>27</example>*/
        [DataMember(Name = "fkiEzsignsignergroupID", EmitDefaultValue = false)]
        public int FkiEzsignsignergroupID { get; set; }

        /// <summary>
        /// The First name of the contact
        /// </summary>
        /// <value>The First name of the contact</value>
        /* <example>John</example>*/
        [DataMember(Name = "sContactFirstname", EmitDefaultValue = false)]
        public string SContactFirstname { get; set; }

        /// <summary>
        /// The Last name of the contact
        /// </summary>
        /// <value>The Last name of the contact</value>
        /* <example>Doe</example>*/
        [DataMember(Name = "sContactLastname", EmitDefaultValue = false)]
        public string SContactLastname { get; set; }

        /// <summary>
        /// The Description of the Ezsignsignergroup in the language of the requester
        /// </summary>
        /// <value>The Description of the Ezsignsignergroup in the language of the requester</value>
        /* <example>HR</example>*/
        [DataMember(Name = "sEzsignsignergroupDescriptionX", EmitDefaultValue = false)]
        public string SEzsignsignergroupDescriptionX { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomEzsignfolderezsigntemplatepublicSignerResponse {\n");
            sb.Append("  FkiUserID: ").Append(FkiUserID).Append("\n");
            sb.Append("  FkiEzsignsignergroupID: ").Append(FkiEzsignsignergroupID).Append("\n");
            sb.Append("  SContactFirstname: ").Append(SContactFirstname).Append("\n");
            sb.Append("  SContactLastname: ").Append(SContactLastname).Append("\n");
            sb.Append("  SEzsignsignergroupDescriptionX: ").Append(SEzsignsignergroupDescriptionX).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiUserID (int) minimum
            if (this.FkiUserID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiUserID, must be a value greater than or equal to 0.", new [] { "FkiUserID" });
            }

            // FkiEzsignsignergroupID (int) maximum
            if (this.FkiEzsignsignergroupID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignsignergroupID, must be a value less than or equal to 65535.", new [] { "FkiEzsignsignergroupID" });
            }

            // FkiEzsignsignergroupID (int) minimum
            if (this.FkiEzsignsignergroupID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignsignergroupID, must be a value greater than or equal to 0.", new [] { "FkiEzsignsignergroupID" });
            }

            yield break;
        }
    }

}
