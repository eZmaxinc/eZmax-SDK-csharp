/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Billingentityinternal Object
    /// </summary>
    [DataContract(Name = "billingentityinternal-ResponseCompound")]
    public partial class BillingentityinternalResponseCompound : IEquatable<BillingentityinternalResponseCompound>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillingentityinternalResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiBillingentityinternalID">The unique ID of the Billingentityinternal. (required).</param>
        /// <param name="objBillingentityinternalDescription">objBillingentityinternalDescription (required).</param>
        /// <param name="aObjBillingentityinternalproduct">aObjBillingentityinternalproduct (required).</param>
        public BillingentityinternalResponseCompound(int pkiBillingentityinternalID = default(int), MultilingualBillingentityinternalDescription objBillingentityinternalDescription = default(MultilingualBillingentityinternalDescription), List<BillingentityinternalproductResponseCompound> aObjBillingentityinternalproduct = default(List<BillingentityinternalproductResponseCompound>))
        {
            this.PkiBillingentityinternalID = pkiBillingentityinternalID;
            // to ensure "objBillingentityinternalDescription" is required (not null)
            if (objBillingentityinternalDescription == null)
            {
                throw new ArgumentNullException("objBillingentityinternalDescription is a required property for BillingentityinternalResponseCompound and cannot be null");
            }
            this.ObjBillingentityinternalDescription = objBillingentityinternalDescription;
            // to ensure "aObjBillingentityinternalproduct" is required (not null)
            if (aObjBillingentityinternalproduct == null)
            {
                throw new ArgumentNullException("aObjBillingentityinternalproduct is a required property for BillingentityinternalResponseCompound and cannot be null");
            }
            this.AObjBillingentityinternalproduct = aObjBillingentityinternalproduct;
        }

        /// <summary>
        /// The unique ID of the Billingentityinternal.
        /// </summary>
        /// <value>The unique ID of the Billingentityinternal.</value>
        /// <example>1</example>
        [DataMember(Name = "pkiBillingentityinternalID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiBillingentityinternalID { get; set; }

        /// <summary>
        /// Gets or Sets ObjBillingentityinternalDescription
        /// </summary>
        [DataMember(Name = "objBillingentityinternalDescription", IsRequired = true, EmitDefaultValue = true)]
        public MultilingualBillingentityinternalDescription ObjBillingentityinternalDescription { get; set; }

        /// <summary>
        /// Gets or Sets AObjBillingentityinternalproduct
        /// </summary>
        [DataMember(Name = "a_objBillingentityinternalproduct", IsRequired = true, EmitDefaultValue = true)]
        public List<BillingentityinternalproductResponseCompound> AObjBillingentityinternalproduct { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BillingentityinternalResponseCompound {\n");
            sb.Append("  PkiBillingentityinternalID: ").Append(PkiBillingentityinternalID).Append("\n");
            sb.Append("  ObjBillingentityinternalDescription: ").Append(ObjBillingentityinternalDescription).Append("\n");
            sb.Append("  AObjBillingentityinternalproduct: ").Append(AObjBillingentityinternalproduct).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillingentityinternalResponseCompound);
        }

        /// <summary>
        /// Returns true if BillingentityinternalResponseCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of BillingentityinternalResponseCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillingentityinternalResponseCompound input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PkiBillingentityinternalID == input.PkiBillingentityinternalID ||
                    this.PkiBillingentityinternalID.Equals(input.PkiBillingentityinternalID)
                ) && 
                (
                    this.ObjBillingentityinternalDescription == input.ObjBillingentityinternalDescription ||
                    (this.ObjBillingentityinternalDescription != null &&
                    this.ObjBillingentityinternalDescription.Equals(input.ObjBillingentityinternalDescription))
                ) && 
                (
                    this.AObjBillingentityinternalproduct == input.AObjBillingentityinternalproduct ||
                    this.AObjBillingentityinternalproduct != null &&
                    input.AObjBillingentityinternalproduct != null &&
                    this.AObjBillingentityinternalproduct.SequenceEqual(input.AObjBillingentityinternalproduct)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PkiBillingentityinternalID.GetHashCode();
                if (this.ObjBillingentityinternalDescription != null)
                {
                    hashCode = (hashCode * 59) + this.ObjBillingentityinternalDescription.GetHashCode();
                }
                if (this.AObjBillingentityinternalproduct != null)
                {
                    hashCode = (hashCode * 59) + this.AObjBillingentityinternalproduct.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiBillingentityinternalID (int) minimum
            if (this.PkiBillingentityinternalID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiBillingentityinternalID, must be a value greater than or equal to 0.", new [] { "PkiBillingentityinternalID" });
            }

            yield break;
        }
    }

}
