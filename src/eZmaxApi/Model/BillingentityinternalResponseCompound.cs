/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Billingentityinternal Object
    /// </summary>
    [DataContract(Name = "billingentityinternal-ResponseCompound")]
    public partial class BillingentityinternalResponseCompound : BillingentityinternalResponse, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillingentityinternalResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalResponseCompound" /> class.
        /// </summary>
        /// <param name="aObjBillingentityinternalproduct">aObjBillingentityinternalproduct (required).</param>
        /// <param name="pkiBillingentityinternalID">The unique ID of the Billingentityinternal. (required).</param>
        /// <param name="objBillingentityinternalDescription">objBillingentityinternalDescription (required).</param>
        public BillingentityinternalResponseCompound(List<BillingentityinternalproductResponseCompound> aObjBillingentityinternalproduct = default(List<BillingentityinternalproductResponseCompound>), int pkiBillingentityinternalID = default(int), MultilingualBillingentityinternalDescription objBillingentityinternalDescription = default(MultilingualBillingentityinternalDescription)) : base()
        {
            // to ensure "aObjBillingentityinternalproduct" is required (not null)
            if (aObjBillingentityinternalproduct == null)
            {
                throw new ArgumentNullException("aObjBillingentityinternalproduct is a required property for BillingentityinternalResponseCompound and cannot be null");
            }
            this.AObjBillingentityinternalproduct = aObjBillingentityinternalproduct;
        }

        /// <summary>
        /// Gets or Sets AObjBillingentityinternalproduct
        /// </summary>
        [DataMember(Name = "a_objBillingentityinternalproduct", IsRequired = true, EmitDefaultValue = true)]
        public List<BillingentityinternalproductResponseCompound> AObjBillingentityinternalproduct { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BillingentityinternalResponseCompound {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  AObjBillingentityinternalproduct: ").Append(AObjBillingentityinternalproduct).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
