/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Request for POST /1/object/communication
    /// </summary>
    [DataContract(Name = "communication-RequestCompound")]
    public partial class CommunicationRequestCompound : CommunicationRequest, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommunicationRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationRequestCompound" /> class.
        /// </summary>
        /// <param name="aObjCommunicationattachment">aObjCommunicationattachment (required).</param>
        /// <param name="aObjCommunicationrecipient">aObjCommunicationrecipient (required).</param>
        /// <param name="aObjCommunicationreference">aObjCommunicationreference (required).</param>
        /// <param name="aObjCommunicationexternalrecipient">aObjCommunicationexternalrecipient (required).</param>
        /// <param name="pkiCommunicationID">The unique ID of the Communication..</param>
        /// <param name="eCommunicationImportance">eCommunicationImportance.</param>
        /// <param name="eCommunicationType">eCommunicationType (required).</param>
        /// <param name="objCommunicationsender">objCommunicationsender.</param>
        /// <param name="sCommunicationSubject">The subject of the Communication.</param>
        /// <param name="tCommunicationBody">The Body of the Communication (required).</param>
        /// <param name="bCommunicationPrivate">Whether the Communication is private or not (required).</param>
        /// <param name="eCommunicationAttachmenttype">How the attachment should be included in the email.   Only used if eCommunicationType is **Email**.</param>
        /// <param name="iCommunicationAttachmentlinkexpiration">The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**.</param>
        /// <param name="bCommunicationReadreceipt">Whether we ask for a read receipt or not..</param>
        public CommunicationRequestCompound(List<CustomCommunicationattachmentRequest> aObjCommunicationattachment = default(List<CustomCommunicationattachmentRequest>), List<CommunicationrecipientRequestCompound> aObjCommunicationrecipient = default(List<CommunicationrecipientRequestCompound>), List<CommunicationreferenceRequestCompound> aObjCommunicationreference = default(List<CommunicationreferenceRequestCompound>), List<CommunicationexternalrecipientRequestCompound> aObjCommunicationexternalrecipient = default(List<CommunicationexternalrecipientRequestCompound>), int pkiCommunicationID = default(int), FieldECommunicationImportance? eCommunicationImportance = default(FieldECommunicationImportance?), FieldECommunicationType eCommunicationType = default(FieldECommunicationType), CustomCommunicationsenderRequest objCommunicationsender = default(CustomCommunicationsenderRequest), string sCommunicationSubject = default(string), string tCommunicationBody = default(string), bool bCommunicationPrivate = default(bool), ECommunicationAttachmenttypeEnum? eCommunicationAttachmenttype = default(ECommunicationAttachmenttypeEnum?), int iCommunicationAttachmentlinkexpiration = default(int), bool bCommunicationReadreceipt = default(bool)) : base()
        {
            // to ensure "aObjCommunicationattachment" is required (not null)
            if (aObjCommunicationattachment == null)
            {
                throw new ArgumentNullException("aObjCommunicationattachment is a required property for CommunicationRequestCompound and cannot be null");
            }
            this.AObjCommunicationattachment = aObjCommunicationattachment;
            // to ensure "aObjCommunicationrecipient" is required (not null)
            if (aObjCommunicationrecipient == null)
            {
                throw new ArgumentNullException("aObjCommunicationrecipient is a required property for CommunicationRequestCompound and cannot be null");
            }
            this.AObjCommunicationrecipient = aObjCommunicationrecipient;
            // to ensure "aObjCommunicationreference" is required (not null)
            if (aObjCommunicationreference == null)
            {
                throw new ArgumentNullException("aObjCommunicationreference is a required property for CommunicationRequestCompound and cannot be null");
            }
            this.AObjCommunicationreference = aObjCommunicationreference;
            // to ensure "aObjCommunicationexternalrecipient" is required (not null)
            if (aObjCommunicationexternalrecipient == null)
            {
                throw new ArgumentNullException("aObjCommunicationexternalrecipient is a required property for CommunicationRequestCompound and cannot be null");
            }
            this.AObjCommunicationexternalrecipient = aObjCommunicationexternalrecipient;
        }

        /// <summary>
        /// Gets or Sets AObjCommunicationattachment
        /// </summary>
        [DataMember(Name = "a_objCommunicationattachment", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomCommunicationattachmentRequest> AObjCommunicationattachment { get; set; }

        /// <summary>
        /// Gets or Sets AObjCommunicationrecipient
        /// </summary>
        [DataMember(Name = "a_objCommunicationrecipient", IsRequired = true, EmitDefaultValue = true)]
        public List<CommunicationrecipientRequestCompound> AObjCommunicationrecipient { get; set; }

        /// <summary>
        /// Gets or Sets AObjCommunicationreference
        /// </summary>
        [DataMember(Name = "a_objCommunicationreference", IsRequired = true, EmitDefaultValue = true)]
        public List<CommunicationreferenceRequestCompound> AObjCommunicationreference { get; set; }

        /// <summary>
        /// Gets or Sets AObjCommunicationexternalrecipient
        /// </summary>
        [DataMember(Name = "a_objCommunicationexternalrecipient", IsRequired = true, EmitDefaultValue = true)]
        public List<CommunicationexternalrecipientRequestCompound> AObjCommunicationexternalrecipient { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommunicationRequestCompound {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  AObjCommunicationattachment: ").Append(AObjCommunicationattachment).Append("\n");
            sb.Append("  AObjCommunicationrecipient: ").Append(AObjCommunicationrecipient).Append("\n");
            sb.Append("  AObjCommunicationreference: ").Append(AObjCommunicationreference).Append("\n");
            sb.Append("  AObjCommunicationexternalrecipient: ").Append(AObjCommunicationexternalrecipient).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
