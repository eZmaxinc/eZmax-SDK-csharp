/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Communicationattachment Object
    /// </summary>
    [DataContract]
    public partial class CommunicationattachmentResponse :  IEquatable<CommunicationattachmentResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationattachmentResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommunicationattachmentResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationattachmentResponse" /> class.
        /// </summary>
        /// <param name="pkiCommunicationattachmentID">The unique ID of the Communicationattachment (required).</param>
        /// <param name="fkiAttachmentID">The unique ID of the Attachment..</param>
        /// <param name="fkiInvoiceID">The unique ID of the Invoice..</param>
        /// <param name="fkiSalarypreparationID">The unique ID of the Salarypreparation..</param>
        /// <param name="sCommunicationattachmentName">The name of the Communicationattachment (required).</param>
        public CommunicationattachmentResponse(int pkiCommunicationattachmentID = default(int), int fkiAttachmentID = default(int), int fkiInvoiceID = default(int), int fkiSalarypreparationID = default(int), string sCommunicationattachmentName = default(string))
        {
            // to ensure "pkiCommunicationattachmentID" is required (not null)
            if (pkiCommunicationattachmentID == null)
            {
                throw new InvalidDataException("pkiCommunicationattachmentID is a required property for CommunicationattachmentResponse and cannot be null");
            }
            else
            {
                this.PkiCommunicationattachmentID = pkiCommunicationattachmentID;
            }

            // to ensure "sCommunicationattachmentName" is required (not null)
            if (sCommunicationattachmentName == null)
            {
                throw new InvalidDataException("sCommunicationattachmentName is a required property for CommunicationattachmentResponse and cannot be null");
            }
            else
            {
                this.SCommunicationattachmentName = sCommunicationattachmentName;
            }

            this.FkiAttachmentID = fkiAttachmentID;
            this.FkiInvoiceID = fkiInvoiceID;
            this.FkiSalarypreparationID = fkiSalarypreparationID;
        }

        /// <summary>
        /// The unique ID of the Communicationattachment
        /// </summary>
        /// <value>The unique ID of the Communicationattachment</value>
        [DataMember(Name="pkiCommunicationattachmentID", EmitDefaultValue=true)]
        public int PkiCommunicationattachmentID { get; set; }

        /// <summary>
        /// The unique ID of the Attachment.
        /// </summary>
        /// <value>The unique ID of the Attachment.</value>
        [DataMember(Name="fkiAttachmentID", EmitDefaultValue=false)]
        public int FkiAttachmentID { get; set; }

        /// <summary>
        /// The unique ID of the Invoice.
        /// </summary>
        /// <value>The unique ID of the Invoice.</value>
        [DataMember(Name="fkiInvoiceID", EmitDefaultValue=false)]
        public int FkiInvoiceID { get; set; }

        /// <summary>
        /// The unique ID of the Salarypreparation.
        /// </summary>
        /// <value>The unique ID of the Salarypreparation.</value>
        [DataMember(Name="fkiSalarypreparationID", EmitDefaultValue=false)]
        public int FkiSalarypreparationID { get; set; }

        /// <summary>
        /// The name of the Communicationattachment
        /// </summary>
        /// <value>The name of the Communicationattachment</value>
        [DataMember(Name="sCommunicationattachmentName", EmitDefaultValue=true)]
        public string SCommunicationattachmentName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CommunicationattachmentResponse {\n");
            sb.Append("  PkiCommunicationattachmentID: ").Append(PkiCommunicationattachmentID).Append("\n");
            sb.Append("  FkiAttachmentID: ").Append(FkiAttachmentID).Append("\n");
            sb.Append("  FkiInvoiceID: ").Append(FkiInvoiceID).Append("\n");
            sb.Append("  FkiSalarypreparationID: ").Append(FkiSalarypreparationID).Append("\n");
            sb.Append("  SCommunicationattachmentName: ").Append(SCommunicationattachmentName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CommunicationattachmentResponse);
        }

        /// <summary>
        /// Returns true if CommunicationattachmentResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CommunicationattachmentResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CommunicationattachmentResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiCommunicationattachmentID == input.PkiCommunicationattachmentID ||
                    (this.PkiCommunicationattachmentID != null &&
                    this.PkiCommunicationattachmentID.Equals(input.PkiCommunicationattachmentID))
                ) && 
                (
                    this.FkiAttachmentID == input.FkiAttachmentID ||
                    (this.FkiAttachmentID != null &&
                    this.FkiAttachmentID.Equals(input.FkiAttachmentID))
                ) && 
                (
                    this.FkiInvoiceID == input.FkiInvoiceID ||
                    (this.FkiInvoiceID != null &&
                    this.FkiInvoiceID.Equals(input.FkiInvoiceID))
                ) && 
                (
                    this.FkiSalarypreparationID == input.FkiSalarypreparationID ||
                    (this.FkiSalarypreparationID != null &&
                    this.FkiSalarypreparationID.Equals(input.FkiSalarypreparationID))
                ) && 
                (
                    this.SCommunicationattachmentName == input.SCommunicationattachmentName ||
                    (this.SCommunicationattachmentName != null &&
                    this.SCommunicationattachmentName.Equals(input.SCommunicationattachmentName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiCommunicationattachmentID != null)
                    hashCode = hashCode * 59 + this.PkiCommunicationattachmentID.GetHashCode();
                if (this.FkiAttachmentID != null)
                    hashCode = hashCode * 59 + this.FkiAttachmentID.GetHashCode();
                if (this.FkiInvoiceID != null)
                    hashCode = hashCode * 59 + this.FkiInvoiceID.GetHashCode();
                if (this.FkiSalarypreparationID != null)
                    hashCode = hashCode * 59 + this.FkiSalarypreparationID.GetHashCode();
                if (this.SCommunicationattachmentName != null)
                    hashCode = hashCode * 59 + this.SCommunicationattachmentName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // FkiAttachmentID (int) minimum
            if(this.FkiAttachmentID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiAttachmentID, must be a value greater than or equal to 0.", new [] { "FkiAttachmentID" });
            }



            // FkiInvoiceID (int) minimum
            if(this.FkiInvoiceID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInvoiceID, must be a value greater than or equal to 0.", new [] { "FkiInvoiceID" });
            }



            // FkiSalarypreparationID (int) minimum
            if(this.FkiSalarypreparationID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiSalarypreparationID, must be a value greater than or equal to 0.", new [] { "FkiSalarypreparationID" });
            }

            yield break;
        }
    }

}
