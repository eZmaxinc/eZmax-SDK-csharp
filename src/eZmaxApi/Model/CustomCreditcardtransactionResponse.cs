/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{

// TEST_IGNORE_ME
/* hasMoreNonReadOnly: isPrimitiveType:false isModel:true isContainer: isString:false isNumeric:false isInteger:false isShort:false isLong:false isUnboundedInteger:false isNumber:false isFloat:false isDouble:false isDecimal:false isByteArray: isBinary: isFile: isBoolean:false isDate:false isDateTime:false isUuid:false isUri: isEmail: isNull:false isFreeFormObject: isAnyType:false isArray:false isMap:true isEnum:false isReadOnly: isWriteOnly: isNullable:false isSelfReference: isCircularReference: isDiscriminator: hasValidation:false isInherited: hasRequired:true hasMultipleTypes:false hasItems:false
openApiType                         : 
baseName                            : 
complexType                         : 
getter                              : 
setter                              : 
dataType                            : Object
datatypeWithEnum                    : 
name                                : Custom-Creditcardtransaction-Response
defaultValue                        : 
defaultValueWithParam               : 
baseType                            : 
example                             : 
jsonSchema                          : 
exclusiveMinimum                    : false
exclusiveMaximum                    : false
required                            : 
deprecated                          : 
hasMoreNonReadOnly                  : 
vars                                : [CodegenProperty{openApiType&#x3D;&#39;FieldECreditcardtypeCodename&#39;, baseName&#x3D;&#39;eCreditcardtypeCodename&#39;, complexType&#x3D;&#39;FieldECreditcardtypeCodename&#39;, getter&#x3D;&#39;getECreditcardtypeCodename&#39;, setter&#x3D;&#39;setECreditcardtypeCodename&#39;, description&#x3D;&#39;null&#39;, dataType&#x3D;&#39;FieldECreditcardtypeCodename&#39;, datatypeWithEnum&#x3D;&#39;FieldECreditcardtypeCodename&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;ECreditcardtypeCodename&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.eCreditcardtypeCodename;&#39;, baseType&#x3D;&#39;FieldECreditcardtypeCodename&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;null&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;null&#39;, example&#x3D;&#39;null&#39;, jsonSchema&#x3D;&#39;{
  &quot;$ref&quot; : &quot;#/components/schemas/Field-eCreditcardtypeCodename&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;false, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;false, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;true, isInnerEnum&#x3D;false, isEnumRef&#x3D;true, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;{values&#x3D;[Amex, Mastercard, Visa], enumVars&#x3D;[{name&#x3D;Amex, isString&#x3D;true, value&#x3D;Amex}, {name&#x3D;Mastercard, isString&#x3D;true, value&#x3D;Mastercard}, {name&#x3D;Visa, isString&#x3D;true, value&#x3D;Visa}]}, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{x-csharp-value-type&#x3D;true, x-emit-default-value&#x3D;false, x-is-value-type&#x3D;true}, hasValidation&#x3D;false, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;ECreditcardtypeCodename&#39;, nameInSnakeCase&#x3D;&#39;E_CREDITCARDTYPE_CODENAME&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;#/components/schemas/Field-eCreditcardtypeCodename, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}, CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;dCreditcardtransactionAmount&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getDCreditcardtransactionAmount&#39;, setter&#x3D;&#39;setDCreditcardtransactionAmount&#39;, description&#x3D;&#39;The amount of the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;DCreditcardtransactionAmount&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.dCreditcardtransactionAmount;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The amount of the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^-{0,1}[\d]{1,9}?\.[\d]{2}$/&#39;, example&#x3D;&#39;&quot;167.58&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The amount of the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;167.58&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{x-emit-default-value&#x3D;false, x-regex&#x3D;^-{0,1}[\d]{1,9}?\.[\d]{2}$, x-modifiers&#x3D;[CultureInvariant], x-is-value-type&#x3D;false}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;DCreditcardtransactionAmount&#39;, nameInSnakeCase&#x3D;&#39;D_CREDITCARDTRANSACTION_AMOUNT&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}, CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;sCreditcardtransactionPartiallydecryptednumber&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getSCreditcardtransactionPartiallydecryptednumber&#39;, setter&#x3D;&#39;setSCreditcardtransactionPartiallydecryptednumber&#39;, description&#x3D;&#39;The partially decrypted credit card number used in the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;SCreditcardtransactionPartiallydecryptednumber&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.sCreditcardtransactionPartiallydecryptednumber;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The partially decrypted credit card number used in the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^([X]{4}[ ]){3}(\d){4}$/&#39;, example&#x3D;&#39;&quot;XXXX XXXX XXXX 1234&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^([X]{4}[ ]){3}(\\d){4}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The partially decrypted credit card number used in the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;XXXX XXXX XXXX 1234&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{x-emit-default-value&#x3D;false, x-regex&#x3D;^([X]{4}[ ]){3}(\d){4}$, x-modifiers&#x3D;[CultureInvariant], x-is-value-type&#x3D;false}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;SCreditcardtransactionPartiallydecryptednumber&#39;, nameInSnakeCase&#x3D;&#39;S_CREDITCARDTRANSACTION_PARTIALLYDECRYPTEDNUMBER&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}, CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;sCreditcardtransactionReferencenumber&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getSCreditcardtransactionReferencenumber&#39;, setter&#x3D;&#39;setSCreditcardtransactionReferencenumber&#39;, description&#x3D;&#39;The reference number on the creditcard service for the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;SCreditcardtransactionReferencenumber&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.sCreditcardtransactionReferencenumber;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The reference number on the creditcard service for the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^[\d]{18}$/&#39;, example&#x3D;&#39;&quot;651447854715478415&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^[\\d]{18}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The reference number on the creditcard service for the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;651447854715478415&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{x-emit-default-value&#x3D;false, x-regex&#x3D;^[\d]{18}$, x-modifiers&#x3D;[CultureInvariant], x-is-value-type&#x3D;false}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;SCreditcardtransactionReferencenumber&#39;, nameInSnakeCase&#x3D;&#39;S_CREDITCARDTRANSACTION_REFERENCENUMBER&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}]
requiredVars                        : [CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;dCreditcardtransactionAmount&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getDCreditcardtransactionAmount&#39;, setter&#x3D;&#39;setDCreditcardtransactionAmount&#39;, description&#x3D;&#39;The amount of the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;DCreditcardtransactionAmount&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.dCreditcardtransactionAmount;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The amount of the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^-{0,1}[\d]{1,9}?\.[\d]{2}$/&#39;, example&#x3D;&#39;&quot;167.58&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The amount of the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;167.58&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;DCreditcardtransactionAmount&#39;, nameInSnakeCase&#x3D;&#39;D_CREDITCARDTRANSACTION_AMOUNT&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}, CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;sCreditcardtransactionPartiallydecryptednumber&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getSCreditcardtransactionPartiallydecryptednumber&#39;, setter&#x3D;&#39;setSCreditcardtransactionPartiallydecryptednumber&#39;, description&#x3D;&#39;The partially decrypted credit card number used in the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;SCreditcardtransactionPartiallydecryptednumber&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.sCreditcardtransactionPartiallydecryptednumber;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The partially decrypted credit card number used in the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^([X]{4}[ ]){3}(\d){4}$/&#39;, example&#x3D;&#39;&quot;XXXX XXXX XXXX 1234&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^([X]{4}[ ]){3}(\\d){4}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The partially decrypted credit card number used in the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;XXXX XXXX XXXX 1234&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;SCreditcardtransactionPartiallydecryptednumber&#39;, nameInSnakeCase&#x3D;&#39;S_CREDITCARDTRANSACTION_PARTIALLYDECRYPTEDNUMBER&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}, CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;sCreditcardtransactionReferencenumber&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getSCreditcardtransactionReferencenumber&#39;, setter&#x3D;&#39;setSCreditcardtransactionReferencenumber&#39;, description&#x3D;&#39;The reference number on the creditcard service for the Creditcardtransaction&#39;, dataType&#x3D;&#39;string&#39;, datatypeWithEnum&#x3D;&#39;string&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;SCreditcardtransactionReferencenumber&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.sCreditcardtransactionReferencenumber;&#39;, baseType&#x3D;&#39;string&#39;, containerType&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;The reference number on the creditcard service for the Creditcardtransaction&#39;, maxLength&#x3D;null, minLength&#x3D;null, pattern&#x3D;&#39;/^[\d]{18}$/&#39;, example&#x3D;&#39;&quot;651447854715478415&quot;&#39;, jsonSchema&#x3D;&#39;{
  &quot;pattern&quot; : &quot;^[\\d]{18}$&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;The reference number on the creditcard service for the Creditcardtransaction&quot;,
  &quot;example&quot; : &quot;651447854715478415&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;true, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;SCreditcardtransactionReferencenumber&#39;, nameInSnakeCase&#x3D;&#39;S_CREDITCARDTRANSACTION_REFERENCENUMBER&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}]
vendorExtensions                    : {}
hasValidation                       : false
nameInCamelCase                     : 
nameInSnakeCase                     : 
uniqueItems                         : false
items :
    
additionalPropertiesIsAnyType       : false
hasVars                             : true
hasRequired                         : true
hasDiscriminatorWithNonEmptyMapping : false
hasMultipleTypes                    : false
hasItems                            : false
iexclusiveMaximum                   : 
datatype                            : 
*/

    /// <summary>
    /// A custom Creditcardtransaction Object
    /// </summary>
    [DataContract]
    public partial class CustomCreditcardtransactionResponse :  IEquatable<CustomCreditcardtransactionResponse>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ECreditcardtypeCodename
        /// </summary>
        [DataMember(Name="eCreditcardtypeCodename", EmitDefaultValue=false)]
        public FieldECreditcardtypeCodename? ECreditcardtypeCodename { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCreditcardtransactionResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomCreditcardtransactionResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCreditcardtransactionResponse" /> class.
        /// </summary>
        /// <param name="eCreditcardtypeCodename">eCreditcardtypeCodename.</param>
        /// <param name="dCreditcardtransactionAmount">The amount of the Creditcardtransaction (required).</param>
        /// <param name="sCreditcardtransactionPartiallydecryptednumber">The partially decrypted credit card number used in the Creditcardtransaction (required).</param>
        /// <param name="sCreditcardtransactionReferencenumber">The reference number on the creditcard service for the Creditcardtransaction (required).</param>
        public CustomCreditcardtransactionResponse(FieldECreditcardtypeCodename? eCreditcardtypeCodename = default(FieldECreditcardtypeCodename?), string dCreditcardtransactionAmount = default(string), string sCreditcardtransactionPartiallydecryptednumber = default(string), string sCreditcardtransactionReferencenumber = default(string))
        {
            // to ensure "dCreditcardtransactionAmount" is required (not null)
            if (dCreditcardtransactionAmount == null)
            {
                throw new InvalidDataException("dCreditcardtransactionAmount is a required property for CustomCreditcardtransactionResponse and cannot be null");
            }
            else
            {
                this.DCreditcardtransactionAmount = dCreditcardtransactionAmount;
            }

            // to ensure "sCreditcardtransactionPartiallydecryptednumber" is required (not null)
            if (sCreditcardtransactionPartiallydecryptednumber == null)
            {
                throw new InvalidDataException("sCreditcardtransactionPartiallydecryptednumber is a required property for CustomCreditcardtransactionResponse and cannot be null");
            }
            else
            {
                this.SCreditcardtransactionPartiallydecryptednumber = sCreditcardtransactionPartiallydecryptednumber;
            }

            // to ensure "sCreditcardtransactionReferencenumber" is required (not null)
            if (sCreditcardtransactionReferencenumber == null)
            {
                throw new InvalidDataException("sCreditcardtransactionReferencenumber is a required property for CustomCreditcardtransactionResponse and cannot be null");
            }
            else
            {
                this.SCreditcardtransactionReferencenumber = sCreditcardtransactionReferencenumber;
            }

            this.ECreditcardtypeCodename = eCreditcardtypeCodename;
        }


        /// <summary>
        /// The amount of the Creditcardtransaction
        /// </summary>
        /// <value>The amount of the Creditcardtransaction</value>
        [DataMember(Name="dCreditcardtransactionAmount", EmitDefaultValue=true)]
        public string DCreditcardtransactionAmount { get; set; }

        /// <summary>
        /// The partially decrypted credit card number used in the Creditcardtransaction
        /// </summary>
        /// <value>The partially decrypted credit card number used in the Creditcardtransaction</value>
        [DataMember(Name="sCreditcardtransactionPartiallydecryptednumber", EmitDefaultValue=true)]
        public string SCreditcardtransactionPartiallydecryptednumber { get; set; }

        /// <summary>
        /// The reference number on the creditcard service for the Creditcardtransaction
        /// </summary>
        /// <value>The reference number on the creditcard service for the Creditcardtransaction</value>
        [DataMember(Name="sCreditcardtransactionReferencenumber", EmitDefaultValue=true)]
        public string SCreditcardtransactionReferencenumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomCreditcardtransactionResponse {\n");
            sb.Append("  ECreditcardtypeCodename: ").Append(ECreditcardtypeCodename).Append("\n");
            sb.Append("  DCreditcardtransactionAmount: ").Append(DCreditcardtransactionAmount).Append("\n");
            sb.Append("  SCreditcardtransactionPartiallydecryptednumber: ").Append(SCreditcardtransactionPartiallydecryptednumber).Append("\n");
            sb.Append("  SCreditcardtransactionReferencenumber: ").Append(SCreditcardtransactionReferencenumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomCreditcardtransactionResponse);
        }

        /// <summary>
        /// Returns true if CustomCreditcardtransactionResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomCreditcardtransactionResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomCreditcardtransactionResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ECreditcardtypeCodename == input.ECreditcardtypeCodename ||
                    (this.ECreditcardtypeCodename != null &&
                    this.ECreditcardtypeCodename.Equals(input.ECreditcardtypeCodename))
                ) && 
                (
                    this.DCreditcardtransactionAmount == input.DCreditcardtransactionAmount ||
                    (this.DCreditcardtransactionAmount != null &&
                    this.DCreditcardtransactionAmount.Equals(input.DCreditcardtransactionAmount))
                ) && 
                (
                    this.SCreditcardtransactionPartiallydecryptednumber == input.SCreditcardtransactionPartiallydecryptednumber ||
                    (this.SCreditcardtransactionPartiallydecryptednumber != null &&
                    this.SCreditcardtransactionPartiallydecryptednumber.Equals(input.SCreditcardtransactionPartiallydecryptednumber))
                ) && 
                (
                    this.SCreditcardtransactionReferencenumber == input.SCreditcardtransactionReferencenumber ||
                    (this.SCreditcardtransactionReferencenumber != null &&
                    this.SCreditcardtransactionReferencenumber.Equals(input.SCreditcardtransactionReferencenumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ECreditcardtypeCodename != null)
                    hashCode = hashCode * 59 + this.ECreditcardtypeCodename.GetHashCode();
                if (this.DCreditcardtransactionAmount != null)
                    hashCode = hashCode * 59 + this.DCreditcardtransactionAmount.GetHashCode();
                if (this.SCreditcardtransactionPartiallydecryptednumber != null)
                    hashCode = hashCode * 59 + this.SCreditcardtransactionPartiallydecryptednumber.GetHashCode();
                if (this.SCreditcardtransactionReferencenumber != null)
                    hashCode = hashCode * 59 + this.SCreditcardtransactionReferencenumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // DCreditcardtransactionAmount (string) pattern
            Regex regexDCreditcardtransactionAmount = new Regex(@"^-{0,1}[\d]{1,9}?\.[\d]{2}$", RegexOptions.CultureInvariant);
            if (false == regexDCreditcardtransactionAmount.Match(this.DCreditcardtransactionAmount).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DCreditcardtransactionAmount, must match a pattern of " + regexDCreditcardtransactionAmount, new [] { "DCreditcardtransactionAmount" });
            }



            // SCreditcardtransactionPartiallydecryptednumber (string) pattern
            Regex regexSCreditcardtransactionPartiallydecryptednumber = new Regex(@"^([X]{4}[ ]){3}(\d){4}$", RegexOptions.CultureInvariant);
            if (false == regexSCreditcardtransactionPartiallydecryptednumber.Match(this.SCreditcardtransactionPartiallydecryptednumber).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SCreditcardtransactionPartiallydecryptednumber, must match a pattern of " + regexSCreditcardtransactionPartiallydecryptednumber, new [] { "SCreditcardtransactionPartiallydecryptednumber" });
            }



            // SCreditcardtransactionReferencenumber (string) pattern
            Regex regexSCreditcardtransactionReferencenumber = new Regex(@"^[\d]{18}$", RegexOptions.CultureInvariant);
            if (false == regexSCreditcardtransactionReferencenumber.Match(this.SCreditcardtransactionReferencenumber).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SCreditcardtransactionReferencenumber, must match a pattern of " + regexSCreditcardtransactionReferencenumber, new [] { "SCreditcardtransactionReferencenumber" });
            }

            yield break;
        }
    }

}
