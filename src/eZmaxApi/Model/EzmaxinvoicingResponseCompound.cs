/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezmaxinvoicing Object
    /// </summary>
    [DataContract(Name = "ezmaxinvoicing-ResponseCompound")]
    public partial class EzmaxinvoicingResponseCompound : EzmaxinvoicingResponse, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzmaxinvoicingResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzmaxinvoicingResponseCompound" /> class.
        /// </summary>
        /// <param name="objEzmaxinvoicingcontract">objEzmaxinvoicingcontract (required).</param>
        /// <param name="objEzmaxpricing">objEzmaxpricing (required).</param>
        /// <param name="aObjEzmaxinvoicingsummaryglobal">aObjEzmaxinvoicingsummaryglobal (required).</param>
        /// <param name="aObjEzmaxinvoicingsummaryexternal">aObjEzmaxinvoicingsummaryexternal (required).</param>
        /// <param name="aObjEzmaxinvoicingsummaryinternal">aObjEzmaxinvoicingsummaryinternal (required).</param>
        /// <param name="aObjEzmaxinvoicingagent">aObjEzmaxinvoicingagent (required).</param>
        /// <param name="aObjEzmaxinvoicinguser">aObjEzmaxinvoicinguser (required).</param>
        /// <param name="aObjEzmaxinvoicingezsignfolder">aObjEzmaxinvoicingezsignfolder (required).</param>
        /// <param name="aObjEzmaxinvoicingezsigndocument">aObjEzmaxinvoicingezsigndocument (required).</param>
        /// <param name="pkiEzmaxinvoicingID">The unique ID of the Ezmaxinvoicing.</param>
        /// <param name="fkiEzmaxinvoicingcontractID">The unique ID of the Ezmaxinvoicingcontract (required).</param>
        /// <param name="fkiEzmaxpricingID">The unique ID of the Ezmaxpricing (required).</param>
        /// <param name="fkiSystemconfigurationtypeID">The unique ID of the Systemconfigurationtype (required).</param>
        /// <param name="sSystemconfigurationtypeDescriptionX">The description of the Systemconfigurationtype in the language of the requester (required).</param>
        /// <param name="yyyymmEzmaxinvoicing">The YYYYMM period of the Ezmaxinvoicing (required).</param>
        /// <param name="iEzmaxinvoicingDays">The number of days invoiced (required).</param>
        /// <param name="eEzmaxinvoicingPaymenttype">eEzmaxinvoicingPaymenttype (required).</param>
        /// <param name="dEzmaxinvoicingRebatepaymenttype">The percentage of rebate depending of the payment type (required).</param>
        /// <param name="iEzmaxinvoicingContractlength">The length of the contract in years (required).</param>
        /// <param name="dEzmaxinvoicingRebatecontractlength">The percentage of rebate depending of the contract length (required).</param>
        /// <param name="bEzmaxinvoicingRebateEzsignallagents">Whether the rebate for eZsign is for all agents (required).</param>
        /// <param name="objAudit">objAudit.</param>
        public EzmaxinvoicingResponseCompound(EzmaxinvoicingcontractResponseCompound objEzmaxinvoicingcontract = default(EzmaxinvoicingcontractResponseCompound), CustomEzmaxpricingResponse objEzmaxpricing = default(CustomEzmaxpricingResponse), List<EzmaxinvoicingsummaryglobalResponseCompound> aObjEzmaxinvoicingsummaryglobal = default(List<EzmaxinvoicingsummaryglobalResponseCompound>), List<EzmaxinvoicingsummaryexternalResponseCompound> aObjEzmaxinvoicingsummaryexternal = default(List<EzmaxinvoicingsummaryexternalResponseCompound>), List<EzmaxinvoicingsummaryinternalResponseCompound> aObjEzmaxinvoicingsummaryinternal = default(List<EzmaxinvoicingsummaryinternalResponseCompound>), List<EzmaxinvoicingagentResponseCompound> aObjEzmaxinvoicingagent = default(List<EzmaxinvoicingagentResponseCompound>), List<EzmaxinvoicinguserResponseCompound> aObjEzmaxinvoicinguser = default(List<EzmaxinvoicinguserResponseCompound>), List<CustomEzmaxinvoicingEzsignfolderResponse> aObjEzmaxinvoicingezsignfolder = default(List<CustomEzmaxinvoicingEzsignfolderResponse>), List<CustomEzmaxinvoicingEzsigndocumentResponse> aObjEzmaxinvoicingezsigndocument = default(List<CustomEzmaxinvoicingEzsigndocumentResponse>), int pkiEzmaxinvoicingID = default(int), int fkiEzmaxinvoicingcontractID = default(int), int fkiEzmaxpricingID = default(int), int fkiSystemconfigurationtypeID = default(int), string sSystemconfigurationtypeDescriptionX = default(string), string yyyymmEzmaxinvoicing = default(string), int iEzmaxinvoicingDays = default(int), FieldEEzmaxinvoicingPaymenttype eEzmaxinvoicingPaymenttype = default(FieldEEzmaxinvoicingPaymenttype), string dEzmaxinvoicingRebatepaymenttype = default(string), int iEzmaxinvoicingContractlength = default(int), string dEzmaxinvoicingRebatecontractlength = default(string), bool bEzmaxinvoicingRebateEzsignallagents = default(bool), CommonAudit objAudit = default(CommonAudit)) : base()
        {
            // to ensure "objEzmaxinvoicingcontract" is required (not null)
            if (objEzmaxinvoicingcontract == null)
            {
                throw new ArgumentNullException("objEzmaxinvoicingcontract is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.ObjEzmaxinvoicingcontract = objEzmaxinvoicingcontract;
            // to ensure "objEzmaxpricing" is required (not null)
            if (objEzmaxpricing == null)
            {
                throw new ArgumentNullException("objEzmaxpricing is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.ObjEzmaxpricing = objEzmaxpricing;
            // to ensure "aObjEzmaxinvoicingsummaryglobal" is required (not null)
            if (aObjEzmaxinvoicingsummaryglobal == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingsummaryglobal is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryglobal = aObjEzmaxinvoicingsummaryglobal;
            // to ensure "aObjEzmaxinvoicingsummaryexternal" is required (not null)
            if (aObjEzmaxinvoicingsummaryexternal == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingsummaryexternal is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryexternal = aObjEzmaxinvoicingsummaryexternal;
            // to ensure "aObjEzmaxinvoicingsummaryinternal" is required (not null)
            if (aObjEzmaxinvoicingsummaryinternal == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingsummaryinternal is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingsummaryinternal = aObjEzmaxinvoicingsummaryinternal;
            // to ensure "aObjEzmaxinvoicingagent" is required (not null)
            if (aObjEzmaxinvoicingagent == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingagent is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingagent = aObjEzmaxinvoicingagent;
            // to ensure "aObjEzmaxinvoicinguser" is required (not null)
            if (aObjEzmaxinvoicinguser == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicinguser is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicinguser = aObjEzmaxinvoicinguser;
            // to ensure "aObjEzmaxinvoicingezsignfolder" is required (not null)
            if (aObjEzmaxinvoicingezsignfolder == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingezsignfolder is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingezsignfolder = aObjEzmaxinvoicingezsignfolder;
            // to ensure "aObjEzmaxinvoicingezsigndocument" is required (not null)
            if (aObjEzmaxinvoicingezsigndocument == null)
            {
                throw new ArgumentNullException("aObjEzmaxinvoicingezsigndocument is a required property for EzmaxinvoicingResponseCompound and cannot be null");
            }
            this.AObjEzmaxinvoicingezsigndocument = aObjEzmaxinvoicingezsigndocument;
        }

        /// <summary>
        /// Gets or Sets ObjEzmaxinvoicingcontract
        /// </summary>
        [DataMember(Name = "objEzmaxinvoicingcontract", IsRequired = true, EmitDefaultValue = true)]
        public EzmaxinvoicingcontractResponseCompound ObjEzmaxinvoicingcontract { get; set; }

        /// <summary>
        /// Gets or Sets ObjEzmaxpricing
        /// </summary>
        [DataMember(Name = "objEzmaxpricing", IsRequired = true, EmitDefaultValue = true)]
        public CustomEzmaxpricingResponse ObjEzmaxpricing { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryglobal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryglobal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryglobalResponseCompound> AObjEzmaxinvoicingsummaryglobal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryexternal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryexternal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryexternalResponseCompound> AObjEzmaxinvoicingsummaryexternal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingsummaryinternal
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingsummaryinternal", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingsummaryinternalResponseCompound> AObjEzmaxinvoicingsummaryinternal { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingagent
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingagent", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicingagentResponseCompound> AObjEzmaxinvoicingagent { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicinguser
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicinguser", IsRequired = true, EmitDefaultValue = true)]
        public List<EzmaxinvoicinguserResponseCompound> AObjEzmaxinvoicinguser { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingezsignfolder
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingezsignfolder", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomEzmaxinvoicingEzsignfolderResponse> AObjEzmaxinvoicingezsignfolder { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzmaxinvoicingezsigndocument
        /// </summary>
        [DataMember(Name = "a_objEzmaxinvoicingezsigndocument", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomEzmaxinvoicingEzsigndocumentResponse> AObjEzmaxinvoicingezsigndocument { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzmaxinvoicingResponseCompound {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  ObjEzmaxinvoicingcontract: ").Append(ObjEzmaxinvoicingcontract).Append("\n");
            sb.Append("  ObjEzmaxpricing: ").Append(ObjEzmaxpricing).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryglobal: ").Append(AObjEzmaxinvoicingsummaryglobal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryexternal: ").Append(AObjEzmaxinvoicingsummaryexternal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingsummaryinternal: ").Append(AObjEzmaxinvoicingsummaryinternal).Append("\n");
            sb.Append("  AObjEzmaxinvoicingagent: ").Append(AObjEzmaxinvoicingagent).Append("\n");
            sb.Append("  AObjEzmaxinvoicinguser: ").Append(AObjEzmaxinvoicinguser).Append("\n");
            sb.Append("  AObjEzmaxinvoicingezsignfolder: ").Append(AObjEzmaxinvoicingezsignfolder).Append("\n");
            sb.Append("  AObjEzmaxinvoicingezsigndocument: ").Append(AObjEzmaxinvoicingezsigndocument).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
