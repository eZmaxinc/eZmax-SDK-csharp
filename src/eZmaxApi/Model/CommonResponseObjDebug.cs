/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// This is a generic debug object that is returned by all API requests
    /// </summary>
    [DataContract(Name = "Common-Response-objDebug")]
    public partial class CommonResponseObjDebug : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonResponseObjDebug" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommonResponseObjDebug() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonResponseObjDebug" /> class.
        /// </summary>
        /// <param name="sMemoryUsage">The peak memory allocated during the API request execution. Formatted as a human readable string (required).</param>
        /// <param name="sRunTime">The total server execution time of the API request execution. Formatted as a human readable string (required).</param>
        /// <param name="iSQLSelects">The number of SQL SELECT queries that were sent to the database server during the API request execution (required).</param>
        /// <param name="iSQLQueries">The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution (required).</param>
        /// <param name="aObjSQLQuery">An array of the SQL Queries that were executed during the API request execution (required).</param>
        public CommonResponseObjDebug(string sMemoryUsage = default(string), string sRunTime = default(string), int iSQLSelects = default(int), int iSQLQueries = default(int), List<CommonResponseObjSQLQuery> aObjSQLQuery = default(List<CommonResponseObjSQLQuery>))
        {
            // to ensure "sMemoryUsage" is required (not null)
            if (sMemoryUsage == null)
            {
                throw new ArgumentNullException("sMemoryUsage is a required property for CommonResponseObjDebug and cannot be null");
            }
            this.SMemoryUsage = sMemoryUsage;
            // to ensure "sRunTime" is required (not null)
            if (sRunTime == null)
            {
                throw new ArgumentNullException("sRunTime is a required property for CommonResponseObjDebug and cannot be null");
            }
            this.SRunTime = sRunTime;
            this.ISQLSelects = iSQLSelects;
            this.ISQLQueries = iSQLQueries;
            // to ensure "aObjSQLQuery" is required (not null)
            if (aObjSQLQuery == null)
            {
                throw new ArgumentNullException("aObjSQLQuery is a required property for CommonResponseObjDebug and cannot be null");
            }
            this.AObjSQLQuery = aObjSQLQuery;
        }

        /// <summary>
        /// The peak memory allocated during the API request execution. Formatted as a human readable string
        /// </summary>
        /// <value>The peak memory allocated during the API request execution. Formatted as a human readable string</value>
        [DataMember(Name = "sMemoryUsage", IsRequired = true, EmitDefaultValue = true)]
        public string SMemoryUsage { get; set; }

        /// <summary>
        /// The total server execution time of the API request execution. Formatted as a human readable string
        /// </summary>
        /// <value>The total server execution time of the API request execution. Formatted as a human readable string</value>
        [DataMember(Name = "sRunTime", IsRequired = true, EmitDefaultValue = true)]
        public string SRunTime { get; set; }

        /// <summary>
        /// The number of SQL SELECT queries that were sent to the database server during the API request execution
        /// </summary>
        /// <value>The number of SQL SELECT queries that were sent to the database server during the API request execution</value>
        [DataMember(Name = "iSQLSelects", IsRequired = true, EmitDefaultValue = true)]
        public int ISQLSelects { get; set; }

        /// <summary>
        /// The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution
        /// </summary>
        /// <value>The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution</value>
        [DataMember(Name = "iSQLQueries", IsRequired = true, EmitDefaultValue = true)]
        public int ISQLQueries { get; set; }

        /// <summary>
        /// An array of the SQL Queries that were executed during the API request execution
        /// </summary>
        /// <value>An array of the SQL Queries that were executed during the API request execution</value>
        [DataMember(Name = "a_objSQLQuery", IsRequired = true, EmitDefaultValue = true)]
        public List<CommonResponseObjSQLQuery> AObjSQLQuery { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommonResponseObjDebug {\n");
            sb.Append("  SMemoryUsage: ").Append(SMemoryUsage).Append("\n");
            sb.Append("  SRunTime: ").Append(SRunTime).Append("\n");
            sb.Append("  ISQLSelects: ").Append(ISQLSelects).Append("\n");
            sb.Append("  ISQLQueries: ").Append(ISQLQueries).Append("\n");
            sb.Append("  AObjSQLQuery: ").Append(AObjSQLQuery).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
