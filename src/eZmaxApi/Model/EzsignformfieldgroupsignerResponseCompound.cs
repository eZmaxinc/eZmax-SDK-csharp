/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// An Ezsignformfieldgroupsigner Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "ezsignformfieldgroupsigner-ResponseCompound")]
    public partial class EzsignformfieldgroupsignerResponseCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignformfieldgroupsignerResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignformfieldgroupsignerResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignformfieldgroupsignerResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiEzsignformfieldgroupsignerID">The unique ID of the Ezsignformfieldgroupsigner (required).</param>
        /// <param name="fkiEzsignfoldersignerassociationID">The unique ID of the Ezsignfoldersignerassociation (required).</param>
        public EzsignformfieldgroupsignerResponseCompound(int pkiEzsignformfieldgroupsignerID = default(int), int fkiEzsignfoldersignerassociationID = default(int))
        {
            this.PkiEzsignformfieldgroupsignerID = pkiEzsignformfieldgroupsignerID;
            this.FkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
        }

        /// <summary>
        /// The unique ID of the Ezsignformfieldgroupsigner
        /// </summary>
        /// <value>The unique ID of the Ezsignformfieldgroupsigner</value>
        /* <example>81</example>*/
        [DataMember(Name = "pkiEzsignformfieldgroupsignerID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiEzsignformfieldgroupsignerID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignfoldersignerassociation
        /// </summary>
        /// <value>The unique ID of the Ezsignfoldersignerassociation</value>
        /* <example>20</example>*/
        [DataMember(Name = "fkiEzsignfoldersignerassociationID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsignfoldersignerassociationID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignformfieldgroupsignerResponseCompound {\n");
            sb.Append("  PkiEzsignformfieldgroupsignerID: ").Append(PkiEzsignformfieldgroupsignerID).Append("\n");
            sb.Append("  FkiEzsignfoldersignerassociationID: ").Append(FkiEzsignfoldersignerassociationID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsignformfieldgroupsignerID (int) minimum
            if (this.PkiEzsignformfieldgroupsignerID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzsignformfieldgroupsignerID, must be a value greater than or equal to 0.", new [] { "PkiEzsignformfieldgroupsignerID" });
            }

            // FkiEzsignfoldersignerassociationID (int) minimum
            if (this.FkiEzsignfoldersignerassociationID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignfoldersignerassociationID, must be a value greater than or equal to 0.", new [] { "FkiEzsignfoldersignerassociationID" });
            }

            yield break;
        }
    }

}
