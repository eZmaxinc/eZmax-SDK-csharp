/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Billingentityinternalproduct Object
    /// </summary>
    [DataContract]
    public partial class BillingentityinternalproductRequest :  IEquatable<BillingentityinternalproductRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalproductRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BillingentityinternalproductRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillingentityinternalproductRequest" /> class.
        /// </summary>
        /// <param name="pkiBillingentityinternalproductID">The unique ID of the Billingentityinternalproduct.</param>
        /// <param name="fkiEzmaxproductID">The unique ID of the Ezmaxproduct (required).</param>
        /// <param name="fkiBillingentityexternalID">The unique ID of the Billingentityexternal (required).</param>
        public BillingentityinternalproductRequest(int pkiBillingentityinternalproductID = default(int), int fkiEzmaxproductID = default(int), int fkiBillingentityexternalID = default(int))
        {
            // to ensure "fkiEzmaxproductID" is required (not null)
            if (fkiEzmaxproductID == null)
            {
                throw new InvalidDataException("fkiEzmaxproductID is a required property for BillingentityinternalproductRequest and cannot be null");
            }
            else
            {
                this.FkiEzmaxproductID = fkiEzmaxproductID;
            }

            // to ensure "fkiBillingentityexternalID" is required (not null)
            if (fkiBillingentityexternalID == null)
            {
                throw new InvalidDataException("fkiBillingentityexternalID is a required property for BillingentityinternalproductRequest and cannot be null");
            }
            else
            {
                this.FkiBillingentityexternalID = fkiBillingentityexternalID;
            }

            this.PkiBillingentityinternalproductID = pkiBillingentityinternalproductID;
        }

        /// <summary>
        /// The unique ID of the Billingentityinternalproduct
        /// </summary>
        /// <value>The unique ID of the Billingentityinternalproduct</value>
        [DataMember(Name="pkiBillingentityinternalproductID", EmitDefaultValue=false)]
        public int PkiBillingentityinternalproductID { get; set; }

        /// <summary>
        /// The unique ID of the Ezmaxproduct
        /// </summary>
        /// <value>The unique ID of the Ezmaxproduct</value>
        [DataMember(Name="fkiEzmaxproductID", EmitDefaultValue=true)]
        public int FkiEzmaxproductID { get; set; }

        /// <summary>
        /// The unique ID of the Billingentityexternal
        /// </summary>
        /// <value>The unique ID of the Billingentityexternal</value>
        [DataMember(Name="fkiBillingentityexternalID", EmitDefaultValue=true)]
        public int FkiBillingentityexternalID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillingentityinternalproductRequest {\n");
            sb.Append("  PkiBillingentityinternalproductID: ").Append(PkiBillingentityinternalproductID).Append("\n");
            sb.Append("  FkiEzmaxproductID: ").Append(FkiEzmaxproductID).Append("\n");
            sb.Append("  FkiBillingentityexternalID: ").Append(FkiBillingentityexternalID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillingentityinternalproductRequest);
        }

        /// <summary>
        /// Returns true if BillingentityinternalproductRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BillingentityinternalproductRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillingentityinternalproductRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PkiBillingentityinternalproductID == input.PkiBillingentityinternalproductID ||
                    (this.PkiBillingentityinternalproductID != null &&
                    this.PkiBillingentityinternalproductID.Equals(input.PkiBillingentityinternalproductID))
                ) && 
                (
                    this.FkiEzmaxproductID == input.FkiEzmaxproductID ||
                    (this.FkiEzmaxproductID != null &&
                    this.FkiEzmaxproductID.Equals(input.FkiEzmaxproductID))
                ) && 
                (
                    this.FkiBillingentityexternalID == input.FkiBillingentityexternalID ||
                    (this.FkiBillingentityexternalID != null &&
                    this.FkiBillingentityexternalID.Equals(input.FkiBillingentityexternalID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PkiBillingentityinternalproductID != null)
                    hashCode = hashCode * 59 + this.PkiBillingentityinternalproductID.GetHashCode();
                if (this.FkiEzmaxproductID != null)
                    hashCode = hashCode * 59 + this.FkiEzmaxproductID.GetHashCode();
                if (this.FkiBillingentityexternalID != null)
                    hashCode = hashCode * 59 + this.FkiBillingentityexternalID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // PkiBillingentityinternalproductID (int) maximum
            if(this.PkiBillingentityinternalproductID > (int)255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiBillingentityinternalproductID, must be a value less than or equal to 255.", new [] { "PkiBillingentityinternalproductID" });
            }

            // PkiBillingentityinternalproductID (int) minimum
            if(this.PkiBillingentityinternalproductID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiBillingentityinternalproductID, must be a value greater than or equal to 0.", new [] { "PkiBillingentityinternalproductID" });
            }



            // FkiEzmaxproductID (int) minimum
            if(this.FkiEzmaxproductID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzmaxproductID, must be a value greater than or equal to 1.", new [] { "FkiEzmaxproductID" });
            }



            // FkiBillingentityexternalID (int) minimum
            if(this.FkiBillingentityexternalID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBillingentityexternalID, must be a value greater than or equal to 1.", new [] { "FkiBillingentityexternalID" });
            }

            yield break;
        }
    }

}
