/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Description of the API Key
    /// </summary>
    [DataContract(Name = "Multilingual-ApikeyDescription")]
    public partial class MultilingualApikeyDescription : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MultilingualApikeyDescription" /> class.
        /// </summary>
        /// <param name="sApikeyDescription1">The description of the Apikey in French.</param>
        /// <param name="sApikeyDescription2">The description of the Apikey in English.</param>
        public MultilingualApikeyDescription(string sApikeyDescription1 = default(string), string sApikeyDescription2 = default(string))
        {
            this.SApikeyDescription1 = sApikeyDescription1;
            this.SApikeyDescription2 = sApikeyDescription2;
        }

        /// <summary>
        /// The description of the Apikey in French
        /// </summary>
        /// <value>The description of the Apikey in French</value>
        /* <example>Projet X</example>*/
        [DataMember(Name = "sApikeyDescription1", EmitDefaultValue = false)]
        public string SApikeyDescription1 { get; set; }

        /// <summary>
        /// The description of the Apikey in English
        /// </summary>
        /// <value>The description of the Apikey in English</value>
        /* <example>Project X</example>*/
        [DataMember(Name = "sApikeyDescription2", EmitDefaultValue = false)]
        public string SApikeyDescription2 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MultilingualApikeyDescription {\n");
            sb.Append("  SApikeyDescription1: ").Append(SApikeyDescription1).Append("\n");
            sb.Append("  SApikeyDescription2: ").Append(SApikeyDescription2).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
