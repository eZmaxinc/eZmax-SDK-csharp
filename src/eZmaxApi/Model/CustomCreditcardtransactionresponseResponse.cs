/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A custom Creditcardtransactionresponse Object
    /// </summary>
    [DataContract(Name = "Custom-Creditcardtransactionresponse-Response")]
    public partial class CustomCreditcardtransactionresponseResponse : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ECreditcardtransactionAvsresult
        /// </summary>
        [DataMember(Name = "eCreditcardtransactionAvsresult", EmitDefaultValue = false)]
        public FieldECreditcardtransactionAvsresult? ECreditcardtransactionAvsresult { get; set; }

        /// <summary>
        /// Gets or Sets ECreditcardtransactionCvdresult
        /// </summary>
        [DataMember(Name = "eCreditcardtransactionCvdresult", EmitDefaultValue = false)]
        public FieldECreditcardtransactionCvdresult? ECreditcardtransactionCvdresult { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCreditcardtransactionresponseResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomCreditcardtransactionresponseResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomCreditcardtransactionresponseResponse" /> class.
        /// </summary>
        /// <param name="">The ISO code (required).</param>
        /// <param name="">The response code (required).</param>
        /// <param name="">The terminal response message (required).</param>
        /// <param name="">.</param>
        /// <param name="">.</param>
        public CustomCreditcardtransactionresponseResponse(string  = default(string), string  = default(string), string  = default(string), FieldECreditcardtransactionAvsresult?  = default(FieldECreditcardtransactionAvsresult?), FieldECreditcardtransactionCvdresult?  = default(FieldECreditcardtransactionCvdresult?))
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CustomCreditcardtransactionresponseResponse and cannot be null");
            }
            this.SCreditcardtransactionISOcode = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CustomCreditcardtransactionresponseResponse and cannot be null");
            }
            this.SCreditcardtransactionResponsecode = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CustomCreditcardtransactionresponseResponse and cannot be null");
            }
            this.SCreditcardtransactionResponseterminalmessage = ;
            this.ECreditcardtransactionAvsresult = ;
            this.ECreditcardtransactionCvdresult = ;
        }

        /// <summary>
        /// The ISO code
        /// </summary>
        /// <value>The ISO code</value>
        /* <example>01</example>*/
        [DataMember(Name = "sCreditcardtransactionISOcode", IsRequired = true, EmitDefaultValue = true)]
        public string SCreditcardtransactionISOcode { get; set; }

        /// <summary>
        /// The response code
        /// </summary>
        /// <value>The response code</value>
        /* <example>027</example>*/
        [DataMember(Name = "sCreditcardtransactionResponsecode", IsRequired = true, EmitDefaultValue = true)]
        public string SCreditcardtransactionResponsecode { get; set; }

        /// <summary>
        /// The terminal response message
        /// </summary>
        /// <value>The terminal response message</value>
        /* <example>APPROVED</example>*/
        [DataMember(Name = "sCreditcardtransactionResponseterminalmessage", IsRequired = true, EmitDefaultValue = true)]
        public string SCreditcardtransactionResponseterminalmessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomCreditcardtransactionresponseResponse {\n");
            sb.Append("  SCreditcardtransactionISOcode: ").Append(SCreditcardtransactionISOcode).Append("\n");
            sb.Append("  SCreditcardtransactionResponsecode: ").Append(SCreditcardtransactionResponsecode).Append("\n");
            sb.Append("  SCreditcardtransactionResponseterminalmessage: ").Append(SCreditcardtransactionResponseterminalmessage).Append("\n");
            sb.Append("  ECreditcardtransactionAvsresult: ").Append(ECreditcardtransactionAvsresult).Append("\n");
            sb.Append("  ECreditcardtransactionCvdresult: ").Append(ECreditcardtransactionCvdresult).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.SCreditcardtransactionISOcode != null) {
                // SCreditcardtransactionISOcode (string) pattern
                Regex regexSCreditcardtransactionISOcode = new Regex(@"^.{1,2}$", RegexOptions.CultureInvariant);
                if (!regexSCreditcardtransactionISOcode.Match(this.SCreditcardtransactionISOcode).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SCreditcardtransactionISOcode, must match a pattern of " + regexSCreditcardtransactionISOcode, new [] { "SCreditcardtransactionISOcode" });
                }
            }

            if (this.SCreditcardtransactionResponsecode != null) {
                // SCreditcardtransactionResponsecode (string) pattern
                Regex regexSCreditcardtransactionResponsecode = new Regex(@"^.{1,3}$", RegexOptions.CultureInvariant);
                if (!regexSCreditcardtransactionResponsecode.Match(this.SCreditcardtransactionResponsecode).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SCreditcardtransactionResponsecode, must match a pattern of " + regexSCreditcardtransactionResponsecode, new [] { "SCreditcardtransactionResponsecode" });
                }
            }

            if (this.SCreditcardtransactionResponseterminalmessage != null) {
                // SCreditcardtransactionResponseterminalmessage (string) pattern
                Regex regexSCreditcardtransactionResponseterminalmessage = new Regex(@"^.{0,50}$", RegexOptions.CultureInvariant);
                if (!regexSCreditcardtransactionResponseterminalmessage.Match(this.SCreditcardtransactionResponseterminalmessage).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SCreditcardtransactionResponseterminalmessage, must match a pattern of " + regexSCreditcardtransactionResponseterminalmessage, new [] { "SCreditcardtransactionResponseterminalmessage" });
                }
            }

            yield break;
        }
    }

}
