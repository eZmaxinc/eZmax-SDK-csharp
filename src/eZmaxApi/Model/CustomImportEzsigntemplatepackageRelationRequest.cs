/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// The object used in /1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsigntemplatepackage Request
    /// </summary>
    [DataContract(Name = "Custom-ImportEzsigntemplatepackageRelation-Request")]
    public partial class CustomImportEzsigntemplatepackageRelationRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomImportEzsigntemplatepackageRelationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomImportEzsigntemplatepackageRelationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomImportEzsigntemplatepackageRelationRequest" /> class.
        /// </summary>
        /// <param name="fkiEzsigntemplatepackagesignerID">The unique ID of the Ezsigntemplatepackagesigner.</param>
        /// <param name="fkiEzsignfoldersignerassociationID">The unique ID of the Ezsignfoldersignerassociation (required).</param>
        /// <param name="sEzsigntemplatepackagesignerDescription">The description of the Ezsigntemplatepackagesigner.</param>
        public CustomImportEzsigntemplatepackageRelationRequest(int fkiEzsigntemplatepackagesignerID = default(int), int fkiEzsignfoldersignerassociationID = default(int), string sEzsigntemplatepackagesignerDescription = default(string))
        {
            this.FkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
            this.FkiEzsigntemplatepackagesignerID = fkiEzsigntemplatepackagesignerID;
            this.SEzsigntemplatepackagesignerDescription = sEzsigntemplatepackagesignerDescription;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagesigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagesigner</value>
        /* <example>174</example>*/
        [DataMember(Name = "fkiEzsigntemplatepackagesignerID", EmitDefaultValue = false)]
        public int FkiEzsigntemplatepackagesignerID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignfoldersignerassociation
        /// </summary>
        /// <value>The unique ID of the Ezsignfoldersignerassociation</value>
        /* <example>20</example>*/
        [DataMember(Name = "fkiEzsignfoldersignerassociationID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsignfoldersignerassociationID { get; set; }

        /// <summary>
        /// The description of the Ezsigntemplatepackagesigner
        /// </summary>
        /// <value>The description of the Ezsigntemplatepackagesigner</value>
        /* <example>Customer</example>*/
        [DataMember(Name = "sEzsigntemplatepackagesignerDescription", EmitDefaultValue = false)]
        public string SEzsigntemplatepackagesignerDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomImportEzsigntemplatepackageRelationRequest {\n");
            sb.Append("  FkiEzsigntemplatepackagesignerID: ").Append(FkiEzsigntemplatepackagesignerID).Append("\n");
            sb.Append("  FkiEzsignfoldersignerassociationID: ").Append(FkiEzsignfoldersignerassociationID).Append("\n");
            sb.Append("  SEzsigntemplatepackagesignerDescription: ").Append(SEzsigntemplatepackagesignerDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FkiEzsigntemplatepackagesignerID (int) minimum
            if (this.FkiEzsigntemplatepackagesignerID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiEzsigntemplatepackagesignerID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackagesignerID" });
            }

            // FkiEzsignfoldersignerassociationID (int) minimum
            if (this.FkiEzsignfoldersignerassociationID < (int)0)
            {
                yield return new ValidationResult("Invalid value for FkiEzsignfoldersignerassociationID, must be a value greater than or equal to 0.", new [] { "FkiEzsignfoldersignerassociationID" });
            }

            yield break;
        }
    }

}
