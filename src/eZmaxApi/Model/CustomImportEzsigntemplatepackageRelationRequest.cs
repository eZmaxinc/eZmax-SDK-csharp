/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.15
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// The object used in /1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsigntemplatepackage Request
    /// </summary>
    [DataContract]
    public partial class CustomImportEzsigntemplatepackageRelationRequest :  IEquatable<CustomImportEzsigntemplatepackageRelationRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomImportEzsigntemplatepackageRelationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomImportEzsigntemplatepackageRelationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomImportEzsigntemplatepackageRelationRequest" /> class.
        /// </summary>
        /// <param name="fkiEzsigntemplatepackagesignerID">The unique ID of the Ezsigntemplatepackagesigner.</param>
        /// <param name="fkiEzsignfoldersignerassociationID">The unique ID of the Ezsignfoldersignerassociation (required).</param>
        /// <param name="sEzsigntemplatepackagesignerDescription">The description of the Ezsigntemplatepackagesigner.</param>
        public CustomImportEzsigntemplatepackageRelationRequest(int fkiEzsigntemplatepackagesignerID = default(int), int fkiEzsignfoldersignerassociationID = default(int), string sEzsigntemplatepackagesignerDescription = default(string))
        {
            // to ensure "fkiEzsignfoldersignerassociationID" is required (not null)
            if (fkiEzsignfoldersignerassociationID == null)
            {
                throw new InvalidDataException("fkiEzsignfoldersignerassociationID is a required property for CustomImportEzsigntemplatepackageRelationRequest and cannot be null");
            }
            else
            {
                this.FkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
            }

            this.FkiEzsigntemplatepackagesignerID = fkiEzsigntemplatepackagesignerID;
            this.SEzsigntemplatepackagesignerDescription = sEzsigntemplatepackagesignerDescription;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagesigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagesigner</value>
        [DataMember(Name="fkiEzsigntemplatepackagesignerID", EmitDefaultValue=false)]
        public int FkiEzsigntemplatepackagesignerID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignfoldersignerassociation
        /// </summary>
        /// <value>The unique ID of the Ezsignfoldersignerassociation</value>
        [DataMember(Name="fkiEzsignfoldersignerassociationID", EmitDefaultValue=true)]
        public int FkiEzsignfoldersignerassociationID { get; set; }

        /// <summary>
        /// The description of the Ezsigntemplatepackagesigner
        /// </summary>
        /// <value>The description of the Ezsigntemplatepackagesigner</value>
        [DataMember(Name="sEzsigntemplatepackagesignerDescription", EmitDefaultValue=false)]
        public string SEzsigntemplatepackagesignerDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomImportEzsigntemplatepackageRelationRequest {\n");
            sb.Append("  FkiEzsigntemplatepackagesignerID: ").Append(FkiEzsigntemplatepackagesignerID).Append("\n");
            sb.Append("  FkiEzsignfoldersignerassociationID: ").Append(FkiEzsignfoldersignerassociationID).Append("\n");
            sb.Append("  SEzsigntemplatepackagesignerDescription: ").Append(SEzsigntemplatepackagesignerDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomImportEzsigntemplatepackageRelationRequest);
        }

        /// <summary>
        /// Returns true if CustomImportEzsigntemplatepackageRelationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomImportEzsigntemplatepackageRelationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomImportEzsigntemplatepackageRelationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FkiEzsigntemplatepackagesignerID == input.FkiEzsigntemplatepackagesignerID ||
                    (this.FkiEzsigntemplatepackagesignerID != null &&
                    this.FkiEzsigntemplatepackagesignerID.Equals(input.FkiEzsigntemplatepackagesignerID))
                ) && 
                (
                    this.FkiEzsignfoldersignerassociationID == input.FkiEzsignfoldersignerassociationID ||
                    (this.FkiEzsignfoldersignerassociationID != null &&
                    this.FkiEzsignfoldersignerassociationID.Equals(input.FkiEzsignfoldersignerassociationID))
                ) && 
                (
                    this.SEzsigntemplatepackagesignerDescription == input.SEzsigntemplatepackagesignerDescription ||
                    (this.SEzsigntemplatepackagesignerDescription != null &&
                    this.SEzsigntemplatepackagesignerDescription.Equals(input.SEzsigntemplatepackagesignerDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FkiEzsigntemplatepackagesignerID != null)
                    hashCode = hashCode * 59 + this.FkiEzsigntemplatepackagesignerID.GetHashCode();
                if (this.FkiEzsignfoldersignerassociationID != null)
                    hashCode = hashCode * 59 + this.FkiEzsignfoldersignerassociationID.GetHashCode();
                if (this.SEzsigntemplatepackagesignerDescription != null)
                    hashCode = hashCode * 59 + this.SEzsigntemplatepackagesignerDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {


            // FkiEzsigntemplatepackagesignerID (int) minimum
            if(this.FkiEzsigntemplatepackagesignerID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatepackagesignerID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackagesignerID" });
            }



            // FkiEzsignfoldersignerassociationID (int) minimum
            if(this.FkiEzsignfoldersignerassociationID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignfoldersignerassociationID, must be a value greater than or equal to 0.", new [] { "FkiEzsignfoldersignerassociationID" });
            }

            yield break;
        }
    }

}
