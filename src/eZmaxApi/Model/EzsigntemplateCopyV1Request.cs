/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Request for POST /1/object/ezsigntemplate/{pkiEzsigntemplateID}/copy
    /// </summary>
    [DataContract(Name = "ezsigntemplate-copy-v1-Request")]
    public partial class EzsigntemplateCopyV1Request : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplateCopyV1Request" /> class.
        /// </summary>
        /// <param name="">.</param>
        /// <param name="">Whether we shall copy the Ezsigntemplate as a company Ezsigntemplate.</param>
        /// <param name="">Whether we shall copy the Ezsigntemplate as a user Ezsigntemplate.</param>
        public EzsigntemplateCopyV1Request(List<int>  = default(List<int>), bool  = default(bool), bool  = default(bool))
        {
            this.AFkiEzsignfoldertypeID = ;
            this.BCopyCompany = ;
            this.BCopyUser = ;
        }

        /// <summary>
        /// Gets or Sets AFkiEzsignfoldertypeID
        /// </summary>
        [DataMember(Name = "a_fkiEzsignfoldertypeID", EmitDefaultValue = false)]
        public List<int> AFkiEzsignfoldertypeID { get; set; }

        /// <summary>
        /// Whether we shall copy the Ezsigntemplate as a company Ezsigntemplate
        /// </summary>
        /// <value>Whether we shall copy the Ezsigntemplate as a company Ezsigntemplate</value>
        [DataMember(Name = "bCopyCompany", EmitDefaultValue = true)]
        public bool BCopyCompany { get; set; }

        /// <summary>
        /// Whether we shall copy the Ezsigntemplate as a user Ezsigntemplate
        /// </summary>
        /// <value>Whether we shall copy the Ezsigntemplate as a user Ezsigntemplate</value>
        [DataMember(Name = "bCopyUser", EmitDefaultValue = true)]
        public bool BCopyUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplateCopyV1Request {\n");
            sb.Append("  AFkiEzsignfoldertypeID: ").Append(AFkiEzsignfoldertypeID).Append("\n");
            sb.Append("  BCopyCompany: ").Append(BCopyCompany).Append("\n");
            sb.Append("  BCopyUser: ").Append(BCopyUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
