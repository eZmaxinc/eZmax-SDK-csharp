/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// The text validation
    /// </summary>
    /// <value>The text validation</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EnumTextvalidation
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum DateYYYYMMDD for value: Date (YYYY-MM-DD)
        /// </summary>
        [EnumMember(Value = "Date (YYYY-MM-DD)")]
        DateYYYYMMDD = 2,

        /// <summary>
        /// Enum DateMMDDYYYY for value: Date (MM/DD/YYYY)
        /// </summary>
        [EnumMember(Value = "Date (MM/DD/YYYY)")]
        DateMMDDYYYY = 3,

        /// <summary>
        /// Enum DateMMDDYY for value: Date (MM/DD/YY)
        /// </summary>
        [EnumMember(Value = "Date (MM/DD/YY)")]
        DateMMDDYY = 4,

        /// <summary>
        /// Enum DateDDMMYYYY for value: Date (DD/MM/YYYY)
        /// </summary>
        [EnumMember(Value = "Date (DD/MM/YYYY)")]
        DateDDMMYYYY = 5,

        /// <summary>
        /// Enum DateDDMMYY for value: Date (DD/MM/YY)
        /// </summary>
        [EnumMember(Value = "Date (DD/MM/YY)")]
        DateDDMMYY = 6,

        /// <summary>
        /// Enum Email for value: Email
        /// </summary>
        [EnumMember(Value = "Email")]
        Email = 7,

        /// <summary>
        /// Enum Letters for value: Letters
        /// </summary>
        [EnumMember(Value = "Letters")]
        Letters = 8,

        /// <summary>
        /// Enum Numbers for value: Numbers
        /// </summary>
        [EnumMember(Value = "Numbers")]
        Numbers = 9,

        /// <summary>
        /// Enum Zip for value: Zip
        /// </summary>
        [EnumMember(Value = "Zip")]
        Zip = 10,

        /// <summary>
        /// Enum Zip4 for value: Zip+4
        /// </summary>
        [EnumMember(Value = "Zip+4")]
        Zip4 = 11,

        /// <summary>
        /// Enum PostalCode for value: PostalCode
        /// </summary>
        [EnumMember(Value = "PostalCode")]
        PostalCode = 12,

        /// <summary>
        /// Enum Custom for value: Custom
        /// </summary>
        [EnumMember(Value = "Custom")]
        Custom = 13
    }

}
