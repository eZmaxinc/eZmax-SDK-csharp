/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Custom Attachment Object
    /// </summary>
    [DataContract(Name = "Custom-Attachment-Response")]
    public partial class CustomAttachmentResponse : AttachmentResponse, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomAttachmentResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomAttachmentResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomAttachmentResponse" /> class.
        /// </summary>
        /// <param name="objAttachmentProof">objAttachmentProof.</param>
        /// <param name="objAttachmentProofdocument">objAttachmentProofdocument.</param>
        /// <param name="aObjAttachmentAttachment">aObjAttachmentAttachment.</param>
        /// <param name="aObjAttachmentVersion">aObjAttachmentVersion.</param>
        /// <param name="pkiAttachmentID">The unique ID of the Attachment. (required).</param>
        /// <param name="fkiComputerID">The unique ID of the Computer.</param>
        /// <param name="fkiAdjustmentID">The unique ID of the Adjustment.</param>
        /// <param name="fkiAgentID">The unique ID of the Agent..</param>
        /// <param name="fkiBankaccountID">The unique ID of the Bankaccount.</param>
        /// <param name="fkiBrokerID">The unique ID of the Broker..</param>
        /// <param name="fkiCommissionadvanceID">The unique ID of the Commissionadvance.</param>
        /// <param name="fkiCommunicationID">The unique ID of the Communication..</param>
        /// <param name="fkiCustomerID">The unique ID of the Customer..</param>
        /// <param name="fkiCustomertemplateID">The unique ID of the Customertemplate.</param>
        /// <param name="fkiDepositID">The unique ID of the Deposit.</param>
        /// <param name="fkiDeposittransitchequeID">The unique ID of the Deposittransitcheque.</param>
        /// <param name="fkiElectronicfundstransferID">The unique ID of the Electronicfundstransfer.</param>
        /// <param name="fkiEmployeeID">The unique ID of the Employee..</param>
        /// <param name="fkiExternalbrokerID">The unique ID of the Externalbroker..</param>
        /// <param name="fkiEzcomadvanceserverID">The unique ID of the Ezcomadvanceserver.</param>
        /// <param name="fkiEzcomcompanyID">The unique ID of the Ezcomcompany.</param>
        /// <param name="fkiEzsigndocumentID">The unique ID of the Ezsigndocument.</param>
        /// <param name="fkiGhacqcontractID">The unique ID of the Ghacqcontract.</param>
        /// <param name="fkiInscriptionID">The unique ID of the Inscription..</param>
        /// <param name="fkiInscriptiontempID">The unique ID of the Inscriptiontemp.</param>
        /// <param name="fkiInscriptionnotauthenticatedID">The unique ID of the Inscriptionnotauthenticated..</param>
        /// <param name="fkiInvoiceID">The unique ID of the Invoice..</param>
        /// <param name="fkiBuyercontractID">The unique ID of the Buyercontract.</param>
        /// <param name="fkiFranchisebrokerID">The unique ID of the Franchisebroker.</param>
        /// <param name="fkiFranchiseagenceID">The unique ID of the Franchiseagence.</param>
        /// <param name="fkiFranchiseofficeID">The unique ID of the Franchisereoffice.</param>
        /// <param name="fkiFranchisefranchiseID">The unique ID of the Franchisefranchise.</param>
        /// <param name="fkiFranchisecomplaintID">The unique ID of the Franchisecomplaint.</param>
        /// <param name="fkiLeadID">The unique ID of the Lead.</param>
        /// <param name="fkiMarketingprogramID">The unique ID of the Marketingprogram.</param>
        /// <param name="fkiMarketingfollowID">The unique ID of the Marketingfollow.</param>
        /// <param name="fkiNotaryID">The unique ID of the Notary..</param>
        /// <param name="fkiOfficetaxreportID">The unique ID of the Officetaxreport.</param>
        /// <param name="fkiOtherincomeID">The unique ID of the Otherincome.</param>
        /// <param name="fkiPaymentpreparationID">The unique ID of the Paymentpreparation.</param>
        /// <param name="fkiPurchaseID">The unique ID of the Purchase.</param>
        /// <param name="fkiSalaryID">The unique ID of the Salary.</param>
        /// <param name="fkiSupplierID">The unique ID of the Supplier..</param>
        /// <param name="fkiTranqcontractID">The unique ID of the Tranqcontract.</param>
        /// <param name="fkiTemplateID">The unique ID of the Template.</param>
        /// <param name="fkiInscriptionchecklistID">The unique ID of the Inscriptionchecklist.</param>
        /// <param name="fkiFolderID">The unique ID of the Folder.</param>
        /// <param name="fkiRejectedoffertopurchaseID">The unique ID of the Rejectedoffertopurchase.</param>
        /// <param name="fkiDisclosureID">The unique ID of the Disclosure.</param>
        /// <param name="fkiReconciliationID">The unique ID of the Reconciliation.</param>
        /// <param name="fkiEzsigndocumentIDReference">The unique ID of the Ezsigndocument.</param>
        /// <param name="eAttachmentDocumenttype">eAttachmentDocumenttype (required).</param>
        /// <param name="sAttachmentName">The name of the Attachment (required).</param>
        /// <param name="eAttachmentPrivacy">eAttachmentPrivacy (required).</param>
        /// <param name="fkiUserIDSpecific">The unique ID of the User.</param>
        /// <param name="eAttachmentType">eAttachmentType (required).</param>
        /// <param name="iAttachmentSize">The size of the Attachment (required).</param>
        /// <param name="iAttachmentEDMmoduleflag">The edmmoduleflag of the Attachment.</param>
        /// <param name="sAttachmentMD5">The md5 of the Attachment (required).</param>
        /// <param name="bAttachmentDeleted">Whether if it&#39;s deleted (required).</param>
        /// <param name="bAttachmentValid">Whether if it&#39;s valid (required).</param>
        /// <param name="eAttachmentVerified">eAttachmentVerified (required).</param>
        /// <param name="tAttachmentRejectioncomment">The rejectioncomment of the Attachment.</param>
        /// <param name="fkiUserIDOwner">The unique ID of the User.</param>
        /// <param name="objAudit">objAudit.</param>
        public CustomAttachmentResponse(AttachmentResponseCompound objAttachmentProof = default(AttachmentResponseCompound), AttachmentResponseCompound objAttachmentProofdocument = default(AttachmentResponseCompound), List<AttachmentResponseCompound> aObjAttachmentAttachment = default(List<AttachmentResponseCompound>), List<AttachmentResponseCompound> aObjAttachmentVersion = default(List<AttachmentResponseCompound>), int pkiAttachmentID = default(int), int fkiComputerID = default(int), int fkiAdjustmentID = default(int), int fkiAgentID = default(int), int fkiBankaccountID = default(int), int fkiBrokerID = default(int), int fkiCommissionadvanceID = default(int), int fkiCommunicationID = default(int), int fkiCustomerID = default(int), int fkiCustomertemplateID = default(int), int fkiDepositID = default(int), int fkiDeposittransitchequeID = default(int), int fkiElectronicfundstransferID = default(int), int fkiEmployeeID = default(int), int fkiExternalbrokerID = default(int), int fkiEzcomadvanceserverID = default(int), int fkiEzcomcompanyID = default(int), int fkiEzsigndocumentID = default(int), int fkiGhacqcontractID = default(int), int fkiInscriptionID = default(int), int fkiInscriptiontempID = default(int), int fkiInscriptionnotauthenticatedID = default(int), int fkiInvoiceID = default(int), int fkiBuyercontractID = default(int), int fkiFranchisebrokerID = default(int), int fkiFranchiseagenceID = default(int), int fkiFranchiseofficeID = default(int), int fkiFranchisefranchiseID = default(int), int fkiFranchisecomplaintID = default(int), int fkiLeadID = default(int), int fkiMarketingprogramID = default(int), int fkiMarketingfollowID = default(int), int fkiNotaryID = default(int), int fkiOfficetaxreportID = default(int), int fkiOtherincomeID = default(int), int fkiPaymentpreparationID = default(int), int fkiPurchaseID = default(int), int fkiSalaryID = default(int), int fkiSupplierID = default(int), int fkiTranqcontractID = default(int), int fkiTemplateID = default(int), int fkiInscriptionchecklistID = default(int), int fkiFolderID = default(int), int fkiRejectedoffertopurchaseID = default(int), int fkiDisclosureID = default(int), int fkiReconciliationID = default(int), int fkiEzsigndocumentIDReference = default(int), FieldEAttachmentDocumenttype eAttachmentDocumenttype = default(FieldEAttachmentDocumenttype), string sAttachmentName = default(string), FieldEAttachmentPrivacy eAttachmentPrivacy = default(FieldEAttachmentPrivacy), int fkiUserIDSpecific = default(int), FieldEAttachmentType eAttachmentType = default(FieldEAttachmentType), int iAttachmentSize = default(int), int iAttachmentEDMmoduleflag = default(int), string sAttachmentMD5 = default(string), bool bAttachmentDeleted = default(bool), bool bAttachmentValid = default(bool), FieldEAttachmentVerified eAttachmentVerified = default(FieldEAttachmentVerified), string tAttachmentRejectioncomment = default(string), int fkiUserIDOwner = default(int), CommonAudit objAudit = default(CommonAudit)) : base()
        {
            this.ObjAttachmentProof = objAttachmentProof;
            this.ObjAttachmentProofdocument = objAttachmentProofdocument;
            this.AObjAttachmentAttachment = aObjAttachmentAttachment;
            this.AObjAttachmentVersion = aObjAttachmentVersion;
        }

        /// <summary>
        /// Gets or Sets ObjAttachmentProof
        /// </summary>
        [DataMember(Name = "objAttachmentProof", EmitDefaultValue = false)]
        public AttachmentResponseCompound ObjAttachmentProof { get; set; }

        /// <summary>
        /// Gets or Sets ObjAttachmentProofdocument
        /// </summary>
        [DataMember(Name = "objAttachmentProofdocument", EmitDefaultValue = false)]
        public AttachmentResponseCompound ObjAttachmentProofdocument { get; set; }

        /// <summary>
        /// Gets or Sets AObjAttachmentAttachment
        /// </summary>
        [DataMember(Name = "a_objAttachmentAttachment", EmitDefaultValue = false)]
        public List<AttachmentResponseCompound> AObjAttachmentAttachment { get; set; }

        /// <summary>
        /// Gets or Sets AObjAttachmentVersion
        /// </summary>
        [DataMember(Name = "a_objAttachmentVersion", EmitDefaultValue = false)]
        public List<AttachmentResponseCompound> AObjAttachmentVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomAttachmentResponse {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  ObjAttachmentProof: ").Append(ObjAttachmentProof).Append("\n");
            sb.Append("  ObjAttachmentProofdocument: ").Append(ObjAttachmentProofdocument).Append("\n");
            sb.Append("  AObjAttachmentAttachment: ").Append(AObjAttachmentAttachment).Append("\n");
            sb.Append("  AObjAttachmentVersion: ").Append(AObjAttachmentVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
