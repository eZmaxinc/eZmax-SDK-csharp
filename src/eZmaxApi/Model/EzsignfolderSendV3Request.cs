/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Request for POST /3/object/ezsignfolder/{pkiEzsignfolderID}/send
    /// </summary>
    [DataContract(Name = "ezsignfolder-send-v3-Request")]
    public partial class EzsignfolderSendV3Request : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets EEzsignfolderMessageorder
        /// </summary>
        [DataMember(Name = "eEzsignfolderMessageorder", EmitDefaultValue = false)]
        public FieldEEzsignfolderMessageorder? EEzsignfolderMessageorder { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfolderSendV3Request" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignfolderSendV3Request() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignfolderSendV3Request" /> class.
        /// </summary>
        /// <param name="">A custom text message that will be added to the email sent..</param>
        /// <param name="">.</param>
        /// <param name="">The date and time at which the Ezsignfolder will be sent in the future..</param>
        /// <param name=""> (required).</param>
        public EzsignfolderSendV3Request(string  = default(string), FieldEEzsignfolderMessageorder?  = default(FieldEEzsignfolderMessageorder?), string  = default(string), List<int>  = default(List<int>))
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for EzsignfolderSendV3Request and cannot be null");
            }
            this.AFkiEzsignfoldersignerassociationID = ;
            this.TEzsignfolderMessage = ;
            this.EEzsignfolderMessageorder = ;
            this.DtEzsignfolderDelayedsenddate = ;
        }

        /// <summary>
        /// A custom text message that will be added to the email sent.
        /// </summary>
        /// <value>A custom text message that will be added to the email sent.</value>
        /* <example>Hi everyone,

This is the document I need you to review.

Could you sign it before Monday please.

Best Regards.

Mary</example>*/
        [DataMember(Name = "tEzsignfolderMessage", EmitDefaultValue = false)]
        public string TEzsignfolderMessage { get; set; }

        /// <summary>
        /// The date and time at which the Ezsignfolder will be sent in the future.
        /// </summary>
        /// <value>The date and time at which the Ezsignfolder will be sent in the future.</value>
        /* <example>2020-12-31T23:59:59.000Z</example>*/
        [DataMember(Name = "dtEzsignfolderDelayedsenddate", EmitDefaultValue = false)]
        public string DtEzsignfolderDelayedsenddate { get; set; }

        /// <summary>
        /// Gets or Sets AFkiEzsignfoldersignerassociationID
        /// </summary>
        [DataMember(Name = "a_fkiEzsignfoldersignerassociationID", IsRequired = true, EmitDefaultValue = true)]
        public List<int> AFkiEzsignfoldersignerassociationID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignfolderSendV3Request {\n");
            sb.Append("  TEzsignfolderMessage: ").Append(TEzsignfolderMessage).Append("\n");
            sb.Append("  EEzsignfolderMessageorder: ").Append(EEzsignfolderMessageorder).Append("\n");
            sb.Append("  DtEzsignfolderDelayedsenddate: ").Append(DtEzsignfolderDelayedsenddate).Append("\n");
            sb.Append("  AFkiEzsignfoldersignerassociationID: ").Append(AFkiEzsignfoldersignerassociationID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
