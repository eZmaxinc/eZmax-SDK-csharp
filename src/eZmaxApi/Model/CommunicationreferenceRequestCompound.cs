/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Communicationreference Object and children
    /// </summary>
    [DataContract(Name = "communicationreference-RequestCompound")]
    public partial class CommunicationreferenceRequestCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationreferenceRequestCompound" /> class.
        /// </summary>
        /// <param name="pkiCommunicationreferenceID">The unique ID of the Communicationreference.</param>
        /// <param name="fkiBuyercontractID">The unique ID of the Buyercontract.</param>
        /// <param name="fkiEzsignfolderID">The unique ID of the Ezsignfolder.</param>
        /// <param name="fkiInscriptionID">The unique ID of the Inscription..</param>
        /// <param name="fkiInscriptiontempID">The unique ID of the Inscriptiontemp.</param>
        /// <param name="fkiInvoiceID">The unique ID of the Invoice..</param>
        /// <param name="fkiOtherincomeID">The unique ID of the Otherincome.</param>
        /// <param name="fkiElectronicfundstransferID">The unique ID of the Electronicfundstransfer.</param>
        /// <param name="fkiRejectedoffertopurchaseID">The unique ID of the Rejectedoffertopurchase.</param>
        public CommunicationreferenceRequestCompound(int pkiCommunicationreferenceID = default(int), int fkiBuyercontractID = default(int), int fkiEzsignfolderID = default(int), int fkiInscriptionID = default(int), int fkiInscriptiontempID = default(int), int fkiInvoiceID = default(int), int fkiOtherincomeID = default(int), int fkiElectronicfundstransferID = default(int), int fkiRejectedoffertopurchaseID = default(int))
        {
            this.PkiCommunicationreferenceID = pkiCommunicationreferenceID;
            this.FkiBuyercontractID = fkiBuyercontractID;
            this.FkiEzsignfolderID = fkiEzsignfolderID;
            this.FkiInscriptionID = fkiInscriptionID;
            this.FkiInscriptiontempID = fkiInscriptiontempID;
            this.FkiInvoiceID = fkiInvoiceID;
            this.FkiOtherincomeID = fkiOtherincomeID;
            this.FkiElectronicfundstransferID = fkiElectronicfundstransferID;
            this.FkiRejectedoffertopurchaseID = fkiRejectedoffertopurchaseID;
        }

        /// <summary>
        /// The unique ID of the Communicationreference
        /// </summary>
        /// <value>The unique ID of the Communicationreference</value>
        /* <example>1263</example>*/
        [DataMember(Name = "pkiCommunicationreferenceID", EmitDefaultValue = false)]
        public int PkiCommunicationreferenceID { get; set; }

        /// <summary>
        /// The unique ID of the Buyercontract
        /// </summary>
        /// <value>The unique ID of the Buyercontract</value>
        /* <example>38</example>*/
        [DataMember(Name = "fkiBuyercontractID", EmitDefaultValue = false)]
        public int FkiBuyercontractID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignfolder
        /// </summary>
        /// <value>The unique ID of the Ezsignfolder</value>
        /* <example>33</example>*/
        [DataMember(Name = "fkiEzsignfolderID", EmitDefaultValue = false)]
        public int FkiEzsignfolderID { get; set; }

        /// <summary>
        /// The unique ID of the Inscription.
        /// </summary>
        /// <value>The unique ID of the Inscription.</value>
        /* <example>17</example>*/
        [DataMember(Name = "fkiInscriptionID", EmitDefaultValue = false)]
        public int FkiInscriptionID { get; set; }

        /// <summary>
        /// The unique ID of the Inscriptiontemp
        /// </summary>
        /// <value>The unique ID of the Inscriptiontemp</value>
        /* <example>2445</example>*/
        [DataMember(Name = "fkiInscriptiontempID", EmitDefaultValue = false)]
        public int FkiInscriptiontempID { get; set; }

        /// <summary>
        /// The unique ID of the Invoice.
        /// </summary>
        /// <value>The unique ID of the Invoice.</value>
        /* <example>1</example>*/
        [DataMember(Name = "fkiInvoiceID", EmitDefaultValue = false)]
        public int FkiInvoiceID { get; set; }

        /// <summary>
        /// The unique ID of the Otherincome
        /// </summary>
        /// <value>The unique ID of the Otherincome</value>
        /* <example>142</example>*/
        [DataMember(Name = "fkiOtherincomeID", EmitDefaultValue = false)]
        public int FkiOtherincomeID { get; set; }

        /// <summary>
        /// The unique ID of the Electronicfundstransfer
        /// </summary>
        /// <value>The unique ID of the Electronicfundstransfer</value>
        /* <example>1262</example>*/
        [DataMember(Name = "fkiElectronicfundstransferID", EmitDefaultValue = false)]
        public int FkiElectronicfundstransferID { get; set; }

        /// <summary>
        /// The unique ID of the Rejectedoffertopurchase
        /// </summary>
        /// <value>The unique ID of the Rejectedoffertopurchase</value>
        /* <example>532</example>*/
        [DataMember(Name = "fkiRejectedoffertopurchaseID", EmitDefaultValue = false)]
        public int FkiRejectedoffertopurchaseID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommunicationreferenceRequestCompound {\n");
            sb.Append("  PkiCommunicationreferenceID: ").Append(PkiCommunicationreferenceID).Append("\n");
            sb.Append("  FkiBuyercontractID: ").Append(FkiBuyercontractID).Append("\n");
            sb.Append("  FkiEzsignfolderID: ").Append(FkiEzsignfolderID).Append("\n");
            sb.Append("  FkiInscriptionID: ").Append(FkiInscriptionID).Append("\n");
            sb.Append("  FkiInscriptiontempID: ").Append(FkiInscriptiontempID).Append("\n");
            sb.Append("  FkiInvoiceID: ").Append(FkiInvoiceID).Append("\n");
            sb.Append("  FkiOtherincomeID: ").Append(FkiOtherincomeID).Append("\n");
            sb.Append("  FkiElectronicfundstransferID: ").Append(FkiElectronicfundstransferID).Append("\n");
            sb.Append("  FkiRejectedoffertopurchaseID: ").Append(FkiRejectedoffertopurchaseID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiCommunicationreferenceID (int) maximum
            if (this.PkiCommunicationreferenceID > (int)4294967295)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiCommunicationreferenceID, must be a value less than or equal to 4294967295.", new [] { "PkiCommunicationreferenceID" });
            }

            // PkiCommunicationreferenceID (int) minimum
            if (this.PkiCommunicationreferenceID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiCommunicationreferenceID, must be a value greater than or equal to 0.", new [] { "PkiCommunicationreferenceID" });
            }

            // FkiBuyercontractID (int) maximum
            if (this.FkiBuyercontractID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBuyercontractID, must be a value less than or equal to 65535.", new [] { "FkiBuyercontractID" });
            }

            // FkiBuyercontractID (int) minimum
            if (this.FkiBuyercontractID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiBuyercontractID, must be a value greater than or equal to 1.", new [] { "FkiBuyercontractID" });
            }

            // FkiEzsignfolderID (int) minimum
            if (this.FkiEzsignfolderID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignfolderID, must be a value greater than or equal to 0.", new [] { "FkiEzsignfolderID" });
            }

            // FkiInscriptionID (int) minimum
            if (this.FkiInscriptionID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInscriptionID, must be a value greater than or equal to 0.", new [] { "FkiInscriptionID" });
            }

            // FkiInscriptiontempID (int) maximum
            if (this.FkiInscriptiontempID > (int)16777215)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInscriptiontempID, must be a value less than or equal to 16777215.", new [] { "FkiInscriptiontempID" });
            }

            // FkiInscriptiontempID (int) minimum
            if (this.FkiInscriptiontempID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInscriptiontempID, must be a value greater than or equal to 1.", new [] { "FkiInscriptiontempID" });
            }

            // FkiInvoiceID (int) minimum
            if (this.FkiInvoiceID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiInvoiceID, must be a value greater than or equal to 0.", new [] { "FkiInvoiceID" });
            }

            // FkiOtherincomeID (int) maximum
            if (this.FkiOtherincomeID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiOtherincomeID, must be a value less than or equal to 65535.", new [] { "FkiOtherincomeID" });
            }

            // FkiOtherincomeID (int) minimum
            if (this.FkiOtherincomeID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiOtherincomeID, must be a value greater than or equal to 1.", new [] { "FkiOtherincomeID" });
            }

            // FkiElectronicfundstransferID (int) maximum
            if (this.FkiElectronicfundstransferID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiElectronicfundstransferID, must be a value less than or equal to 65535.", new [] { "FkiElectronicfundstransferID" });
            }

            // FkiElectronicfundstransferID (int) minimum
            if (this.FkiElectronicfundstransferID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiElectronicfundstransferID, must be a value greater than or equal to 1.", new [] { "FkiElectronicfundstransferID" });
            }

            // FkiRejectedoffertopurchaseID (int) maximum
            if (this.FkiRejectedoffertopurchaseID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiRejectedoffertopurchaseID, must be a value less than or equal to 65535.", new [] { "FkiRejectedoffertopurchaseID" });
            }

            // FkiRejectedoffertopurchaseID (int) minimum
            if (this.FkiRejectedoffertopurchaseID < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiRejectedoffertopurchaseID, must be a value greater than or equal to 1.", new [] { "FkiRejectedoffertopurchaseID" });
            }

            yield break;
        }
    }

}
