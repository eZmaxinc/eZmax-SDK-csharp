/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Response for GET /1/ezmaxcustomer/{pksEzmaxcustomerCode}/getConfiguration
    /// </summary>
    [DataContract(Name = "global-ezmaxcustomer-getConfiguration-v1-Response")]
    public partial class GlobalEzmaxcustomerGetConfigurationV1Response : IEquatable<GlobalEzmaxcustomerGetConfigurationV1Response>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GlobalEzmaxcustomerGetConfigurationV1Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GlobalEzmaxcustomerGetConfigurationV1Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GlobalEzmaxcustomerGetConfigurationV1Response" /> class.
        /// </summary>
        /// <param name="sInfrastructureregionCode">The region code (required).</param>
        /// <param name="sInfrastructureregionCodeWeb">The region code (required).</param>
        /// <param name="sInfrastructureenvironmenttypeDescription">The environment type Description (required).</param>
        /// <param name="sCognitoClientIDExternal">The ID of the client in Cognito.</param>
        /// <param name="sCognitoClientIDEzmaxpublic">The ID of the client in Cognito (required).</param>
        public GlobalEzmaxcustomerGetConfigurationV1Response(string sInfrastructureregionCode = default(string), string sInfrastructureregionCodeWeb = default(string), string sInfrastructureenvironmenttypeDescription = default(string), string sCognitoClientIDExternal = default(string), string sCognitoClientIDEzmaxpublic = default(string))
        {
            // to ensure "sInfrastructureregionCode" is required (not null)
            if (sInfrastructureregionCode == null)
            {
                throw new ArgumentNullException("sInfrastructureregionCode is a required property for GlobalEzmaxcustomerGetConfigurationV1Response and cannot be null");
            }
            this.SInfrastructureregionCode = sInfrastructureregionCode;
            // to ensure "sInfrastructureregionCodeWeb" is required (not null)
            if (sInfrastructureregionCodeWeb == null)
            {
                throw new ArgumentNullException("sInfrastructureregionCodeWeb is a required property for GlobalEzmaxcustomerGetConfigurationV1Response and cannot be null");
            }
            this.SInfrastructureregionCodeWeb = sInfrastructureregionCodeWeb;
            // to ensure "sInfrastructureenvironmenttypeDescription" is required (not null)
            if (sInfrastructureenvironmenttypeDescription == null)
            {
                throw new ArgumentNullException("sInfrastructureenvironmenttypeDescription is a required property for GlobalEzmaxcustomerGetConfigurationV1Response and cannot be null");
            }
            this.SInfrastructureenvironmenttypeDescription = sInfrastructureenvironmenttypeDescription;
            // to ensure "sCognitoClientIDEzmaxpublic" is required (not null)
            if (sCognitoClientIDEzmaxpublic == null)
            {
                throw new ArgumentNullException("sCognitoClientIDEzmaxpublic is a required property for GlobalEzmaxcustomerGetConfigurationV1Response and cannot be null");
            }
            this.SCognitoClientIDEzmaxpublic = sCognitoClientIDEzmaxpublic;
            this.SCognitoClientIDExternal = sCognitoClientIDExternal;
        }

        /// <summary>
        /// The region code
        /// </summary>
        /// <value>The region code</value>
        </example> }}
		/* <example>ca-central-1</example>*/
        [DataMember(Name = "sInfrastructureregionCode", IsRequired = true, EmitDefaultValue = true)]
        public string SInfrastructureregionCode { get; set; }

        /// <summary>
        /// The region code
        /// </summary>
        /// <value>The region code</value>
        </example> }}
		/* <example>ca-central-1</example>*/
        [DataMember(Name = "sInfrastructureregionCodeWeb", IsRequired = true, EmitDefaultValue = true)]
        public string SInfrastructureregionCodeWeb { get; set; }

        /// <summary>
        /// The environment type Description
        /// </summary>
        /// <value>The environment type Description</value>
        </example> }}
		/* <example>prod</example>*/
        [DataMember(Name = "sInfrastructureenvironmenttypeDescription", IsRequired = true, EmitDefaultValue = true)]
        public string SInfrastructureenvironmenttypeDescription { get; set; }

        /// <summary>
        /// The ID of the client in Cognito
        /// </summary>
        /// <value>The ID of the client in Cognito</value>
        </example> }}
		/* <example>6kivk421lhteuktijfsvv4r1cl</example>*/
        [DataMember(Name = "sCognitoClientIDExternal", EmitDefaultValue = false)]
        public string SCognitoClientIDExternal { get; set; }

        /// <summary>
        /// The ID of the client in Cognito
        /// </summary>
        /// <value>The ID of the client in Cognito</value>
        </example> }}
		/* <example>6kivk421lhteuktijfsvv4r1cl</example>*/
        [DataMember(Name = "sCognitoClientIDEzmaxpublic", IsRequired = true, EmitDefaultValue = true)]
        public string SCognitoClientIDEzmaxpublic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GlobalEzmaxcustomerGetConfigurationV1Response {\n");
            sb.Append("  SInfrastructureregionCode: ").Append(SInfrastructureregionCode).Append("\n");
            sb.Append("  SInfrastructureregionCodeWeb: ").Append(SInfrastructureregionCodeWeb).Append("\n");
            sb.Append("  SInfrastructureenvironmenttypeDescription: ").Append(SInfrastructureenvironmenttypeDescription).Append("\n");
            sb.Append("  SCognitoClientIDExternal: ").Append(SCognitoClientIDExternal).Append("\n");
            sb.Append("  SCognitoClientIDEzmaxpublic: ").Append(SCognitoClientIDEzmaxpublic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GlobalEzmaxcustomerGetConfigurationV1Response);
        }

        /// <summary>
        /// Returns true if GlobalEzmaxcustomerGetConfigurationV1Response instances are equal
        /// </summary>
        /// <param name="input">Instance of GlobalEzmaxcustomerGetConfigurationV1Response to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlobalEzmaxcustomerGetConfigurationV1Response input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SInfrastructureregionCode == input.SInfrastructureregionCode ||
                    (this.SInfrastructureregionCode != null &&
                    this.SInfrastructureregionCode.Equals(input.SInfrastructureregionCode))
                ) && 
                (
                    this.SInfrastructureregionCodeWeb == input.SInfrastructureregionCodeWeb ||
                    (this.SInfrastructureregionCodeWeb != null &&
                    this.SInfrastructureregionCodeWeb.Equals(input.SInfrastructureregionCodeWeb))
                ) && 
                (
                    this.SInfrastructureenvironmenttypeDescription == input.SInfrastructureenvironmenttypeDescription ||
                    (this.SInfrastructureenvironmenttypeDescription != null &&
                    this.SInfrastructureenvironmenttypeDescription.Equals(input.SInfrastructureenvironmenttypeDescription))
                ) && 
                (
                    this.SCognitoClientIDExternal == input.SCognitoClientIDExternal ||
                    (this.SCognitoClientIDExternal != null &&
                    this.SCognitoClientIDExternal.Equals(input.SCognitoClientIDExternal))
                ) && 
                (
                    this.SCognitoClientIDEzmaxpublic == input.SCognitoClientIDEzmaxpublic ||
                    (this.SCognitoClientIDEzmaxpublic != null &&
                    this.SCognitoClientIDEzmaxpublic.Equals(input.SCognitoClientIDEzmaxpublic))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SInfrastructureregionCode != null)
                {
                    hashCode = (hashCode * 59) + this.SInfrastructureregionCode.GetHashCode();
                }
                if (this.SInfrastructureregionCodeWeb != null)
                {
                    hashCode = (hashCode * 59) + this.SInfrastructureregionCodeWeb.GetHashCode();
                }
                if (this.SInfrastructureenvironmenttypeDescription != null)
                {
                    hashCode = (hashCode * 59) + this.SInfrastructureenvironmenttypeDescription.GetHashCode();
                }
                if (this.SCognitoClientIDExternal != null)
                {
                    hashCode = (hashCode * 59) + this.SCognitoClientIDExternal.GetHashCode();
                }
                if (this.SCognitoClientIDEzmaxpublic != null)
                {
                    hashCode = (hashCode * 59) + this.SCognitoClientIDEzmaxpublic.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
