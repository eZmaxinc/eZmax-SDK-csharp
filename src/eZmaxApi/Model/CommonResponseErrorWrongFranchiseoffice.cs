/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Error Message when a Franchisebroker is not in this Franchiseoffice.
    /// </summary>
    [DataContract(Name = "Common-Response-Error-WrongFranchiseoffice")]
    public partial class CommonResponseErrorWrongFranchiseoffice : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets EErrorCode
        /// </summary>
        [DataMember(Name = "eErrorCode", IsRequired = true, EmitDefaultValue = true)]
        public FieldEErrorCode EErrorCode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonResponseErrorWrongFranchiseoffice" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommonResponseErrorWrongFranchiseoffice() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonResponseErrorWrongFranchiseoffice" /> class.
        /// </summary>
        /// <param name="">The message giving details about the error (required).</param>
        /// <param name=""> (required).</param>
        /// <param name="">More error message detail.</param>
        /// <param name="">The unique ID of the Franchiseagence (required).</param>
        /// <param name="">The name of the Franchiseagence (required).</param>
        /// <param name="">The unique ID of the Franchisereoffice (required).</param>
        /// <param name="">The code of the Franchiseoffice (required).</param>
        public CommonResponseErrorWrongFranchiseoffice(string  = default(string), FieldEErrorCode  = default(FieldEErrorCode), List<string>  = default(List<string>), int  = default(int), string  = default(string), int  = default(int), string  = default(string))
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CommonResponseErrorWrongFranchiseoffice and cannot be null");
            }
            this.SErrorMessage = ;
            this.EErrorCode = ;
            this.FkiFranchiseagenceID = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CommonResponseErrorWrongFranchiseoffice and cannot be null");
            }
            this.SFranchiseagenceName = ;
            this.FkiFranchiseofficeID = ;
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new ArgumentNullException(" is a required property for CommonResponseErrorWrongFranchiseoffice and cannot be null");
            }
            this.IFranchiseofficeCode = ;
            this.ASErrorMessagedetail = ;
        }

        /// <summary>
        /// The message giving details about the error
        /// </summary>
        /// <value>The message giving details about the error</value>
        /* <example>Invalid Signature Headers</example>*/
        [DataMember(Name = "sErrorMessage", IsRequired = true, EmitDefaultValue = true)]
        public string SErrorMessage { get; set; }

        /// <summary>
        /// More error message detail
        /// </summary>
        /// <value>More error message detail</value>
        [DataMember(Name = "a_sErrorMessagedetail", EmitDefaultValue = false)]
        public List<string> ASErrorMessagedetail { get; set; }

        /// <summary>
        /// The unique ID of the Franchiseagence
        /// </summary>
        /// <value>The unique ID of the Franchiseagence</value>
        /* <example>117</example>*/
        [DataMember(Name = "fkiFranchiseagenceID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiFranchiseagenceID { get; set; }

        /// <summary>
        /// The name of the Franchiseagence
        /// </summary>
        /// <value>The name of the Franchiseagence</value>
        /* <example>Default</example>*/
        [DataMember(Name = "sFranchiseagenceName", IsRequired = true, EmitDefaultValue = true)]
        public string SFranchiseagenceName { get; set; }

        /// <summary>
        /// The unique ID of the Franchisereoffice
        /// </summary>
        /// <value>The unique ID of the Franchisereoffice</value>
        /* <example>50</example>*/
        [DataMember(Name = "fkiFranchiseofficeID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiFranchiseofficeID { get; set; }

        /// <summary>
        /// The code of the Franchiseoffice
        /// </summary>
        /// <value>The code of the Franchiseoffice</value>
        /* <example>Default</example>*/
        [DataMember(Name = "iFranchiseofficeCode", IsRequired = true, EmitDefaultValue = true)]
        public string IFranchiseofficeCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommonResponseErrorWrongFranchiseoffice {\n");
            sb.Append("  SErrorMessage: ").Append(SErrorMessage).Append("\n");
            sb.Append("  EErrorCode: ").Append(EErrorCode).Append("\n");
            sb.Append("  ASErrorMessagedetail: ").Append(ASErrorMessagedetail).Append("\n");
            sb.Append("  FkiFranchiseagenceID: ").Append(FkiFranchiseagenceID).Append("\n");
            sb.Append("  SFranchiseagenceName: ").Append(SFranchiseagenceName).Append("\n");
            sb.Append("  FkiFranchiseofficeID: ").Append(FkiFranchiseofficeID).Append("\n");
            sb.Append("  IFranchiseofficeCode: ").Append(IFranchiseofficeCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.SErrorMessage != null) {
                // SErrorMessage (string) pattern
                Regex regexSErrorMessage = new Regex(@"^.{0,500}$", RegexOptions.CultureInvariant);
                if (!regexSErrorMessage.Match(this.SErrorMessage).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SErrorMessage, must match a pattern of " + regexSErrorMessage, new [] { "SErrorMessage" });
                }
            }

            // FkiFranchiseagenceID (int) maximum
            if (this.FkiFranchiseagenceID > (int)65535)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchiseagenceID, must be a value less than or equal to 65535.", new [] { "FkiFranchiseagenceID" });
            }

            // FkiFranchiseagenceID (int) minimum
            if (this.FkiFranchiseagenceID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchiseagenceID, must be a value greater than or equal to 0.", new [] { "FkiFranchiseagenceID" });
            }

            // FkiFranchiseofficeID (int) minimum
            if (this.FkiFranchiseofficeID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiFranchiseofficeID, must be a value greater than or equal to 0.", new [] { "FkiFranchiseofficeID" });
            }

            yield break;
        }
    }

}
