/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Subsection in a Reportsection. It contains 3 Reportsubsectionparts (Header, Body and Footer) 
    /// </summary>
    [DataContract(Name = "Common-Reportsubsection")]
    public partial class CommonReportsubsection : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonReportsubsection" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommonReportsubsection() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonReportsubsection" /> class.
        /// </summary>
        /// <param name="objReportsubsectionpartHeader">objReportsubsectionpartHeader (required).</param>
        /// <param name="objReportsubsectionpartBody">objReportsubsectionpartBody (required).</param>
        /// <param name="objReportsubsectionpartFooter">objReportsubsectionpartFooter (required).</param>
        public CommonReportsubsection(CommonReportsubsectionpart objReportsubsectionpartHeader = default(CommonReportsubsectionpart), CommonReportsubsectionpart objReportsubsectionpartBody = default(CommonReportsubsectionpart), CommonReportsubsectionpart objReportsubsectionpartFooter = default(CommonReportsubsectionpart))
        {
            // to ensure "objReportsubsectionpartHeader" is required (not null)
            if (objReportsubsectionpartHeader == null)
            {
                throw new ArgumentNullException("objReportsubsectionpartHeader is a required property for CommonReportsubsection and cannot be null");
            }
            this.ObjReportsubsectionpartHeader = objReportsubsectionpartHeader;
            // to ensure "objReportsubsectionpartBody" is required (not null)
            if (objReportsubsectionpartBody == null)
            {
                throw new ArgumentNullException("objReportsubsectionpartBody is a required property for CommonReportsubsection and cannot be null");
            }
            this.ObjReportsubsectionpartBody = objReportsubsectionpartBody;
            // to ensure "objReportsubsectionpartFooter" is required (not null)
            if (objReportsubsectionpartFooter == null)
            {
                throw new ArgumentNullException("objReportsubsectionpartFooter is a required property for CommonReportsubsection and cannot be null");
            }
            this.ObjReportsubsectionpartFooter = objReportsubsectionpartFooter;
        }

        /// <summary>
        /// Gets or Sets ObjReportsubsectionpartHeader
        /// </summary>
        [DataMember(Name = "objReportsubsectionpartHeader", IsRequired = true, EmitDefaultValue = true)]
        public CommonReportsubsectionpart ObjReportsubsectionpartHeader { get; set; }

        /// <summary>
        /// Gets or Sets ObjReportsubsectionpartBody
        /// </summary>
        [DataMember(Name = "objReportsubsectionpartBody", IsRequired = true, EmitDefaultValue = true)]
        public CommonReportsubsectionpart ObjReportsubsectionpartBody { get; set; }

        /// <summary>
        /// Gets or Sets ObjReportsubsectionpartFooter
        /// </summary>
        [DataMember(Name = "objReportsubsectionpartFooter", IsRequired = true, EmitDefaultValue = true)]
        public CommonReportsubsectionpart ObjReportsubsectionpartFooter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommonReportsubsection {\n");
            sb.Append("  ObjReportsubsectionpartHeader: ").Append(ObjReportsubsectionpartHeader).Append("\n");
            sb.Append("  ObjReportsubsectionpartBody: ").Append(ObjReportsubsectionpartBody).Append("\n");
            sb.Append("  ObjReportsubsectionpartFooter: ").Append(ObjReportsubsectionpartFooter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
