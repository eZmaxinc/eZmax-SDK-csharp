/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// Payload for GET /1/object/branding/getList
    /// </summary>
    [DataContract(Name = "branding-getList-v1-Response-mPayload")]
    public partial class BrandingGetListV1ResponseMPayload : IEquatable<BrandingGetListV1ResponseMPayload>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BrandingGetListV1ResponseMPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BrandingGetListV1ResponseMPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BrandingGetListV1ResponseMPayload" /> class.
        /// </summary>
        /// <param name="iRowReturned">The number of rows returned (required).</param>
        /// <param name="iRowFiltered">The number of rows matching your filters (if any) or the total number of rows (required).</param>
        /// <param name="aObjBranding">aObjBranding (required).</param>
        public BrandingGetListV1ResponseMPayload(int iRowReturned = default(int), int iRowFiltered = default(int), List<BrandingListElement> aObjBranding = default(List<BrandingListElement>))
        {
            this.IRowReturned = iRowReturned;
            this.IRowFiltered = iRowFiltered;
            // to ensure "aObjBranding" is required (not null)
            if (aObjBranding == null)
            {
                throw new ArgumentNullException("aObjBranding is a required property for BrandingGetListV1ResponseMPayload and cannot be null");
            }
            this.AObjBranding = aObjBranding;
        }

        /// <summary>
        /// The number of rows returned
        /// </summary>
        /// <value>The number of rows returned</value>
        /// <example>100</example>
        [DataMember(Name = "iRowReturned", IsRequired = true, EmitDefaultValue = true)]
        public int IRowReturned { get; set; }

        /// <summary>
        /// The number of rows matching your filters (if any) or the total number of rows
        /// </summary>
        /// <value>The number of rows matching your filters (if any) or the total number of rows</value>
        /// <example>533</example>
        [DataMember(Name = "iRowFiltered", IsRequired = true, EmitDefaultValue = true)]
        public int IRowFiltered { get; set; }

        /// <summary>
        /// Gets or Sets AObjBranding
        /// </summary>
        [DataMember(Name = "a_objBranding", IsRequired = true, EmitDefaultValue = true)]
        public List<BrandingListElement> AObjBranding { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BrandingGetListV1ResponseMPayload {\n");
            sb.Append("  IRowReturned: ").Append(IRowReturned).Append("\n");
            sb.Append("  IRowFiltered: ").Append(IRowFiltered).Append("\n");
            sb.Append("  AObjBranding: ").Append(AObjBranding).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BrandingGetListV1ResponseMPayload);
        }

        /// <summary>
        /// Returns true if BrandingGetListV1ResponseMPayload instances are equal
        /// </summary>
        /// <param name="input">Instance of BrandingGetListV1ResponseMPayload to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BrandingGetListV1ResponseMPayload input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.IRowReturned == input.IRowReturned ||
                    this.IRowReturned.Equals(input.IRowReturned)
                ) && 
                (
                    this.IRowFiltered == input.IRowFiltered ||
                    this.IRowFiltered.Equals(input.IRowFiltered)
                ) && 
                (
                    this.AObjBranding == input.AObjBranding ||
                    this.AObjBranding != null &&
                    input.AObjBranding != null &&
                    this.AObjBranding.SequenceEqual(input.AObjBranding)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.IRowReturned.GetHashCode();
                hashCode = (hashCode * 59) + this.IRowFiltered.GetHashCode();
                if (this.AObjBranding != null)
                {
                    hashCode = (hashCode * 59) + this.AObjBranding.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
