/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// An Ezsigntemplatesignaturecustomdate Object
    /// </summary>
    [DataContract(Name = "ezsigntemplatesignaturecustomdate-Request")]
    public partial class EzsigntemplatesignaturecustomdateRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatesignaturecustomdateRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatesignaturecustomdateRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatesignaturecustomdateRequest" /> class.
        /// </summary>
        /// <param name="pkiEzsigntemplatesignaturecustomdateID">The unique ID of the Ezsigntemplatesignaturecustomdate.</param>
        /// <param name="iEzsigntemplatesignaturecustomdateX">The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate..</param>
        /// <param name="iEzsigntemplatesignaturecustomdateY">The Y coordinate (Vertical) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate..</param>
        /// <param name="iEzsigntemplatesignaturecustomdateOffsetx">The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left of the signature, you would use \&quot;200\&quot; for the X coordinate..</param>
        /// <param name="iEzsigntemplatesignaturecustomdateOffsety">The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the top of the signature, you would use \&quot;200\&quot; for the Y coordinate..</param>
        /// <param name="sEzsigntemplatesignaturecustomdateFormat">The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \&quot;Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\&quot; would become \&quot;Signature date: 01/06/2022 08:07\&quot;  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST |  (required).</param>
        public EzsigntemplatesignaturecustomdateRequest(int pkiEzsigntemplatesignaturecustomdateID = default(int), int iEzsigntemplatesignaturecustomdateX = default(int), int iEzsigntemplatesignaturecustomdateY = default(int), int iEzsigntemplatesignaturecustomdateOffsetx = default(int), int iEzsigntemplatesignaturecustomdateOffsety = default(int), string sEzsigntemplatesignaturecustomdateFormat = default(string))
        {
            // to ensure "sEzsigntemplatesignaturecustomdateFormat" is required (not null)
            if (sEzsigntemplatesignaturecustomdateFormat == null)
            {
                throw new ArgumentNullException("sEzsigntemplatesignaturecustomdateFormat is a required property for EzsigntemplatesignaturecustomdateRequest and cannot be null");
            }
            this.SEzsigntemplatesignaturecustomdateFormat = sEzsigntemplatesignaturecustomdateFormat;
            this.PkiEzsigntemplatesignaturecustomdateID = pkiEzsigntemplatesignaturecustomdateID;
            this.IEzsigntemplatesignaturecustomdateX = iEzsigntemplatesignaturecustomdateX;
            this.IEzsigntemplatesignaturecustomdateY = iEzsigntemplatesignaturecustomdateY;
            this.IEzsigntemplatesignaturecustomdateOffsetx = iEzsigntemplatesignaturecustomdateOffsetx;
            this.IEzsigntemplatesignaturecustomdateOffsety = iEzsigntemplatesignaturecustomdateOffsety;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatesignaturecustomdate
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatesignaturecustomdate</value>
        /* <example>58</example>*/
        [DataMember(Name = "pkiEzsigntemplatesignaturecustomdateID", EmitDefaultValue = false)]
        public int PkiEzsigntemplatesignaturecustomdateID { get; set; }

        /// <summary>
        /// The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
        /// </summary>
        /// <value>The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.</value>
        /* <example>200</example>*/
        [DataMember(Name = "iEzsigntemplatesignaturecustomdateX", EmitDefaultValue = false)]
        [Obsolete]
        public int IEzsigntemplatesignaturecustomdateX { get; set; }

        /// <summary>
        /// The Y coordinate (Vertical) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
        /// </summary>
        /// <value>The Y coordinate (Vertical) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.</value>
        /* <example>300</example>*/
        [DataMember(Name = "iEzsigntemplatesignaturecustomdateY", EmitDefaultValue = false)]
        [Obsolete]
        public int IEzsigntemplatesignaturecustomdateY { get; set; }

        /// <summary>
        /// The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left of the signature, you would use \&quot;200\&quot; for the X coordinate.
        /// </summary>
        /// <value>The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left of the signature, you would use \&quot;200\&quot; for the X coordinate.</value>
        /* <example>200</example>*/
        [DataMember(Name = "iEzsigntemplatesignaturecustomdateOffsetx", EmitDefaultValue = false)]
        public int IEzsigntemplatesignaturecustomdateOffsetx { get; set; }

        /// <summary>
        /// The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the top of the signature, you would use \&quot;200\&quot; for the Y coordinate.
        /// </summary>
        /// <value>The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the top of the signature, you would use \&quot;200\&quot; for the Y coordinate.</value>
        /* <example>200</example>*/
        [DataMember(Name = "iEzsigntemplatesignaturecustomdateOffsety", EmitDefaultValue = false)]
        public int IEzsigntemplatesignaturecustomdateOffsety { get; set; }

        /// <summary>
        /// The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \&quot;Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\&quot; would become \&quot;Signature date: 01/06/2022 08:07\&quot;  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST | 
        /// </summary>
        /// <value>The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \&quot;Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\&quot; would become \&quot;Signature date: 01/06/2022 08:07\&quot;  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST | </value>
        /* <example>Signature date: {YYYY}/{MM}/{DD} {hh}:{mm}{ss} {Z}</example>*/
        [DataMember(Name = "sEzsigntemplatesignaturecustomdateFormat", IsRequired = true, EmitDefaultValue = true)]
        public string SEzsigntemplatesignaturecustomdateFormat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplatesignaturecustomdateRequest {\n");
            sb.Append("  PkiEzsigntemplatesignaturecustomdateID: ").Append(PkiEzsigntemplatesignaturecustomdateID).Append("\n");
            sb.Append("  IEzsigntemplatesignaturecustomdateX: ").Append(IEzsigntemplatesignaturecustomdateX).Append("\n");
            sb.Append("  IEzsigntemplatesignaturecustomdateY: ").Append(IEzsigntemplatesignaturecustomdateY).Append("\n");
            sb.Append("  IEzsigntemplatesignaturecustomdateOffsetx: ").Append(IEzsigntemplatesignaturecustomdateOffsetx).Append("\n");
            sb.Append("  IEzsigntemplatesignaturecustomdateOffsety: ").Append(IEzsigntemplatesignaturecustomdateOffsety).Append("\n");
            sb.Append("  SEzsigntemplatesignaturecustomdateFormat: ").Append(SEzsigntemplatesignaturecustomdateFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsigntemplatesignaturecustomdateID (int) minimum
            if (this.PkiEzsigntemplatesignaturecustomdateID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzsigntemplatesignaturecustomdateID, must be a value greater than or equal to 0.", new [] { "PkiEzsigntemplatesignaturecustomdateID" });
            }

            // IEzsigntemplatesignaturecustomdateX (int) minimum
            if (this.IEzsigntemplatesignaturecustomdateX < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzsigntemplatesignaturecustomdateX, must be a value greater than or equal to 0.", new [] { "IEzsigntemplatesignaturecustomdateX" });
            }

            // IEzsigntemplatesignaturecustomdateY (int) minimum
            if (this.IEzsigntemplatesignaturecustomdateY < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzsigntemplatesignaturecustomdateY, must be a value greater than or equal to 0.", new [] { "IEzsigntemplatesignaturecustomdateY" });
            }

            yield break;
        }
    }

}
