/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Ezsigntemplatepackagesignermembership Object
    /// </summary>
    [DataContract(Name = "ezsigntemplatepackagesignermembership-Request")]
    public partial class EzsigntemplatepackagesignermembershipRequest : IEquatable<EzsigntemplatepackagesignermembershipRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagesignermembershipRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsigntemplatepackagesignermembershipRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsigntemplatepackagesignermembershipRequest" /> class.
        /// </summary>
        /// <param name="pkiEzsigntemplatepackagesignermembershipID">The unique ID of the Ezsigntemplatepackagesignermembership.</param>
        /// <param name="fkiEzsigntemplatepackagemembershipID">The unique ID of the Ezsigntemplatepackagemembership (required).</param>
        /// <param name="fkiEzsigntemplatepackagesignerID">The unique ID of the Ezsigntemplatepackagesigner (required).</param>
        /// <param name="fkiEzsigntemplatesignerID">The unique ID of the Ezsigntemplatesigner (required).</param>
        /// <param name="iEzsigntemplatepackagesignermembershipCopy">The Copy number in case of multiple copies..</param>
        public EzsigntemplatepackagesignermembershipRequest(int pkiEzsigntemplatepackagesignermembershipID = default(int), int fkiEzsigntemplatepackagemembershipID = default(int), int fkiEzsigntemplatepackagesignerID = default(int), int fkiEzsigntemplatesignerID = default(int), int iEzsigntemplatepackagesignermembershipCopy = default(int))
        {
            this.FkiEzsigntemplatepackagemembershipID = fkiEzsigntemplatepackagemembershipID;
            this.FkiEzsigntemplatepackagesignerID = fkiEzsigntemplatepackagesignerID;
            this.FkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
            this.PkiEzsigntemplatepackagesignermembershipID = pkiEzsigntemplatepackagesignermembershipID;
            this.IEzsigntemplatepackagesignermembershipCopy = iEzsigntemplatepackagesignermembershipCopy;
        }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagesignermembership
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagesignermembership</value>
        /// <example>237</example>
        [DataMember(Name = "pkiEzsigntemplatepackagesignermembershipID", EmitDefaultValue = false)]
        public int PkiEzsigntemplatepackagesignermembershipID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagemembership
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagemembership</value>
        /// <example>194</example>
        [DataMember(Name = "fkiEzsigntemplatepackagemembershipID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatepackagemembershipID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatepackagesigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatepackagesigner</value>
        /// <example>174</example>
        [DataMember(Name = "fkiEzsigntemplatepackagesignerID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatepackagesignerID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsigntemplatesigner
        /// </summary>
        /// <value>The unique ID of the Ezsigntemplatesigner</value>
        /// <example>9</example>
        [DataMember(Name = "fkiEzsigntemplatesignerID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsigntemplatesignerID { get; set; }

        /// <summary>
        /// The Copy number in case of multiple copies.
        /// </summary>
        /// <value>The Copy number in case of multiple copies.</value>
        /// <example>1</example>
        [DataMember(Name = "iEzsigntemplatepackagesignermembershipCopy", EmitDefaultValue = false)]
        public int IEzsigntemplatepackagesignermembershipCopy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsigntemplatepackagesignermembershipRequest {\n");
            sb.Append("  PkiEzsigntemplatepackagesignermembershipID: ").Append(PkiEzsigntemplatepackagesignermembershipID).Append("\n");
            sb.Append("  FkiEzsigntemplatepackagemembershipID: ").Append(FkiEzsigntemplatepackagemembershipID).Append("\n");
            sb.Append("  FkiEzsigntemplatepackagesignerID: ").Append(FkiEzsigntemplatepackagesignerID).Append("\n");
            sb.Append("  FkiEzsigntemplatesignerID: ").Append(FkiEzsigntemplatesignerID).Append("\n");
            sb.Append("  IEzsigntemplatepackagesignermembershipCopy: ").Append(IEzsigntemplatepackagesignermembershipCopy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EzsigntemplatepackagesignermembershipRequest);
        }

        /// <summary>
        /// Returns true if EzsigntemplatepackagesignermembershipRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of EzsigntemplatepackagesignermembershipRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EzsigntemplatepackagesignermembershipRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PkiEzsigntemplatepackagesignermembershipID == input.PkiEzsigntemplatepackagesignermembershipID ||
                    this.PkiEzsigntemplatepackagesignermembershipID.Equals(input.PkiEzsigntemplatepackagesignermembershipID)
                ) && 
                (
                    this.FkiEzsigntemplatepackagemembershipID == input.FkiEzsigntemplatepackagemembershipID ||
                    this.FkiEzsigntemplatepackagemembershipID.Equals(input.FkiEzsigntemplatepackagemembershipID)
                ) && 
                (
                    this.FkiEzsigntemplatepackagesignerID == input.FkiEzsigntemplatepackagesignerID ||
                    this.FkiEzsigntemplatepackagesignerID.Equals(input.FkiEzsigntemplatepackagesignerID)
                ) && 
                (
                    this.FkiEzsigntemplatesignerID == input.FkiEzsigntemplatesignerID ||
                    this.FkiEzsigntemplatesignerID.Equals(input.FkiEzsigntemplatesignerID)
                ) && 
                (
                    this.IEzsigntemplatepackagesignermembershipCopy == input.IEzsigntemplatepackagesignermembershipCopy ||
                    this.IEzsigntemplatepackagesignermembershipCopy.Equals(input.IEzsigntemplatepackagesignermembershipCopy)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PkiEzsigntemplatepackagesignermembershipID.GetHashCode();
                hashCode = (hashCode * 59) + this.FkiEzsigntemplatepackagemembershipID.GetHashCode();
                hashCode = (hashCode * 59) + this.FkiEzsigntemplatepackagesignerID.GetHashCode();
                hashCode = (hashCode * 59) + this.FkiEzsigntemplatesignerID.GetHashCode();
                hashCode = (hashCode * 59) + this.IEzsigntemplatepackagesignermembershipCopy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsigntemplatepackagesignermembershipID (int) minimum
            if (this.PkiEzsigntemplatepackagesignermembershipID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzsigntemplatepackagesignermembershipID, must be a value greater than or equal to 0.", new [] { "PkiEzsigntemplatepackagesignermembershipID" });
            }

            // FkiEzsigntemplatepackagemembershipID (int) minimum
            if (this.FkiEzsigntemplatepackagemembershipID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatepackagemembershipID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackagemembershipID" });
            }

            // FkiEzsigntemplatepackagesignerID (int) minimum
            if (this.FkiEzsigntemplatepackagesignerID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatepackagesignerID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatepackagesignerID" });
            }

            // FkiEzsigntemplatesignerID (int) minimum
            if (this.FkiEzsigntemplatesignerID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsigntemplatesignerID, must be a value greater than or equal to 0.", new [] { "FkiEzsigntemplatesignerID" });
            }

            // IEzsigntemplatepackagesignermembershipCopy (int) minimum
            if (this.IEzsigntemplatepackagesignermembershipCopy < (int)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzsigntemplatepackagesignermembershipCopy, must be a value greater than or equal to 1.", new [] { "IEzsigntemplatepackagesignermembershipCopy" });
            }

            yield break;
        }
    }

}
