/*
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// An Ezsignbulksendtransmission Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "ezsignbulksendtransmission-ResponseCompound")]
    public partial class EzsignbulksendtransmissionResponseCompound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendtransmissionResponseCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EzsignbulksendtransmissionResponseCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EzsignbulksendtransmissionResponseCompound" /> class.
        /// </summary>
        /// <param name="pkiEzsignbulksendtransmissionID">The unique ID of the Ezsignbulksendtransmission (required).</param>
        /// <param name="fkiEzsignbulksendID">The unique ID of the Ezsignbulksend (required).</param>
        /// <param name="sEzsignbulksendtransmissionDescription">The description of the Ezsignbulksendtransmission (required).</param>
        /// <param name="iEzsignbulksendtransmissionErrors">The number of errors during the Ezsignbulksendtransmission (required).</param>
        /// <param name="objAudit">objAudit (required).</param>
        /// <param name="aObjEzsignfoldertransmission">aObjEzsignfoldertransmission (required).</param>
        public EzsignbulksendtransmissionResponseCompound(int pkiEzsignbulksendtransmissionID = default(int), int fkiEzsignbulksendID = default(int), string sEzsignbulksendtransmissionDescription = default(string), int iEzsignbulksendtransmissionErrors = default(int), CommonAudit objAudit = default(CommonAudit), List<CustomEzsignfoldertransmissionResponse> aObjEzsignfoldertransmission = default(List<CustomEzsignfoldertransmissionResponse>))
        {
            this.PkiEzsignbulksendtransmissionID = pkiEzsignbulksendtransmissionID;
            this.FkiEzsignbulksendID = fkiEzsignbulksendID;
            // to ensure "sEzsignbulksendtransmissionDescription" is required (not null)
            if (sEzsignbulksendtransmissionDescription == null)
            {
                throw new ArgumentNullException("sEzsignbulksendtransmissionDescription is a required property for EzsignbulksendtransmissionResponseCompound and cannot be null");
            }
            this.SEzsignbulksendtransmissionDescription = sEzsignbulksendtransmissionDescription;
            this.IEzsignbulksendtransmissionErrors = iEzsignbulksendtransmissionErrors;
            // to ensure "objAudit" is required (not null)
            if (objAudit == null)
            {
                throw new ArgumentNullException("objAudit is a required property for EzsignbulksendtransmissionResponseCompound and cannot be null");
            }
            this.ObjAudit = objAudit;
            // to ensure "aObjEzsignfoldertransmission" is required (not null)
            if (aObjEzsignfoldertransmission == null)
            {
                throw new ArgumentNullException("aObjEzsignfoldertransmission is a required property for EzsignbulksendtransmissionResponseCompound and cannot be null");
            }
            this.AObjEzsignfoldertransmission = aObjEzsignfoldertransmission;
        }

        /// <summary>
        /// The unique ID of the Ezsignbulksendtransmission
        /// </summary>
        /// <value>The unique ID of the Ezsignbulksendtransmission</value>
        /* <example>21</example>*/
        [DataMember(Name = "pkiEzsignbulksendtransmissionID", IsRequired = true, EmitDefaultValue = true)]
        public int PkiEzsignbulksendtransmissionID { get; set; }

        /// <summary>
        /// The unique ID of the Ezsignbulksend
        /// </summary>
        /// <value>The unique ID of the Ezsignbulksend</value>
        /* <example>8</example>*/
        [DataMember(Name = "fkiEzsignbulksendID", IsRequired = true, EmitDefaultValue = true)]
        public int FkiEzsignbulksendID { get; set; }

        /// <summary>
        /// The description of the Ezsignbulksendtransmission
        /// </summary>
        /// <value>The description of the Ezsignbulksendtransmission</value>
        /* <example>Test eZsign Bulk Send Transmission #1</example>*/
        [DataMember(Name = "sEzsignbulksendtransmissionDescription", IsRequired = true, EmitDefaultValue = true)]
        public string SEzsignbulksendtransmissionDescription { get; set; }

        /// <summary>
        /// The number of errors during the Ezsignbulksendtransmission
        /// </summary>
        /// <value>The number of errors during the Ezsignbulksendtransmission</value>
        /* <example>1</example>*/
        [DataMember(Name = "iEzsignbulksendtransmissionErrors", IsRequired = true, EmitDefaultValue = true)]
        public int IEzsignbulksendtransmissionErrors { get; set; }

        /// <summary>
        /// Gets or Sets ObjAudit
        /// </summary>
        [DataMember(Name = "objAudit", IsRequired = true, EmitDefaultValue = true)]
        public CommonAudit ObjAudit { get; set; }

        /// <summary>
        /// Gets or Sets AObjEzsignfoldertransmission
        /// </summary>
        [DataMember(Name = "a_objEzsignfoldertransmission", IsRequired = true, EmitDefaultValue = true)]
        public List<CustomEzsignfoldertransmissionResponse> AObjEzsignfoldertransmission { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EzsignbulksendtransmissionResponseCompound {\n");
            sb.Append("  PkiEzsignbulksendtransmissionID: ").Append(PkiEzsignbulksendtransmissionID).Append("\n");
            sb.Append("  FkiEzsignbulksendID: ").Append(FkiEzsignbulksendID).Append("\n");
            sb.Append("  SEzsignbulksendtransmissionDescription: ").Append(SEzsignbulksendtransmissionDescription).Append("\n");
            sb.Append("  IEzsignbulksendtransmissionErrors: ").Append(IEzsignbulksendtransmissionErrors).Append("\n");
            sb.Append("  ObjAudit: ").Append(ObjAudit).Append("\n");
            sb.Append("  AObjEzsignfoldertransmission: ").Append(AObjEzsignfoldertransmission).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PkiEzsignbulksendtransmissionID (int) minimum
            if (this.PkiEzsignbulksendtransmissionID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PkiEzsignbulksendtransmissionID, must be a value greater than or equal to 0.", new [] { "PkiEzsignbulksendtransmissionID" });
            }

            // FkiEzsignbulksendID (int) minimum
            if (this.FkiEzsignbulksendID < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FkiEzsignbulksendID, must be a value greater than or equal to 0.", new [] { "FkiEzsignbulksendID" });
            }

            // IEzsignbulksendtransmissionErrors (int) minimum
            if (this.IEzsignbulksendtransmissionErrors < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IEzsignbulksendtransmissionErrors, must be a value greater than or equal to 0.", new [] { "IEzsignbulksendtransmissionErrors" });
            }

            yield break;
        }
    }

}
